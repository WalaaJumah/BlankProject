Index: src/test/resources/GenerateReport.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\">\r\n<!--<suite name=\" Test\" thread-count=\"1\" >-->\r\n<suite name=\"Automation Reports\"  >\r\n    <listeners>\r\n        <listener class-name=\"retry_failed_test_cases.AnnotationTransfer\"/>\r\n        <listener class-name=\"extent_report_listner.ExtentReportListener\" />\r\n    </listeners>\r\n<!--    <test name=\"Smoke Testing Result- Production\" preserve-order=\"true\">-->\r\n<!--        <parameter name=\"environment\" value=\"https://www.sporter.com\" />-->\r\n<!--        <parameter name=\"browser\" value=\"chrome\" />-->\r\n<!--        &lt;!&ndash;        <parameter name=\"country\" value=\"en-qa\" />&ndash;&gt;-->\r\n<!--        <groups>-->\r\n<!--            <run>-->\r\n<!--                <include name=\"Smoke Testing Result\"/>-->\r\n<!--            </run>-->\r\n<!--        </groups>-->\r\n<!--        <classes>-->\r\n<!--            <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeCartTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.QatarHomePageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n<!--&lt;!&ndash;            <class name=\"sporter_test.AeBrandsTestCases\"/>&ndash;&gt;-->\r\n<!--            <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n<!--        </classes>-->\r\n<!--    </test>-->\r\n\r\n\r\n<!--    <test name=\" System Testing Report- Production\" preserve-order=\"true\">-->\r\n        <!--        Guidelines:-->\r\n        <!--         1. To test on production Env, change the value to \"https://www.sporter.com\".-->\r\n        <!--         2. To test on stgTest Env, change the value to \"https://stg-test.sporter.com\".-->\r\n        <!--         3. To test on stg Env, change the value to \"https://stg.sporter.com/\".-->\r\n        <!--         4. To test on Staging2 Env, change the value to \"https://staging2.sporter.com\". -->\r\n<!--        <parameter name=\"environment\" value=\"https://www.sporter.com\" />-->\r\n<!--        <parameter name=\"browser\" value=\"chrome\" />-->\r\n<!--        <parameter name=\"country\" value=\"en-qa\" />-->\r\n<!--        <classes>-->\r\n<!--                        <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeCartTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.QatarHomePageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n    <!--&lt;!&ndash;            <class name=\"sporter_test.AeBrandsTestCases\"/>&ndash;&gt;-->\r\n    <!--            <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n<!--        </classes>-->\r\n\r\n<!--    </test>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--    <test name=\" System Testing Report- STG\" preserve-order=\"true\">-->\r\n<!--        &lt;!&ndash;        Guidelines:&ndash;&gt;-->\r\n<!--        &lt;!&ndash;         1. To test on production Env, change the value to \"https://www.sporter.com\".&ndash;&gt;-->\r\n<!--        &lt;!&ndash;         2. To test on stgTest Env, change the value to \"https://stg-test.sporter.com\".&ndash;&gt;-->\r\n<!--        &lt;!&ndash;         3. To test on stg Env, change the value to \"https://stg.sporter.com\".&ndash;&gt;-->\r\n<!--        &lt;!&ndash;         4. To test on Staging2 Env, change the value to \"https://staging2.sporter.com\". &ndash;&gt;-->\r\n<!--        <parameter name=\"environment\" value=\"https://stg.sporter.com\" />-->\r\n<!--        <parameter name=\"browser\" value=\"chrome\" />-->\r\n<!--        &lt;!&ndash;        <parameter name=\"country\" value=\"en-qa\" />&ndash;&gt;-->\r\n<!--        <classes>-->\r\n<!--            <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeCartTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.QatarHomePageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n    <!--&lt;!&ndash;            <class name=\"sporter_test.AeBrandsTestCases\"/>&ndash;&gt;-->\r\n    <!--            <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n    <!--            <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n<!--        </classes>-->\r\n\r\n<!--    </test>-->\r\n\r\n\r\n    <test name=\"Smoke Testing Result- STG\" preserve-order=\"true\">\r\n        <parameter name=\"environment\" value=\"https://stg.sporter.com\" />\r\n        <parameter name=\"browser\" value=\"chrome\" />\r\n<!--        <parameter name=\"country\" value=\"en-qa\" />-->\r\n        <groups>\r\n            <run>\r\n                <include name=\"Smoke Testing Result\"/>\r\n            </run>\r\n        </groups>\r\n        <classes>\r\n                    <class name=\"sporter_test.AEGuestUserTestCases\"/>\r\n                    <class name=\"sporter_test.AeCartTestCases\"/>\r\n                    <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>\r\n                    <class name=\"sporter_test.QatarHomePageTestCases\"/>\r\n                    <class name=\"sporter_test.KsaHomePageTestCases\"/>\r\n                    <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>\r\n                    <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>\r\n                    <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>\r\n                    <class name=\"sporter_test.AeSportsCategoryTestCases\"/>\r\n                    <class name=\"sporter_test.AeSearchPageTestCases\"/>\r\n                    <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>\r\n                    <class name=\"sporter_test.AEMegaMenuTestCases\"/>\r\n                    <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>\r\n                    <class name=\"sporter_test.AEFooterPageTestCases\"/>\r\n        <!--            <class name=\"sporter_test.AeBrandsTestCases\"/>-->\r\n                    <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>\r\n                    <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>\r\n                </classes>\r\n    </test>\r\n\r\n</suite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/GenerateReport.xml b/src/test/resources/GenerateReport.xml
--- a/src/test/resources/GenerateReport.xml	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/resources/GenerateReport.xml	(date 1673265423074)
@@ -6,6 +6,7 @@
         <listener class-name="retry_failed_test_cases.AnnotationTransfer"/>
         <listener class-name="extent_report_listner.ExtentReportListener" />
     </listeners>
+<<<<<<< HEAD
 <!--    <test name="Smoke Testing Result- Production" preserve-order="true">-->
 <!--        <parameter name="environment" value="https://www.sporter.com" />-->
 <!--        <parameter name="browser" value="chrome" />-->
@@ -38,11 +39,46 @@
 
 
 <!--    <test name=" System Testing Report- Production" preserve-order="true">-->
+=======
+    <test name="Smoke Testing Result- Production" preserve-order="true">
+        <parameter name="environment" value="https://www.sporter.com" />
+        <parameter name="browser" value="chrome" />
+        <!--        <parameter name="country" value="en-qa" />-->
+        <groups>
+            <run>
+                <include name="Smoke Testing Result"/>
+            </run>
+        </groups>
+        <classes>
+            <class name="sporter_test.AEGuestUserTestCases"/>
+            <class name="sporter_test.AeCartTestCases"/>
+            <class name="sporter_test.AeRecommendedProductsTestCases"/>
+            <class name="sporter_test.QatarHomePageTestCases"/>
+            <class name="sporter_test.KsaHomePageTestCases"/>
+            <class name="sporter_test.AeWomenOnlyCategoryTestCases"/>
+            <class name="sporter_test.AeVitaminsAndHealthCategoryTestCases"/>
+            <class name="sporter_test.AeSportSupplementsCategoryTestCases"/>
+            <class name="sporter_test.AeSportsCategoryTestCases"/>
+            <class name="sporter_test.AeSearchPageTestCases"/>
+            <class name="sporter_test.AeProductDetailsPageTestCases"/>
+            <class name="sporter_test.AEMegaMenuTestCases"/>
+            <class name="sporter_test.AeHealthyFoodCategoryTestCases"/>
+            <class name="sporter_test.AEFooterPageTestCases"/>
+            <class name="sporter_test.AeBrandsTestCases"/>
+            <class name="sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases"/>
+            <class name="sporter_test.AccessAllStoresCountriesTestCases"/>
+        </classes>
+    </test>
+
+
+    <test name=" System Testing Report- Production" preserve-order="true">
+>>>>>>> origin/master
         <!--        Guidelines:-->
         <!--         1. To test on production Env, change the value to "https://www.sporter.com".-->
         <!--         2. To test on stgTest Env, change the value to "https://stg-test.sporter.com".-->
         <!--         3. To test on stg Env, change the value to "https://stg.sporter.com/".-->
         <!--         4. To test on Staging2 Env, change the value to "https://staging2.sporter.com". -->
+<<<<<<< HEAD
 <!--        <parameter name="environment" value="https://www.sporter.com" />-->
 <!--        <parameter name="browser" value="chrome" />-->
 <!--        <parameter name="country" value="en-qa" />-->
@@ -67,12 +103,41 @@
 <!--        </classes>-->
 
 <!--    </test>-->
+=======
+        <parameter name="environment" value="https://www.sporter.com" />
+        <parameter name="browser" value="chrome" />
+<!--        <parameter name="country" value="en-qa" />-->
+        <classes>
+                        <class name="sporter_test.QatarHomePageTestCases"/>
+                          <class name="sporter_test.KsaHomePageTestCases"/>
+                        <class name="sporter_test.AEFooterPageTestCases"/>
+                        <class name="sporter_test.AeWomenOnlyCategoryTestCases"/>
+                        <class name="sporter_test.AeVitaminsAndHealthCategoryTestCases"/>
+                        <class name="sporter_test.AeSportSupplementsCategoryTestCases"/>
+                        <class name="sporter_test.AeSportsCategoryTestCases"/>
+                        <class name="sporter_test.AeSearchPageTestCases"/>
+                        <class name="sporter_test.AeRecommendedProductsTestCases"/>
+                        <class name="sporter_test.AeProductDetailsPageTestCases"/>
+                        <class name="sporter_test.AEMegaMenuTestCases"/>
+                        <class name="sporter_test.AeHealthyFoodCategoryTestCases"/>
+                        <class name="sporter_test.AEGuestUserTestCases"/>
+                        <class name="sporter_test.AeCartTestCases"/>
+                        <class name="sporter_test.AeBrandsTestCases"/>
+                        <class name="sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases"/>
+                        <class name="sporter_test.AccessAllStoresCountriesTestCases"/>
+        </classes>
+
+    </test>
 
 
+>>>>>>> origin/master
 
 
 
 
+
+
+<<<<<<< HEAD
 <!--    <test name=" System Testing Report- STG" preserve-order="true">-->
 <!--        &lt;!&ndash;        Guidelines:&ndash;&gt;-->
 <!--        &lt;!&ndash;         1. To test on production Env, change the value to "https://www.sporter.com".&ndash;&gt;-->
@@ -103,6 +168,37 @@
 <!--        </classes>-->
 
 <!--    </test>-->
+=======
+    <test name="Smoke Testing Result- STG" preserve-order="true">
+        <parameter name="environment" value="https://stg.sporter.com" />
+        <parameter name="browser" value="chrome" />
+<!--        <parameter name="country" value="en-qa" />-->
+        <groups>
+            <run>
+                <include name="Smoke Testing Result"/>
+            </run>
+        </groups>
+        <classes>
+            <class name="sporter_test.QatarHomePageTestCases"/>
+            <class name="sporter_test.KsaHomePageTestCases"/>
+            <class name="sporter_test.AeWomenOnlyCategoryTestCases"/>
+            <class name="sporter_test.AeVitaminsAndHealthCategoryTestCases"/>
+            <class name="sporter_test.AeSportSupplementsCategoryTestCases"/>
+            <class name="sporter_test.AeSportsCategoryTestCases"/>
+            <class name="sporter_test.AeSearchPageTestCases"/>
+            <class name="sporter_test.AeRecommendedProductsTestCases"/>
+            <class name="sporter_test.AeProductDetailsPageTestCases"/>
+            <class name="sporter_test.AEMegaMenuTestCases"/>
+            <class name="sporter_test.AeHealthyFoodCategoryTestCases"/>
+            <class name="sporter_test.AEGuestUserTestCases"/>
+            <class name="sporter_test.AEFooterPageTestCases"/>
+            <class name="sporter_test.AeCartTestCases"/>
+            <class name="sporter_test.AeBrandsTestCases"/>
+            <class name="sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases"/>
+            <class name="sporter_test.AccessAllStoresCountriesTestCases"/>
+        </classes>
+    </test>
+>>>>>>> origin/master
 
 
     <test name="Smoke Testing Result- STG" preserve-order="true">
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1543f19a-355a-420f-8233-95e332a91e4b\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/core/BaseTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/core/BaseTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/core/DataHelperAndWait.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/core/DataHelperAndWait.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AeWomenOnlyCategoryPage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_pages/AeWomenOnlyCategoryPage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_pages/KsaHomePage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_pages/KsaHomePage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEFooterPageTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEFooterPageTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEGuestUserTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEGuestUserTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEMegaMenuTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AEMegaMenuTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeCartTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeCartTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeProductDetailsPageTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeProductDetailsPageTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeRecommendedProductsTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeRecommendedProductsTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSearchPageTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSearchPageTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSportsCategoryTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeSportsCategoryTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/KsaHomePageTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/KsaHomePageTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/sporter_test/QatarHomePageTestCases.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/sporter_test/QatarHomePageTestCases.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/GenerateReport.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/GenerateReport.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/TestExecution.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/TestExecution.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/extent-config.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/extent-config.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/ Test/ System Testing Report.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/ Test/ System Testing Report.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/ Test/testng-failed.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/ System Testing Report.properties\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/classes.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/groups.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/index.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/main.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/methods-alphabetical.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/methods-not-run.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/methods.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/reporter-output.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/testng.xml.html\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test-output/old/ Test/toc.html\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExportTestResults\" outputFolder=\"$USER_HOME$/Desktop\" userTempatePath=\"\" />\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2BgDSeo3klH6D3BXzszDMDxjS6B\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/java&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;G:/My Drive/IdeaProjects/sporter-web-automation&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\w.jumaa\\IdeaProjects\\sporter-web-automation\\src\\test\\resources\\drivers\" />\r\n      <recent name=\"C:\\Users\\w.jumaa\\IdeaProjects\\sporter-web-automation\\src\\test\\resources\" />\r\n      <recent name=\"C:\\Users\\w.jumaa\\IdeaProjects\\sporter-web-automation\\src\\main\\java\\sporter-pages\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"G:\\My Drive\\IdeaProjects\\sporter-web-automation\\src\\test\\resources\\drivers\" />\r\n      <recent name=\"C:\\Users\\w.jumaa\\IdeaProjects\\sporter-web-automation\\src\\test\\resources\\drivers\" />\r\n      <recent name=\"C:\\Users\\w.jumaa\\IdeaProjects\\sporter-web-automation\\src\\test\\resources\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"ProductDetailsPageTestCases.verifyAbilityToDisplayBundleAndSelectAllOptions\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/GenerateReport.xml\">\r\n    <configuration name=\"AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideAminoAcidsCategoryRelatedToSportSupplementsCategoryPage\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sporter-web-automation\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sporter_test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"sporter_test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\" />\r\n      <option name=\"METHOD_NAME\" value=\"verifyAbilityToAccessAllPagesInsideAminoAcidsCategoryRelatedToSportSupplementsCategoryPage\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideBCAACategoryRelatedToSportSupplementsCategoryPage\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sporter-web-automation\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sporter_test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"sporter_test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\" />\r\n      <option name=\"METHOD_NAME\" value=\"verifyAbilityToAccessAllPagesInsideBCAACategoryRelatedToSportSupplementsCategoryPage\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/GenerateReport.xml\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sporter-web-automation\" />\r\n      <option name=\"SUITE_NAME\" value=\"$PROJECT_DIR$/src/test/resources/GenerateReport.xml\" />\r\n      <option name=\"TEST_OBJECT\" value=\"SUITE\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/SmokeTestCrossBrowsers.xml\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sporter-web-automation\" />\r\n      <option name=\"SUITE_NAME\" value=\"$PROJECT_DIR$/src/test/resources/SmokeTestCrossBrowsers.xml\" />\r\n      <option name=\"TEST_OBJECT\" value=\"SUITE\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/TestExecution.xml\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sporter-web-automation\" />\r\n      <shortenClasspath name=\"NONE\" />\r\n      <useClassPathOnly />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sporter_pages.AeCartPage\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"SUITE_NAME\" value=\"$PROJECT_DIR$/src/test/resources/TestExecution.xml\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"GROUP_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"SUITE\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"OUTPUT_DIRECTORY\" value=\"\" />\r\n      <option name=\"PROPERTIES_FILE\" value=\"\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"TestNG.AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideAminoAcidsCategoryRelatedToSportSupplementsCategoryPage\" />\r\n      <item itemvalue=\"TestNG.AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideBCAACategoryRelatedToSportSupplementsCategoryPage\" />\r\n      <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/GenerateReport.xml\" />\r\n      <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/SmokeTestCrossBrowsers.xml\" />\r\n      <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/TestExecution.xml\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/GenerateReport.xml\" />\r\n        <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/TestExecution.xml\" />\r\n        <item itemvalue=\"TestNG.AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideBCAACategoryRelatedToSportSupplementsCategoryPage\" />\r\n        <item itemvalue=\"TestNG.AeAllPagesInsideCategoriesInMegaMenuTestCases.verifyAbilityToAccessAllPagesInsideAminoAcidsCategoryRelatedToSportSupplementsCategoryPage\" />\r\n        <item itemvalue=\"TestNG.C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/resources/SmokeTestCrossBrowsers.xml\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1543f19a-355a-420f-8233-95e332a91e4b\" name=\"Changes\" comment=\"\" />\r\n      <created>1657318838187</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1657318838187</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"bf2d73f6-c10a-4d72-974e-a548dd208fea\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"bf2d73f6-c10a-4d72-974e-a548dd208fea\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"TestNG\">\r\n        <watch expression=\"suites\" />\r\n        <watch expression=\"suites\" />\r\n        <watch expression=\"addToCartBtn\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XPathView.XPathProjectComponent\">\r\n    <history />\r\n    <find-history />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/sporter_web_automation$C__Users_w_jumaa_IdeaProjects_sporter_web_automation_src_test_resources_SmokeTest_xml.ic\" NAME=\"$PROJECT_DIR$/src/test/resources/SmokeTest.xml Coverage Results\" MODIFIED=\"1657796388803\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/sporter_web_automation$C__Users_w_jumaa_IdeaProjects_sporter_web_automation_src_test_resources_TestExecution_xml.ic\" NAME=\"$PROJECT_DIR$/src/test/resources/TestExecution.xml Coverage Results\" MODIFIED=\"1671601245197\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>sporter_pages.AeCartPage</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/sporter_web_automation$AeSportSupplementsCategoryTestCases_verifySportSupplementsCategoryImageAndHorizontalBannersAppearingAfterSortingTheProducts.ic\" NAME=\"AeSportSupplementsCategoryTestCases.verifySportSupplementsCategoryImageAndHorizontalBannersAppearingAfterSortingTheProducts Coverage Results\" MODIFIED=\"1666869381864\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>sporter_test.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/sporter_web_automation$Test.ic\" NAME=\"Test Coverage Results\" MODIFIED=\"1672294404497\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/sporter_web_automation$C__Users_w_jumaa_Downloads_automation_framework_enhanced_master_sporter_web_automation_src_test_resources_TestExecution_xml.ic\" NAME=\"$PROJECT_DIR$/src/test/resources/TestExecution.xml Coverage Results\" MODIFIED=\"1667468891959\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/.idea/workspace.xml	(date 1673265422366)
@@ -7,12 +7,18 @@
     <list default="true" id="1543f19a-355a-420f-8233-95e332a91e4b" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/core/BaseTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/core/BaseTest.java" afterDir="false" />
+<<<<<<< HEAD
       <change beforePath="$PROJECT_DIR$/src/main/java/core/DataHelperAndWait.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/core/DataHelperAndWait.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/AeWomenOnlyCategoryPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/AeWomenOnlyCategoryPage.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/KsaHomePage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/KsaHomePage.java" afterDir="false" />
+=======
+      <change beforePath="$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/extent_report_listner/ExtentReportListener.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/AEGuestUserPage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_pages/AeProductDetailsPage.java" afterDir="false" />
+>>>>>>> origin/master
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_test/AEFooterPageTestCases.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_test/AEFooterPageTestCases.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_test/AEGuestUserTestCases.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_test/AEGuestUserTestCases.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/sporter_test/AEMegaMenuTestCases.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/sporter_test/AEMegaMenuTestCases.java" afterDir="false" />
@@ -32,6 +38,7 @@
       <change beforePath="$PROJECT_DIR$/src/test/resources/GenerateReport.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/GenerateReport.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/resources/TestExecution.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/TestExecution.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/resources/extent-config.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/extent-config.xml" afterDir="false" />
+<<<<<<< HEAD
       <change beforePath="$PROJECT_DIR$/test-output/ Test/ System Testing Report.html" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/test-output/ Test/ System Testing Report.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/test-output/ Test/testng-failed.xml" beforeDir="false" />
@@ -46,6 +53,9 @@
       <change beforePath="$PROJECT_DIR$/test-output/old/ Test/reporter-output.html" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/test-output/old/ Test/testng.xml.html" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/test-output/old/ Test/toc.html" beforeDir="false" />
+=======
+      <change beforePath="$PROJECT_DIR$/test-output/old/ Test/classes.html" beforeDir="false" afterPath="$PROJECT_DIR$/test-output/old/ Test/classes.html" afterDir="false" />
+>>>>>>> origin/master
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -80,6 +90,7 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
+<<<<<<< HEAD
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
@@ -92,8 +103,22 @@
     &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
     &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
+=======
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "last_directory_selection": "C:/Users/w.jumaa/IdeaProjects/sporter-web-automation/src/test/java",
+    "last_opened_file_path": "C:/Users/w.jumaa/IdeaProjects/sporter-web-automation",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.2",
+    "run.code.analysis.last.selected.profile": "pProject Default",
+    "settings.editor.selected.configurable": "preferences.keymap"
+>>>>>>> origin/master
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\w.jumaa\IdeaProjects\sporter-web-automation\src\test\resources\drivers" />
Index: src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport org.testng.asserts.SoftAssert;\r\nimport sporter_pages.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.testng.Assert.assertFalse;\r\n\r\npublic class AeSportSupplementsCategoryTestCases extends BaseTest {\r\n    private AeProductDetailsPage aeProductDetailsPage;\r\n    private AEGuestUserPage aeGuestUserPage;\r\n    private Actions action;\r\n    private final String  sportSupplementsUrl=\"/sport-supplements/\";\r\n\r\n@Test(groups = \"Smoke Testing Result\",description = \"Sports Supplements Category- Switching to UAE store\", priority = 1)\r\npublic void switchToUaeStore(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n    aeSportSupplementsCategoryPage.switchToAECountry();\r\n    if(webDriver.getCurrentUrl().contains(aeSportSupplementsCategoryPage.aeDomain)){\r\n        System.out.println(\"You are in UAE Store\");\r\n    }\r\n    else {\r\n        webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n        CloseInitialDialog();      }\r\n}\r\n    @Test(groups = {\"Sports Supplements Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Sports Supplements Category- Make sure clicking on the Sports Supplements Category Appears In MegaMenu Redirect User To CorrectURL\", priority = 2)\r\n    public void verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {     \r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeSportSupplementsCategoryPage.getSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeSportSupplementsCategoryPage.getSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeSportSupplementsCategoryPage.getSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeSportSupplementsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Sports Supplements Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Sports Supplements Category- Make sure clicking on the Sports Supplements Category from ShopBy Menu Redirect User To CorrectURL\", priority = 3)\r\n    public void verifyClickingOnSportsSupplementsCategoryFromShopByMenuRedirectUserToCorrectURL() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeSportSupplementsCategoryPage.getShopeByMenu()).perform();\r\n        action.moveToElement(aeSportSupplementsCategoryPage.getSportsSupplementsOption()).perform();\r\n        String expectedUrl=aeSportSupplementsCategoryPage.getSportsSupplementsOption().getAttribute(\"href\");\r\n        aeSportSupplementsCategoryPage.getSportsSupplementsOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertTrue(webDriver.getCurrentUrl().contains(sportSupplementsUrl));\r\n        aeSportSupplementsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Sports Supplements Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Sports Supplements Category- Make sure clicking on the Sports Supplements Category from HomePage Redirect User To CorrectURL\", priority = 4)\r\n    public void verifyClickingOnSportsSupplementsCategoryFromHomePageRedirectUserToCorrectURL() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        webDriver.navigate().to(\"https://www.sporter.com\");\r\n        DataHelperAndWait.waitToBeClickable(aeSportSupplementsCategoryPage.getSportSupplementsCategoryInHomePage(), 5,webDriver);\r\n        aeSportSupplementsCategoryPage.getSportSupplementsCategoryInHomePage().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(sportSupplementsUrl));\r\n        aeSportSupplementsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure the Horizontal Category Image appears correctly in the landing page \", priority = 5)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSportSupplementsLandingPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly\", priority = 6)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInSportSupplementsLandingPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Sport Supplements\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure the Horizontal Banners appear correctly\", priority = 7)\r\n    public void verifyTheHorizontalBannersAppearCorrectlyInSportSupplementsLandingPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i),5,webDriver);\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Sports Supplements Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Sports Supplements Category- Make sure clicking on the Horizontal Banners works correctly \", priority = 8)\r\n    public void verifyClickingOnHorizontalBannersAppearingInSportSupplementsLandingPageOpensCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(0),5,webDriver);\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i),5,webDriver);\r\n            aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i).click();\r\n            aeSportSupplementsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            webDriver.navigate().back();\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Sports Supplements Category\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Sports Supplements Category- Make sure that the customer can navigate to the home page using the BreadCrumb \", priority = 9)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), aeSportSupplementsCategoryPage.BaseURL +aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category Page- Make sure that the Result label and its value appear correctly \", priority = 10)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSportSupplementsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category Page- Make sure that Sort By menu and its options appear correctly \", priority = 11)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure that the Best Selling option is selected by default in the Sort By menu \", priority = 12)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenu() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    //There's a bug here when sorting the products then the Horizontal Banners are hidden\r\n    @Test(description = \"Sports Supplements Category- Make sure each of the Sport Supplements category image and Horizontal Banners appearing after sorting the products  \", priority = 13)\r\n    public void verifySportSupplementsCategoryImageAndHorizontalBannersAppearingAfterSortingTheProducts() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Min-Max\");\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 3,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsSection().isDisplayed(),\"The Horizontal Banners is missing after sorting the products \");\r\n    }\r\n    @Test(description = \"Sports Supplements Category- Make sure Sort By Menu appears correctly in the page after sorting By Featured  \", priority = 14)\r\n    public void verifySortByMenuAppearingAfterSortingByBestSelling() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Featured\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure Sort By Menu appears correctly in the page after sorting By Price Min-Max  \", priority = 15)\r\n    public void verifySortByMenuAppearingAfterSortingByPriceMinMax() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Min-Max\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure Sort By Menu appears correctly in the page after sorting By Price Max-Min  \", priority = 16)\r\n    public void verifySortByMenuAppearingAfterSortingByPriceMaxMin() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Max-Min\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure  the Sport Supplements footer appears correctly  \", priority = 17)\r\n    public void verifySportSupplementsFooterSectionAppearsCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsFooterSection().getCssValue(\"background\"), \"rgb(242, 242, 242) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make sure the text appears in the Sport Supplements footer appears correctly  \", priority = 18)\r\n    public void verifyTheTextAppearInTheSportSupplementsFooterSectionAppearsCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInFooterSection().getText(), \"Sport Supplements\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsDescriptionInFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Verify that the search button works correctly from the Sport Supplements category page\", priority = 19)\r\n    public void verifySearchBtnWorksCorrectlyFromSportSupplementsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeSportSupplementsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Verify that the previous page button is disable when the current page is page 1 \", priority = 20)\r\n    public void verifyThePreviousBtnIsDisableWhenDisplayPage1() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make Sure the Pagination control works correctly\", priority = 21)\r\n    public void verifyThePaginationControlWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make Sure the previous page button works correctly\", priority = 22)\r\n    public void verifyPreviousPageBtnWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n  }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make Sure the next page button works correctly\", priority = 23)\r\n    public void verifyNextPageBtnWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Sports Supplements Category- Make Sure All Search Fields Inside Form Filtration Section Appears Correctly\", priority = 24)\r\n    public void verifyAllSearchFieldsInsideFormFiltrationSectionAppearsCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeSportSupplementsCategoryPage.navigate();\r\n        aeSportSupplementsCategoryPage.clickOnSeeAllBtnInFormSection();\r\n//        ArrayList<String> expectedFiltration = new ArrayList<>() {{\r\n//            add(\"Liquid Capsules\");\r\n//            add(\"Bars\");\r\n//            add(\"Caplets\");\r\n//            add(\"Capsules\");\r\n//            add(\"Cream\");\r\n//            add(\"Effervescent\");\r\n//            add(\"Gel\");\r\n//            add(\"Granulated\");\r\n//            add(\"Gummies\");\r\n//            add(\"Liquid\");\r\n//            add(\"Powders\");\r\n//            add(\"Sachet\");\r\n//            add(\"Softgel\");\r\n//            add(\"Tablets\");\r\n//            add(\"Pods\");\r\n//        }};\r\n//        for (int i = 0; i < aeSportSupplementsCategoryPage.getFormFiltrationSection().size(); i++) {\r\n//            Assert.assertEquals(aeSportSupplementsCategoryPage.getFormFiltrationSection().get(i).getText(), expectedFiltration.get(i));\r\n//        }\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getFormFiltrationSection().size(); i++){\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getFormFiltrationSection().get(i),2,webDriver);\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getFormFiltrationSection().get(i).isDisplayed());}\r\n    }\r\n    @Test(description = \"Sports Supplements Category- Make sure all secure tabs appears correctly(100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks)\", priority = 25)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //Pagination control for all pages in the Sport Supplements Category Pages\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Sports Supplements Category- Make Sure the ability to access all pages inside Sport Supplements Category Page  \", priority = 26)\r\n    public void verifyAbilityToAccessAllPagesInsideSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else {\r\n            DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList, aeSportSupplementsCategoryPage.getNextPageBtn(), webDriver);\r\n        }}\r\n    //There's a bug here due to the BreadCrumb is missing after sorting the products\r\n    @Test(description = \"Sports Supplements Category- Make sure that the BreadCrumb appears correctly after sorting the product \", priority = 27)\r\n    public void verifyTheBreadCrumbAppearingCorrectlyAfterSortingTheProducts() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByIndex(1);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getHomeBreadcrumbs(),5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getHomeBreadcrumbs().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Supplements Category- Make sure ability to navigate to the home page by clicking on the sporter logo  \", priority = 28)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeGuestUserPage= new AEGuestUserPage(webDriver);\r\n//        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), aeSportSupplementsCategoryPage.BaseURL +aeSiteURL,\" The Current URL is not matched with the Cart URL\" );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java b/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java
--- a/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeSportSupplementsCategoryTestCases.java	(date 1673265422848)
@@ -33,7 +33,11 @@
         webDriver.navigate().to(BasePage.BaseURL+aeDomain);
         CloseInitialDialog();      }
 }
+<<<<<<< HEAD
     @Test(groups = {"Sports Supplements Category","Smoke Testing Result","Critical Severity"},description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category Appears In MegaMenu Redirect User To CorrectURL", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category Appears In MegaMenu Redirect User To CorrectURL", priority = 2)
+>>>>>>> origin/master
     public void verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {     
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         action = new Actions(webDriver);
@@ -45,7 +49,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Supplements Category","Smoke Testing Result","Critical Severity"},description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category from ShopBy Menu Redirect User To CorrectURL", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category from ShopBy Menu Redirect User To CorrectURL", priority = 3)
+>>>>>>> origin/master
     public void verifyClickingOnSportsSupplementsCategoryFromShopByMenuRedirectUserToCorrectURL() {
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         action = new Actions(webDriver);
@@ -59,7 +67,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Supplements Category","Smoke Testing Result","Critical Severity"},description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category from HomePage Redirect User To CorrectURL", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Supplements Category- Make sure clicking on the Sports Supplements Category from HomePage Redirect User To CorrectURL", priority = 4)
+>>>>>>> origin/master
     public void verifyClickingOnSportsSupplementsCategoryFromHomePageRedirectUserToCorrectURL() {
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         webDriver.navigate().to("https://www.sporter.com");
@@ -99,7 +111,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Supplements Category","Smoke Testing Result","High Severity"},description = "Sports Supplements Category- Make sure clicking on the Horizontal Banners works correctly ", priority = 8)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Supplements Category- Make sure clicking on the Horizontal Banners works correctly ", priority = 8)
+>>>>>>> origin/master
     public void verifyClickingOnHorizontalBannersAppearingInSportSupplementsLandingPageOpensCorrectly() {
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
 //        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();
@@ -112,7 +128,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Supplements Category","Smoke Testing Result","Low Severity"},description = "Sports Supplements Category- Make sure that the customer can navigate to the home page using the BreadCrumb ", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Supplements Category- Make sure that the customer can navigate to the home page using the BreadCrumb ", priority = 9)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
 //        this.verifyClickingOnSportsSupplementsCategoryAppearsInMegaMenuRedirectUserToCorrectURL();
Index: src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * @author w.jumaa\r\n * @projectName sporter-web-automation\r\n * @classDescription AccessAllStoresCountriesTestCases\r\n */\r\n\r\npackage sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AccessAllStoresCountriesPage;\r\nimport sporter_pages.AeProductDetailsPage;\r\nimport sporter_pages.KsaHomePage;\r\nimport sporter_pages.QatarHomePage;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AccessAllStoresCountriesTestCases extends BaseTest {\r\n    @Test(groups = {\"Smoke Testing Result\",\"Critical Severity\"},description = \"Ability to access all stores\", priority = 1)\r\n    public void accessAllCountries(){\r\n        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"/en-ae\");\r\n            add(\"/en-sa\");\r\n            add(\"/en-bh\");\r\n            add(\"/en-jo\");\r\n            add(\"/en-eg\");\r\n            add(\"/en-kw\");\r\n            add(\"/en-om\");\r\n            add(\"/en-qa\");\r\n            add(\"/en-lb\");\r\n            add(\"/en-ae\");\r\n        }};\r\n        for(int i=0; i<accessAllStoresCountriesPage.getListOfCountry().size();i++){\r\n            DataHelperAndWait.waitToBeVisible(accessAllStoresCountriesPage.getCountryList(),5,webDriver);\r\n            accessAllStoresCountriesPage.getCountryList().click();\r\n            DataHelperAndWait.waitToBeVisible(accessAllStoresCountriesPage.getListOfCountry().get(i),5,webDriver);\r\n            accessAllStoresCountriesPage.getListOfCountry().get(i).click();\r\n            DataHelperAndWait.waitForUrlContains(expectedOption.get(i),webDriver,6);\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedOption.get(i)),\"Incorret URL: \"+ webDriver.getCurrentUrl()+\" While the Expected URL is: \"+BasePage.BaseURL+expectedOption.get(i));\r\n            System.out.println(\"The Current URL is: \"+webDriver.getCurrentUrl()+\"  And the Expected URL is:  \"+BasePage.BaseURL+expectedOption.get(i));\r\n        }\r\n\r\n    }\r\n\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Qatar Store\", priority = 1)\r\n//    public void switchToQatarStore() {\r\n//        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.switchToQatarCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +qatarHomePage.qatarDomain+\"/\");\r\n//        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//       @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Qatar Store\", priority = 2)\r\n//    public void switchLanguageInQatarStore() {\r\n//           AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//           QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//           qatarHomePage.switchToQatarCountry();\r\n//           accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//           Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//           accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//           Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//           qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//\r\n//     @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to UAE Store\", priority = 3)\r\n//    public void switchToUAEStore() {\r\n//        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//         aeProductDetailsPage.switchToAECountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+\"/\");\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in UAE Store\", priority = 4)\r\n//    public void switchLanguageInUAEStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        aeProductDetailsPage.switchToAECountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//       @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Jordan Store\", priority = 5)\r\n//    public void switchToJordanStore() {\r\n//        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//         aeProductDetailsPage.switchToJOCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.jordanDomain+\"/\");\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Jordan Store\", priority = 6)\r\n//    public void switchLanguageInJordanStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        aeProductDetailsPage.switchToJOCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//       @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to KSA Store\", priority = 7)\r\n//    public void switchToKSAStore() {\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//           ksaHomePage.switchToKsaCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +ksaHomePage.saudiDomain+\"/\");\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in KSA Store\", priority = 8)\r\n//    public void switchLanguageInKSAStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.switchToKsaCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Bahrain Store\", priority = 9)\r\n//    public void switchToBahrainStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//            accessAllStoresCountriesPage.switchToBahrainCountryCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +accessAllStoresCountriesPage.bahrainDomain+\"/\");\r\n//        accessAllStoresCountriesPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Bahrain Store\", priority = 10)\r\n//    public void switchLanguageInBahrainStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToBahrainCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Oman Store\", priority = 11)\r\n//    public void switchToOmanStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//            accessAllStoresCountriesPage.switchToOmanCountryCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +accessAllStoresCountriesPage.omanDomain+\"/\");\r\n//        accessAllStoresCountriesPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Oman Store\", priority = 12)\r\n//    public void switchLanguageInOmanStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToOmanCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Kuwait Store\", priority = 13)\r\n//    public void switchToKuwaitStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//            accessAllStoresCountriesPage.switchToKuwaitCountryCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +accessAllStoresCountriesPage.kuwaitDomain+\"/\");\r\n//        accessAllStoresCountriesPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Kuwait Store\", priority = 14)\r\n//    public void switchLanguageInKuwaitStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToKuwaitCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Egypt Store\", priority = 15)\r\n//    public void switchToEqyptStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//            accessAllStoresCountriesPage.switchToEgyptCountryCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +accessAllStoresCountriesPage.egyptDomain+\"/\");\r\n//        accessAllStoresCountriesPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Egypt Store\", priority = 16)\r\n//    public void switchLanguageIEgyptStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToEgyptCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to International Store\", priority = 17)\r\n//    public void switchToInternationalStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//            accessAllStoresCountriesPage.switchToInternationalCountryCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +accessAllStoresCountriesPage.aeDomain+\"/\");\r\n//        accessAllStoresCountriesPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in International Store\", priority = 18)\r\n//    public void switchLanguageIInternationalStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToInternationalCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//        @Test(groups = \"Smoke Testing Result\",description = \"Ability switching to Lebanon Store\", priority = 19)\r\n//    public void switchToLebanonlStore() {\r\n//            AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//            aeProductDetailsPage.switchToLebanonCountry();\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.lebanonDomain+\"/\");\r\n//        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n//    @Test(groups = \"Smoke Testing Result\",description = \"Ability switching between store language (Arabic & English) in Lebanon Store\", priority = 20)\r\n//    public void switchLanguageLebanonStore() {\r\n//        AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);\r\n//        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        accessAllStoresCountriesPage.switchToInternationalCountryCountry();\r\n//        accessAllStoresCountriesPage.getArabicLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getEnglishLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        accessAllStoresCountriesPage.getEnglishLanguageBtn().click();\r\n//        Assert.assertTrue(accessAllStoresCountriesPage.getArabicLanguageBtn().isDisplayed());\r\n//        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java b/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java
--- a/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AccessAllStoresCountriesTestCases.java	(date 1673265422569)
@@ -20,7 +20,11 @@
 import java.util.ArrayList;
 
 public class AccessAllStoresCountriesTestCases extends BaseTest {
+<<<<<<< HEAD
     @Test(groups = {"Smoke Testing Result","Critical Severity"},description = "Ability to access all stores", priority = 1)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Ability to access all stores", priority = 1)
+>>>>>>> origin/master
     public void accessAllCountries(){
         AccessAllStoresCountriesPage accessAllStoresCountriesPage = new AccessAllStoresCountriesPage(webDriver);
         ArrayList<String> expectedOption = new ArrayList<>() {{
Index: src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport org.testng.asserts.SoftAssert;\r\nimport sporter_pages.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.testng.Assert.assertFalse;\r\n\r\npublic class AeHealthyFoodCategoryTestCases extends BaseTest {\r\n    private AeProductDetailsPage aeProductDetailsPage;\r\n    private AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage;\r\n    private AEGuestUserPage aeGuestUserPage;\r\n    private Actions action;\r\n\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Healthy Food Category- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeHealthyFoodCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n\r\n    @Test(groups = {\"Healthy Food Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Healthy Food Category- Make sure clicking on the Healthy Food Category Appears In MegaMenu Redirect User To CorrectURL\", priority = 2)\r\n    public void verifyClickingOnHealthyFoodCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeHealthyFoodCategoryPage.getHealthyFoodMainMenu()).perform();\r\n        String expectedUrl=aeHealthyFoodCategoryPage.getHealthyFoodMainMenu().getAttribute(\"href\");\r\n        aeHealthyFoodCategoryPage.getHealthyFoodMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(groups = {\"Healthy Food Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Healthy Food Category- Make sure clicking on the Healthy Food Category from ShopBy Menu Redirect User To CorrectURL\", priority = 3)\r\n    public void verifyClickingOnHealthyFoodCategoryFromShopByMenuRedirectUserToCorrectURL() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeHealthyFoodCategoryPage.getShopeByMenu()).perform();\r\n        action.moveToElement(aeHealthyFoodCategoryPage.getHealthFoodOption()).perform();\r\n        String expectedUrl=aeHealthyFoodCategoryPage.getHealthFoodOption().getAttribute(\"href\");\r\n        aeHealthyFoodCategoryPage.getHealthFoodOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(groups = {\"Healthy Food Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Healthy Food Category- Make sure clicking on the Healthy Food Category from HomePage Redirect User To CorrectURL\", priority =4)\r\n    public void verifyClickingOnHealthyFoodCategoryFromHomePageRedirectUserToCorrectURL() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigateToHomePage();\r\n        aeHealthyFoodCategoryPage.getHealthyFoodCategoryInHomePage().click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(),aeHealthyFoodCategoryPage.BaseURL +aeHealthyFoodCategoryPage.aeDomain+aeHealthyFoodCategoryPage.healthyFoodsUrl);\r\n        aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure the Horizontal Category Image appears correctly in the Healthy Food landing page \", priority = 5)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInHealthyFoodLandingPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Healthy Food landing page \", priority = 6)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInHealthyFoodLandingPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        Assert.assertEquals(aeHealthyFoodCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Healthy Food\", \"Wrong title appears in the Healthy Food category image\");\r\n        Assert.assertEquals(aeHealthyFoodCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the Healthy Food category image\");\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure the Horizontal Banners appear correctly in the Healthy Food landing page \", priority = 7)\r\n    public void verifyTheHorizontalBannersAppearCorrectlyInHealthyFoodLandingPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i),6,webDriver);\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i).isDisplayed());\r\n        }\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure clicking on the Horizontal Banners appearing in the Healthy Food landing page opens correctly \", priority = 8)\r\n    public void verifyClickingOnHorizontalBannersAppearingInHealthyFoodLandingPageOpensCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i),6,webDriver);\r\n            aeSportSupplementsCategoryPage.getMainBannersInTheSportSupplementsScreen().get(i).click();\r\n            aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            webDriver.navigate().back();\r\n        }\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Healthy Food landing page \", priority = 9)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), aeHealthyFoodCategoryPage.BaseURL +aeHealthyFoodCategoryPage.aeSiteURL);\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure that the Result label and its value appear correctly in the Healthy Food Category page \", priority = 10)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheHealthyFoodCategoryPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure that Sort By menu and its options appear correctly \", priority = 11)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Newly added items\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n        }\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure that the Best Selling option is selected by default in the Sort By menu \", priority = 12)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenu() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n//    //There's a bug here\r\n    @Test(description = \"Healthy Food Category- Make sure each of the Healthy Food category image and Horizontal Banners appearing after sorting the products  \", priority = 13)\r\n    public void verifyHealthyFoodCategoryImageAndHorizontalBannersAppearingAfterSortingTheProducts()  {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        this.verifyClickingOnHealthyFoodCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Min-Max\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getMainBannersInTheSportSupplementsSection().isDisplayed());\r\n    }\r\n//    //There's a bug here\r\n    @Test(description = \"Healthy Food Category- Make sure Sort By Menu appears correctly in the page after sorting By Featured  \", priority = 14)\r\n    public void verifySortByMenuAppearingAfterSortingByRelevance() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Featured\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure Sort By Menu appears correctly in the page after sorting By Product Name  \", priority = 15)\r\n    public void verifySortByMenuAppearingAfterSortingByName() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Name\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure Sort By Menu appears correctly in the page after sorting By Best Selling  \", priority = 16)\r\n    public void verifySortByMenuAppearingAfterSortingByBestSelling(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Best Selling\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure Sort By Menu appears correctly in the page after sorting By Price Min-Max  \", priority = 17)\r\n    public void verifySortByMenuAppearingAfterSortingByPriceMinMax() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Min-Max\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure Sort By Menu appears correctly in the page after sorting By Price Max-Min  \", priority = 18)\r\n    public void verifySortByMenuAppearingAfterSortingByPriceMaxMin(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        select.selectByVisibleText(\"Price Max-Min\");\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSortByMenu().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure that the BreadCrumb correctly after sorting the product \", priority = 19)\r\n    public void verifyTheBreadCrumbAppearingCorrectlyAfterSortingTheProducts() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getHomeBreadcrumbs().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure  the Healthy Food footer appears correctly  \", priority = 20)\r\n    public void verifySportSupplementsFooterSectionAppearsCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getSportSupplementsFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeHealthyFoodCategoryPage.getSportSupplementsFooterSection().getCssValue(\"background\"), \"rgb(242, 242, 242) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure the text appears in the Healthy Food footer appears correctly  \", priority = 21)\r\n    public void verifyTheTextAppearInTheHealthyFoodFooterSectionAppearsCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Assert.assertEquals(aeHealthyFoodCategoryPage.getSportSupplementsTitleInFooterSection().getText(), \"Healthy Food\");\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getHealthyFoodDescriptionP1InFooterSection().getText().contains( \"If you spend a lot of time researching, trying to eat healthy foods, have a dedicated diet or food restrictions, or consistently buy organic or non-GMO foods online, you probably\" ));\r\n    }\r\n    @Test(description = \"Healthy Food Category- Verify that the search button works correctly from the Healthy Food category page\", priority = 22)\r\n    public void verifySearchBtnWorksCorrectlyFromHealthyFoodCategoryPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Healthy Food Category- Verify that the previous page button is disable when the current page is page 1 \", priority = 23)\r\n    public void verifyThePreviousBtnIsDisableWhenDisplayPage1() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make Sure the Pagination control works correctly\", priority = 24)\r\n    public void verifyThePaginationControlWorksCorrectly(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,7);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make Sure the previous page button works correctly\", priority = 25)\r\n    public void verifyPreviousPageBtnWorksCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make Sure the next page button works correctly\", priority = 26)\r\n    public void verifyNextPageBtnWorksCorrectly(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,7);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make Sure the Filtration Section Appears Correctly\", priority = 27)\r\n    public void verifyAllSearchFieldsInsideFormFiltrationSectionAppearsCorrectly() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnSeeAllBtnInFormSection();\r\n        ArrayList<String> expectedFiltration = new ArrayList<>() {{\r\n            add(\"Multi\");\r\n            add(\"Stew\");\r\n            add(\"Bars\");\r\n            add(\"Bites\");\r\n            add(\"Cakes & Brownies\");\r\n            add(\"Candies\");\r\n            add(\"Canned\");\r\n            add(\"Cereal\");\r\n            add(\"Cookies & Biscuits\");\r\n            add(\"Crisps\");\r\n            add(\"Dried\");\r\n            add(\"Effervescent\");\r\n            add(\"Fruit & Veg\");\r\n            add(\"Granulated\");\r\n            add(\"Gummies\");\r\n            add(\"Liquid\");\r\n            add(\"Nibs\");\r\n            add(\"Nuts\");\r\n            add(\"Popcorn\");\r\n            add(\"Powders\");\r\n            add(\"Sachet\");\r\n            add(\"Semi-Solid\");\r\n            add(\"Spray\");\r\n            add(\"Spread\");\r\n            add(\"Stick\");\r\n            add(\"Tablets\");\r\n            add(\"Tea Bags\");\r\n            add(\"Pods\");\r\n        }};\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getFormFiltrationSection().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getFormFiltrationSection().get(i),5,webDriver);\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getFormFiltrationSection().get(i).isDisplayed());\r\n        }\r\n    }\r\n    @Test(description = \"Healthy Food Category- Make sure all secure tabs appears correctly(100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks)\", priority = 28)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInHealthyFoodCategoryPage(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        Assert.assertTrue(aeHealthyFoodCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeHealthyFoodCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeHealthyFoodCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeHealthyFoodCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //Pagination control for all pages in the Healthy Food Category Pages\r\n    @Test(groups = {\"Healthy Food Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Healthy Food Category- Make Sure the ability to access all pages inside Healthy Food Category Page  \", priority = 29)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthyFoodCategoryPage(){\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeHealthyFoodCategoryPage.navigate();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    //There's a bug here due to the BreadCrumb is missing after sorting the products\r\n\r\n    @Test(description = \"Healthy Food Category- Make sure ability to navigate to the home page by clicking on the sporter logo  \", priority = 30)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {\r\n        AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n        aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        this.verifyClickingOnHealthyFoodCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), aeHealthyFoodCategoryPage.BaseURL +aeHealthyFoodCategoryPage.aeSiteURL,\" The Current URL is not matched with the Cart URL\" );\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java b/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java
--- a/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeHealthyFoodCategoryTestCases.java	(date 1673265422678)
@@ -35,7 +35,11 @@
             CloseInitialDialog();          }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Healthy Food Category","Smoke Testing Result","Critical Severity"},description = "Healthy Food Category- Make sure clicking on the Healthy Food Category Appears In MegaMenu Redirect User To CorrectURL", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Healthy Food Category- Make sure clicking on the Healthy Food Category Appears In MegaMenu Redirect User To CorrectURL", priority = 2)
+>>>>>>> origin/master
     public void verifyClickingOnHealthyFoodCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {
         AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);
         action = new Actions(webDriver);
@@ -45,7 +49,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));
         aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
+<<<<<<< HEAD
     @Test(groups = {"Healthy Food Category","Smoke Testing Result","Critical Severity"},description = "Healthy Food Category- Make sure clicking on the Healthy Food Category from ShopBy Menu Redirect User To CorrectURL", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Healthy Food Category- Make sure clicking on the Healthy Food Category from ShopBy Menu Redirect User To CorrectURL", priority = 3)
+>>>>>>> origin/master
     public void verifyClickingOnHealthyFoodCategoryFromShopByMenuRedirectUserToCorrectURL() {
         AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);
         action = new Actions(webDriver);
@@ -56,7 +64,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));
         aeHealthyFoodCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
+<<<<<<< HEAD
     @Test(groups = {"Healthy Food Category","Smoke Testing Result","Critical Severity"},description = "Healthy Food Category- Make sure clicking on the Healthy Food Category from HomePage Redirect User To CorrectURL", priority =4)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Healthy Food Category- Make sure clicking on the Healthy Food Category from HomePage Redirect User To CorrectURL", priority =4)
+>>>>>>> origin/master
     public void verifyClickingOnHealthyFoodCategoryFromHomePageRedirectUserToCorrectURL() {
         AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);
         aeHealthyFoodCategoryPage.navigateToHomePage();
@@ -321,7 +333,11 @@
         }
     }
     //Pagination control for all pages in the Healthy Food Category Pages
+<<<<<<< HEAD
     @Test(groups = {"Healthy Food Category","Smoke Testing Result","Medium Severity"},description = "Healthy Food Category- Make Sure the ability to access all pages inside Healthy Food Category Page  ", priority = 29)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Healthy Food Category- Make Sure the ability to access all pages inside Healthy Food Category Page  ", priority = 29)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideHealthyFoodCategoryPage(){
         AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
Index: src/test/resources/TestExecution.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\">\r\n<!--<suite name=\" Test\" thread-count=\"1\" >-->\r\n<suite name=\" Test\"  >\r\n    <listeners>\r\n        <listener class-name=\"retry_failed_test_cases.AnnotationTransfer\"/>\r\n                <listener class-name=\"extent_report_listner.ExtentReportListener\" />\r\n    </listeners>\r\n<!--    <test name=\" System Testing Report- Production\" preserve-order=\"true\">-->\r\n<!--&lt;!&ndash;                Guidelines:&ndash;&gt;-->\r\n<!--&lt;!&ndash;                 1. To test on production Env, change the value to \"https://sporter.com\".&ndash;&gt;-->\r\n<!--&lt;!&ndash;                 2. To test on stgTest Env, change the value to \"https://stg-test.sporter.com\".&ndash;&gt;-->\r\n<!--&lt;!&ndash;                 3. To test on stg Env, change the value to \"https://stg.sporter.com\".&ndash;&gt;-->\r\n<!--&lt;!&ndash;                 4. To test on Staging2 Env, change the value to \"https://staging2.sporter.com\".&ndash;&gt;-->\r\n<!--        <parameter name=\"environment\" value=\"https://stg.sporter.com\" />-->\r\n<!--        <parameter name=\"browser\" value=\"chrome\" />-->\r\n<!--&lt;!&ndash;        <parameter name=\"country\" value=\"en-ae\" />&ndash;&gt;-->\r\n<!--        <classes>-->\r\n<!--            <class name=\"sporter_test.QatarHomePageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AeCartTestCases\">-->\r\n<!--            <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n<!--                        <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n<!--            <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n\r\n\r\n\r\n\r\n<!--            <class name=\"sporter_test.AEMegaMenuTestCases\">-->\r\n<!--            <methods>-->\r\n<!--                <include name=\"verifyClickingOnVitaminsForWomenOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL\"/>-->\r\n\r\n<!--            </methods>-->\r\n<!--            </class>-->\r\n<!--            <class name=\"sporter_test.AeCartTestCases\">-->\r\n<!--            <methods>-->\r\n<!--                <include name=\"verifyAbilityToViewTheCartAfterAddingMoreThanSimpleOfTheSameConfig\"/>-->\r\n<!--                <include name=\"verifyAbilityToAddBundleToCart\"/>-->\r\n\r\n<!--            </methods>-->\r\n<!--            </class>-->\r\n<!--            <class name=\"sporter_test.AccessAllStoresCountriesTestCases\">-->\r\n<!--            <methods>-->\r\n<!--                <include name=\"accessAllCountries\"/>-->\r\n\r\n<!--            </methods>-->\r\n<!--            </class>-->\r\n<!--            <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\">-->\r\n<!--            <methods>-->\r\n<!--                <include name=\"verifyClickingOnProductCardInsideLadyFriendlySnacksAndFoodWidgetWorksCorrectly\"/>-->\r\n\r\n<!--            </methods>-->\r\n<!--            </class>-->\r\n<!--            <class name=\"sporter_test.AEGuestUserTestCases\">-->\r\n<!--            <methods>-->\r\n<!--                <include name=\"switchToUaeStore\"/>-->\r\n<!--                <include name=\"verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPopUpCorrectly\"/>-->\r\n<!--                <include name=\"verifyTheCountryRetrievedInCountryFieldBasedOnStoreCountry\"/>-->\r\n<!--                <include name=\"verifyTheGuestUserCannotSubmitTheShippingInformationWhenPhoneFieldHaveSmallTextLength\"/>-->\r\n<!--                <include name=\"verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly\"/>-->\r\n<!--                <include name=\"verifyResultFieldAndItsVaLueAppearInTheBoneAndJointCategoryPage\"/>-->\r\n<!--                <include name=\"verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly\"/>-->\r\n<!--                <include name=\"verifyResultFieldAndItsVaLueAppearInTheHairAndSkinAndNailsCategoryPage\"/>-->\r\n\r\n<!--            </methods>-->\r\n<!--            </class>-->\r\n<!--        </classes>-->\r\n\r\n<!--    </test>-->\r\n\r\n\r\n<!--        <test name=\"Smoke Testing Result- Production\" preserve-order=\"true\">-->\r\n<!--            <parameter name=\"environment\" value=\"https://www.sporter.com\" />-->\r\n<!--            <parameter name=\"browser\" value=\"chrome\" />-->\r\n<!--&lt;!&ndash;            <parameter name=\"country\" value=\"en-qa\" />&ndash;&gt;-->\r\n<!--            <groups>-->\r\n<!--                <run>-->\r\n<!--                    <include name=\"Smoke Testing Result\"/>-->\r\n<!--                </run>-->\r\n<!--            </groups>-->\r\n<!--            <classes>-->\r\n<!--                <class name=\"sporter_test.QatarHomePageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeCartTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeBrandsTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n<!--            </classes>-->\r\n<!--        </test>-->\r\n        <test name=\"Smoke Testing Result- Staging\" preserve-order=\"true\">\r\n            <parameter name=\"environment\" value=\"https://stg.sporter.com\" />\r\n            <parameter name=\"browser\" value=\"chrome\" />\r\n<!--            <parameter name=\"country\" value=\"en-qa\" />-->\r\n            <groups>\r\n                <run>\r\n                    <include name=\"Smoke Testing Result\"/>\r\n                </run>\r\n            </groups>\r\n            <classes>\r\n                <class name=\"sporter_test.QatarHomePageTestCases\"/>\r\n<!--                <class name=\"sporter_test.KsaHomePageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeWomenOnlyCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeVitaminsAndHealthCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSportSupplementsCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSportsCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeSearchPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeRecommendedProductsTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeProductDetailsPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEMegaMenuTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeHealthyFoodCategoryTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEGuestUserTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AEFooterPageTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeCartTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeBrandsTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases\"/>-->\r\n<!--                <class name=\"sporter_test.AccessAllStoresCountriesTestCases\"/>-->\r\n            </classes>\r\n        </test>\r\n\r\n</suite>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/TestExecution.xml b/src/test/resources/TestExecution.xml
--- a/src/test/resources/TestExecution.xml	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/resources/TestExecution.xml	(date 1673265423107)
@@ -80,6 +80,7 @@
 <!--    </test>-->
 
 
+<<<<<<< HEAD
 <!--        <test name="Smoke Testing Result- Production" preserve-order="true">-->
 <!--            <parameter name="environment" value="https://www.sporter.com" />-->
 <!--            <parameter name="browser" value="chrome" />-->
@@ -138,5 +139,36 @@
 <!--                <class name="sporter_test.AccessAllStoresCountriesTestCases"/>-->
             </classes>
         </test>
+=======
+    <!--    <test name="Smoke Testing Result- Production" preserve-order="true">-->
+    <!--        <parameter name="environment" value="https://www.sporter.com" />-->
+    <!--        <parameter name="browser" value="edge" />-->
+    <!--        <parameter name="country" value="en-qa" />-->
+    <!--        <groups>-->
+    <!--            <run>-->
+    <!--                <include name="Smoke Testing Result"/>-->
+    <!--            </run>-->
+    <!--        </groups>-->
+    <!--        <classes>-->
+    <!--            <class name="sporter_test.QatarHomePageTestCases"/>-->
+    <!--            <class name="sporter_test.KsaHomePageTestCases"/>-->
+    <!--            <class name="sporter_test.AeWomenOnlyCategoryTestCases"/>-->
+    <!--            <class name="sporter_test.AeVitaminsAndHealthCategoryTestCases"/>-->
+    <!--            <class name="sporter_test.AeSportSupplementsCategoryTestCases"/>-->
+    <!--            <class name="sporter_test.AeSportsCategoryTestCases"/>-->
+    <!--            <class name="sporter_test.AeSearchPageTestCases"/>-->
+    <!--            <class name="sporter_test.AeRecommendedProductsTestCases"/>-->
+    <!--            <class name="sporter_test.AeProductDetailsPageTestCases"/>-->
+    <!--            <class name="sporter_test.AEMegaMenuTestCases"/>-->
+    <!--            <class name="sporter_test.AeHealthyFoodCategoryTestCases"/>-->
+    <!--            <class name="sporter_test.AEGuestUserTestCases"/>-->
+    <!--            <class name="sporter_test.AEFooterPageTestCases"/>-->
+    <!--            <class name="sporter_test.AeCartTestCases"/>-->
+    <!--            <class name="sporter_test.AeBrandsTestCases"/>-->
+    <!--            <class name="sporter_test.AeAllPagesInsideCategoriesInMegaMenuTestCases"/>-->
+    <!--            <class name="sporter_test.AccessAllStoresCountriesTestCases"/>-->
+    <!--        </classes>-->
+    <!--    </test>-->
+>>>>>>> origin/master
 
 </suite>
Index: src/test/java/sporter_test/AEGuestUserTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AEGuestUserPage;\r\nimport sporter_pages.AeProductDetailsPage;\r\n\r\nimport static core.BasePage.BaseURL;\r\n\r\npublic class AEGuestUserTestCases extends BaseTest {\r\n\r\n    public void accessShippingInformationScreen(){\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        DataHelperAndWait.implicitWait(3,webDriver);\r\n        aeGuestUserPage.clickOnCartIcon();\r\n        aeGuestUserPage.clickOnProceedCheckoutBtnInCartPopup();\r\n        aeGuestUserPage.clickOnGuestCheckoutBtn();\r\n    }\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Guest User- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeGuestUserPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Make sure to access the Guest Checkout page from the cart page correctly\", priority = 2)\r\n    public void verifyAbilityToAccessTheGuestCheckoutPageFromTheCartPageCorrectly() {\r\n         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n         aeProductDetailsPage.displayTheProduct();\r\n        aeGuestUserPage.addToCart();\r\n        aeGuestUserPage.viewCart();\r\n        aeGuestUserPage.clickOnProceedCheckoutBtn();\r\n        aeGuestUserPage.clickOnGuestCheckoutBtn();\r\n        Assert.assertTrue(aeGuestUserPage.getRegisterAtSporterOption().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Make sure to access the Guest Checkout page from the cart pop up correctly\", priority = 3)\r\n    public void verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPopUpCorrectly() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        this.accessShippingInformationScreen();\r\n\r\n        Assert.assertTrue(aeGuestUserPage.getRegisterAtSporterOption().isDisplayed());\r\n    }\r\n    @Test(description = \"Make sure the title section appearing in the Shipping information screen is displayed correctly \", priority = 4)\r\n    public void verifyTheHeaderOfShippingInformationFormIsDisplayed() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        Assert.assertTrue(aeGuestUserPage.getTitleOfGuectUserShippingInformationScreen().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Guest Checkout- Make sure the system fills the store country by default in the country field in the shipping information form\", priority = 5)\r\n    public void verifyTheCountryRetrievedInCountryFieldBasedOnStoreCountry() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        //        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        Assert.assertEquals(aeGuestUserPage.getCountryField().getText(), \"United Arab Emirates\");\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Make sure the Guest user cannot submit the shipping information without filling the required fields empty\", priority = 6)\r\n    public void verifyTheGuestUserCannotSubmitTheShippingInformationWithoutFillingTheRequiredFields() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.fillInShippingInformationInputField(\" \", \" \", \" \", \" \", \" \", \" \", aeGuestUserPage.streetLineTwo);\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n//        WebElement cityOption = select.getOptions().get(0);\r\n        select.getOptions().get(0).click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertEquals(aeGuestUserPage.getFirstnameRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getLastNameRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getemailRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getPhoneRequiredFieldMsg().getText(), \"Text length does not satisfy specified text range.\");\r\n        Assert.assertEquals(aeGuestUserPage.getAddressRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getStreetlineOneRequiredFieldMsg().getText(), \"This is a required field.\");\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Make sure the Guest user cannot submit the shipping information when the phone number length is small \", priority = 7)\r\n    public void verifyTheGuestUserCannotSubmitTheShippingInformationWhenPhoneFieldHaveSmallTextLength() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        //        aeGuestUserPage.clearShippingInformationFields();\r\n//                aeProductDetailsPage.displayTheProduct();\r\n\r\n//        aeGuestUserPage.addToCart();\r\n//        aeGuestUserPage.viewCart();\r\n//        aeGuestUserPage.clickOnProceedCheckoutBtn();\r\n//        aeGuestUserPage.clickOnGuestCheckoutBtn();\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n        select.getOptions().get(0).click();\r\n        aeGuestUserPage.fillInShippingInformationInputField(aeGuestUserPage.firstName,aeGuestUserPage.lastName,aeGuestUserPage.email, \"2222\", aeGuestUserPage.address, aeGuestUserPage.streetLineOne, aeGuestUserPage.streetLineTwo);\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertEquals(aeGuestUserPage.getPhoneRequiredFieldMsg().getText(), \"Text length does not satisfy specified text range.\");\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Make sure the Guest user cannot submit the shipping information with incorrect email format \", priority = 8)\r\n    public void verifyTheGuestUserCannotSubmitTheShippingInformationWithIncorrectEmailFormat() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//                aeProductDetailsPage.displayTheProduct();\r\n\r\n//        aeGuestUserPage.addToCart();\r\n//        aeGuestUserPage.viewCart();\r\n//        aeGuestUserPage.clickOnProceedCheckoutBtn();\r\n//        aeGuestUserPage.clickOnGuestCheckoutBtn();\r\n        //        aeGuestUserPage.clearShippingInformationFields();\r\n        aeGuestUserPage.fillInShippingInformationInputField(aeGuestUserPage.firstName, aeGuestUserPage.lastName, \"email@email\", aeGuestUserPage.phone, aeGuestUserPage.address, aeGuestUserPage.streetLineOne, aeGuestUserPage.streetLineTwo);\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n        WebElement cityOption = select.getOptions().get(2);\r\n        cityOption.click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertEquals(aeGuestUserPage.getEmailValidationFormateMsg().getText(), \"Please enter a valid email address.\");\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Guest Checkout- Make sure the city Search field in the shipping information form works correctly and retrieved the matched result \", priority = 9)\r\n    public void verifyCitySearchWorksFineAndRetrievedTheMatchedResult() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.getCityListField().click();\r\n        aeGuestUserPage.getCitySearchField().sendKeys(\"D\");\r\n        for (WebElement webElement : aeGuestUserPage.getSearchMenu()) {\r\n            webElement.getText();\r\n            Assert.assertTrue(webElement.getText().startsWith(\"D\"));\r\n        }\r\n    }\r\n    @Test(description = \"Guest Checkout- Make sure the city Search field in the shipping information form works correctly when searching for option does not exist in the list \", priority = 10)\r\n    public void verifyCitySearchWorksFineWhenSearchingForOptionDoesNotExist() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.getCityListField().click();\r\n        aeGuestUserPage.getCitySearchField().sendKeys(\"test\");\r\n        for (WebElement webElement : aeGuestUserPage.getSearchMenu()) {\r\n            webElement.getText();\r\n            Assert.assertEquals(webElement.getText(), \"No city found\");\r\n        }\r\n    }\r\n    @Test(description = \"Guest Checkout- Make sure the city Search list in the shipping information form will retrieve all city options when searching using Space\", priority = 11)\r\n    public void verifyCitySearchListRetrieveAllOptionWhenEnteringSpace() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.getCityListField().click();\r\n        aeGuestUserPage.getCitySearchField().sendKeys(\" \");\r\n        for (WebElement webElement : aeGuestUserPage.getSearchMenu()) {\r\n            Assert.assertEquals(webElement.getText(), \"Select city\\n\" + \"Dubai\\n\" + \"Abu Dhabi\\n\" + \"Sharjah\\n\" + \"Ajman\\n\" + \"Al Ain\\n\" + \"Ras Al Khaimah\\n\" + \"Fujairah\\n\" + \"Umm Al Quwain\");\r\n        }\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Guest Checkout- Make sure  ability to fill and navigate between the shipping information form using Tab key and keyboard shortcuts\", priority = 12)\r\n    public void verifyAbilityToFillAndNavigateBetweenTheShippingInformationFormUsingTabKeyAndKeyboardShortCut() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        Actions act = new Actions(webDriver);\r\n                aeGuestUserPage.clearShippingInformationFields();\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.clickOnFirstNameField();\r\n        aeGuestUserPage.getFirstNameField().sendKeys(aeGuestUserPage.firstName);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getLastNameField().sendKeys(aeGuestUserPage.lastName);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getEmailField().sendKeys(aeGuestUserPage.email);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getPhoneField().sendKeys(aeGuestUserPage.phone);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        act.sendKeys(Keys.ENTER).build().perform();\r\n        act.sendKeys(Keys.DOWN).build().perform();\r\n        act.sendKeys(Keys.ENTER).build().perform();\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getAddressField().sendKeys(aeGuestUserPage.address);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getStreetLineOneField().sendKeys(aeGuestUserPage.streetLineOne);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        aeGuestUserPage.getStreetLineTwoField().sendKeys(aeGuestUserPage.streetLineTwo);\r\n        act.sendKeys(Keys.TAB).build().perform();\r\n        act.sendKeys(Keys.ENTER).build().perform();\r\n        Assert.assertTrue(aeGuestUserPage.getShippingMethodSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Guest Checkout- Make sure inability to submit the shipping information when filling \" +\r\n            \"streetLine 1&2 & First Name & Last Name fields with the text length>=255 symbols & the validation message appears correctly\", priority = 13)\r\n    public void verifyInabilityToSubmitTheShippingInformationFormWhenFillingFieldsWithTextLengthGreaterThan255Symbols() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        this.accessShippingInformationScreen();\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.fillInShippingInformationInputField(aeGuestUserPage.longLengthText,aeGuestUserPage.longLengthText, aeGuestUserPage.email, aeGuestUserPage.phone, aeGuestUserPage.address, aeGuestUserPage.longLengthText,aeGuestUserPage.longLengthText);\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n        WebElement cityOption = select.getOptions().get(2);\r\n        cityOption.click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\n        Assert.assertEquals(aeGuestUserPage.getFirstnameRequiredFieldMsg().getText(), \"Please enter less or equal than 255 symbols.\");\r\n        Assert.assertEquals(aeGuestUserPage.getLastNameRequiredFieldMsg().getText(), \"Please enter less or equal than 255 symbols.\");\r\n        Assert.assertEquals(aeGuestUserPage.getStreetlineOneRequiredFieldMsg().getText(), \"Please enter less or equal than 255 symbols.\");\r\n        Assert.assertEquals(aeGuestUserPage.getStreetlineTwoRequiredFieldMsg().getText(), \"Please enter less or equal than 255 symbols.\");\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Make sure the Guest user can filling the shipping information correctly\", priority = 14)\r\n    public void verifyTheGuestUserCanFillTheShippingInformationCorrectly() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        this.accessShippingInformationScreen();\r\n        //        aeGuestUserPage.clearShippingInformationFields();\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        aeGuestUserPage.fillInShippingInformationInputField(aeGuestUserPage.firstName, aeGuestUserPage.lastName, aeGuestUserPage.email, aeGuestUserPage.phone, aeGuestUserPage.address, aeGuestUserPage.streetLineOne,aeGuestUserPage. streetLineTwo);\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n        WebElement cityOption = select.getOptions().get(2);\r\n        cityOption.click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertTrue(aeGuestUserPage.getShippingMethodSection().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Guest User Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Make sure the return to the cart button appearing in the shipping information screen for the Guest User works correctly  \", priority = 15)\r\n    public void verifyBackToCartLinkWorksCorrectly() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        this.verifyAbilityToAccessTheGuestCheckoutPageFromTheCartPageCorrectly();\r\n        aeGuestUserPage.clickOnReturnToCartIcon();\r\n        DataHelperAndWait.waitForUrlContains(aeGuestUserPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(cartURL) );\r\n    }\r\n\r\n    @Test(description = \"Make sure ability to navigate to the home page by clicking on the sporter logo from the shipping information form for the Guest User \", priority = 16)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogo() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();\r\n        this.accessShippingInformationScreen();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        DataHelperAndWait.waitForUrlContains(BaseURL,webDriver,10);\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL +aeDomain+\"/\");\r\n    }\r\n\r\n    @Test(description = \"Guest Checkout- Make sure ability to navigate to the shipping information directly from the URL\", priority = 17)\r\n    public void verifyInabilityToNavigateToShippingInformationViaUrlWithoutAddingProductToCart() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        webDriver.navigate().to(\"https://www.sporter.com/en-ae/checkout/cart/#shipping\");\r\n        aeGuestUserPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Make sure the Guest user can filling the shipping information correctly when switching to Arabic version\", priority = 18)\r\n    public void verifyTheGuestUserCanFillTheShippingInformationWhenSwitchingToArabicCorrectly() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        aeGuestUserPage.switchToArabicVersion();\r\n        aeGuestUserPage.getCounterIconOnCartBtn();\r\n        this.accessShippingInformationScreen();\r\n        //        aeGuestUserPage.clearShippingInformationFields();\r\n        aeGuestUserPage.fillInShippingInformationInputField(aeGuestUserPage.firstNameAr, aeGuestUserPage.lastNameAr, aeGuestUserPage.email, aeGuestUserPage.phone, aeGuestUserPage.addressAr, aeGuestUserPage.streetLineOneAr, aeGuestUserPage.streetLineTwoAr);\r\n        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n        WebElement cityOption = select.getOptions().get(2);\r\n        cityOption.click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertTrue(aeGuestUserPage.getShippingMethodSection().isDisplayed());\r\n    }\r\n    //There's a bug here\r\n    @Test( description = \"Guest User- Make sure the validation message appears when submiting tGhe shipping information without filling the city field\", priority = 19)\r\n    public void verifyTheValidationMsgAppearingWhenSubmittingTheShippingFormWithoutFillingTheCityField() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        aeGuestUserPage.navigateToHomePage();\r\n        this.accessShippingInformationScreen();\r\n        aeGuestUserPage.fillInShippingInformationInputField(\" \", \" \", \" \", \" \", \" \", \" \", aeGuestUserPage.streetLineTwo);\r\n//        Select select = new Select(aeGuestUserPage.getCityMenu());\r\n//        WebElement cityOption = select.getOptions().get(0);\r\n//        select.getOptions().get(0).click();\r\n        DataHelperAndWait.scrollTo(aeGuestUserPage.getContinueBtn(),webDriver);\r\naeGuestUserPage.clickOnContinueBtn();\r\n        Assert.assertEquals(aeGuestUserPage.getFirstnameRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getLastNameRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getemailRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getPhoneRequiredFieldMsg().getText(), \"Text length does not satisfy specified text range.\");\r\n        Assert.assertEquals(aeGuestUserPage.getAddressRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        Assert.assertEquals(aeGuestUserPage.getStreetlineOneRequiredFieldMsg().getText(), \"This is a required field.\");\r\n        //There's a bug in the following statement\r\n        Assert.assertEquals(aeGuestUserPage.getCityRequiredFieldMsg().getText(), \"This is a required field.\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AEGuestUserTestCases.java b/src/test/java/sporter_test/AEGuestUserTestCases.java
--- a/src/test/java/sporter_test/AEGuestUserTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AEGuestUserTestCases.java	(date 1673265422488)
@@ -34,7 +34,11 @@
             webDriver.navigate().to(BasePage.BaseURL+aeDomain);
             CloseInitialDialog();          }
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Critical Severity"},description = "Make sure to access the Guest Checkout page from the cart page correctly", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure to access the Guest Checkout page from the cart page correctly", priority = 2)
+>>>>>>> origin/master
     public void verifyAbilityToAccessTheGuestCheckoutPageFromTheCartPageCorrectly() {
          AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);
@@ -45,7 +49,11 @@
         aeGuestUserPage.clickOnGuestCheckoutBtn();
         Assert.assertTrue(aeGuestUserPage.getRegisterAtSporterOption().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Critical Severity"},description = "Make sure to access the Guest Checkout page from the cart pop up correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure to access the Guest Checkout page from the cart pop up correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPopUpCorrectly() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         aeGuestUserPage.navigateToHomePage();
@@ -59,13 +67,21 @@
 //        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();
         Assert.assertTrue(aeGuestUserPage.getTitleOfGuectUserShippingInformationScreen().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Low Severity"},description = "Guest Checkout- Make sure the system fills the store country by default in the country field in the shipping information form", priority = 5)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Guest Checkout- Make sure the system fills the store country by default in the country field in the shipping information form", priority = 5)
+>>>>>>> origin/master
     public void verifyTheCountryRetrievedInCountryFieldBasedOnStoreCountry() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         //        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();
         Assert.assertEquals(aeGuestUserPage.getCountryField().getText(), "United Arab Emirates");
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","High Severity"},description = "Make sure the Guest user cannot submit the shipping information without filling the required fields empty", priority = 6)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure the Guest user cannot submit the shipping information without filling the required fields empty", priority = 6)
+>>>>>>> origin/master
     public void verifyTheGuestUserCannotSubmitTheShippingInformationWithoutFillingTheRequiredFields() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
 //        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();
@@ -82,7 +98,11 @@
         Assert.assertEquals(aeGuestUserPage.getAddressRequiredFieldMsg().getText(), "This is a required field.");
         Assert.assertEquals(aeGuestUserPage.getStreetlineOneRequiredFieldMsg().getText(), "This is a required field.");
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Medium Severity"},description = "Make sure the Guest user cannot submit the shipping information when the phone number length is small ", priority = 7)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure the Guest user cannot submit the shipping information when the phone number length is small ", priority = 7)
+>>>>>>> origin/master
     public void verifyTheGuestUserCannotSubmitTheShippingInformationWhenPhoneFieldHaveSmallTextLength() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         //        aeGuestUserPage.clearShippingInformationFields();
@@ -99,7 +119,11 @@
 aeGuestUserPage.clickOnContinueBtn();
         Assert.assertEquals(aeGuestUserPage.getPhoneRequiredFieldMsg().getText(), "Text length does not satisfy specified text range.");
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Medium Severity"},description = "Make sure the Guest user cannot submit the shipping information with incorrect email format ", priority = 8)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure the Guest user cannot submit the shipping information with incorrect email format ", priority = 8)
+>>>>>>> origin/master
     public void verifyTheGuestUserCannotSubmitTheShippingInformationWithIncorrectEmailFormat() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
 //                aeProductDetailsPage.displayTheProduct();
@@ -117,7 +141,11 @@
 aeGuestUserPage.clickOnContinueBtn();
         Assert.assertEquals(aeGuestUserPage.getEmailValidationFormateMsg().getText(), "Please enter a valid email address.");
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Low Severity"},description = "Guest Checkout- Make sure the city Search field in the shipping information form works correctly and retrieved the matched result ", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Guest Checkout- Make sure the city Search field in the shipping information form works correctly and retrieved the matched result ", priority = 9)
+>>>>>>> origin/master
     public void verifyCitySearchWorksFineAndRetrievedTheMatchedResult() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
 //        this.verifyAbilityToAccessTheGuestCheckoutPageFormTheCartPageCorrectly();
@@ -149,7 +177,11 @@
             Assert.assertEquals(webElement.getText(), "Select city\n" + "Dubai\n" + "Abu Dhabi\n" + "Sharjah\n" + "Ajman\n" + "Al Ain\n" + "Ras Al Khaimah\n" + "Fujairah\n" + "Umm Al Quwain");
         }
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Low Severity"},description = "Guest Checkout- Make sure  ability to fill and navigate between the shipping information form using Tab key and keyboard shortcuts", priority = 12)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Guest Checkout- Make sure  ability to fill and navigate between the shipping information form using Tab key and keyboard shortcuts", priority = 12)
+>>>>>>> origin/master
     public void verifyAbilityToFillAndNavigateBetweenTheShippingInformationFormUsingTabKeyAndKeyboardShortCut() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         Actions act = new Actions(webDriver);
@@ -195,7 +227,11 @@
         Assert.assertEquals(aeGuestUserPage.getStreetlineOneRequiredFieldMsg().getText(), "Please enter less or equal than 255 symbols.");
         Assert.assertEquals(aeGuestUserPage.getStreetlineTwoRequiredFieldMsg().getText(), "Please enter less or equal than 255 symbols.");
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Critical Severity"},description = "Make sure the Guest user can filling the shipping information correctly", priority = 14)
+=======
+    @Test(groups = {"Smoke Testing Result","High Severity","Low Severity","Meduim Severity"},description = "Make sure the Guest user can filling the shipping information correctly", priority = 14)
+>>>>>>> origin/master
     public void verifyTheGuestUserCanFillTheShippingInformationCorrectly() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         aeGuestUserPage.navigateToHomePage();
@@ -210,7 +246,11 @@
 aeGuestUserPage.clickOnContinueBtn();
         Assert.assertTrue(aeGuestUserPage.getShippingMethodSection().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Guest User Page","Smoke Testing Result","Low Severity"},description = "Make sure the return to the cart button appearing in the shipping information screen for the Guest User works correctly  ", priority = 15)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure the return to the cart button appearing in the shipping information screen for the Guest User works correctly  ", priority = 15)
+>>>>>>> origin/master
     public void verifyBackToCartLinkWorksCorrectly() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         aeGuestUserPage.navigateToHomePage();
Index: src/test/java/sporter_test/AEFooterPageTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\nimport org.openqa.selenium.edge.EdgeDriver;\r\nimport org.openqa.selenium.firefox.FirefoxDriver;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Optional;\r\nimport org.testng.annotations.Parameters;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AEFooterPage;\r\n\r\nimport static org.testng.Assert.assertFalse;\r\n\r\npublic class AEFooterPageTestCases extends BaseTest {\r\n    @Parameters({\"environment\", \"browser\", \"country\"})\r\n    public void setupBrowserFromTheClass(String environment, String browser, @Optional(\"\") String country) throws Exception {\r\n        System.out.println(\"SetUp Browser method\");\r\n        environmentName=environment;\r\n        //This ChromeWebDriver 108\r\n        this.browserName = browser;\r\n        BasePage.BaseURL=environment;\r\n        this.countryUrl=country;\r\n        switch (browser) {\r\n//    Check if parameter passed from TestNG is 'firefox'\r\n\r\n            case \"firefox\":\r\n                System.setProperty(\"webdriver.gecko.driver\", \"src/test/resources/drivers/geckodriver.exe\");\r\n                webDriver = new FirefoxDriver();\r\n                break;\r\n            case \"chrome\":\r\n                System.setProperty(\"webdriver.chrome.driver\", \"src/test/resources/drivers/chromedriver.exe\");\r\n                webDriver = new ChromeDriver();\r\n                break;\r\n            case \"edge\":\r\n                System.setProperty(\"webdriver.edge.driver\", \"src/test/resources/drivers/msedgedriver.exe\");\r\n                webDriver = new EdgeDriver();\r\n                break;\r\n            default:\r\n////If no browser passed throw exception\r\n                throw new Exception(\"Browser is not correct\");\r\n        }\r\n        webDriver.manage().window().maximize();\r\n//        webDriver.navigate().to(environment);\r\n        webDriver.navigate().to(environment+\"/\"+country);\r\n        CloseInitialDialog();\r\n    }\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \" Footer Section- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeFooterPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Verify the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks \", priority = 1)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        Assert.assertTrue(aeFooterPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeFooterPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeFooterPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeFooterPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeFooterPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeFooterPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeFooterPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeFooterPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeFooterPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Footer Section\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Footer Section- Verify the Join Our NEWSLETTER section that appears in the footer section is displayed correctly\", priority = 2)\r\n    public void verifyJoinOurNewsletterSectionIsDisplayedCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        Assert.assertTrue(aeFooterPage.getNewsletterBlock().isDisplayed());\r\n        Assert.assertTrue(aeFooterPage.getEmailFieldInNewsletterBlock().isDisplayed());\r\n        Assert.assertTrue(aeFooterPage.getFemaleOptionInNewsletterBlock().isDisplayed());\r\n        Assert.assertTrue(aeFooterPage.getMaleOptionInNewsletterBlock().isDisplayed());\r\n        Assert.assertTrue(aeFooterPage.getJoinBtnInNewsletterBlock().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Footer Section\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Footer Section- Make sure the user(Male) can join sporter NEWSLETTER correctly\", priority = 3)\r\n    public void verifyAbilityToJoinSporterNewsletterWithMaleOptionCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.fillInemailFieldInNewsletterBlock(aeFooterPage.generateRandomEmail());\r\n        aeFooterPage.selectMaleOptionInNewsletterBlock();\r\n        aeFooterPage.clickOnJoinBtnInNewsletterBlock();\r\n        Assert.assertTrue(aeFooterPage.getSubscriptionSuccessfulMsg().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Footer Section\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Footer Section- Make sure the user(Female) can join sporter NEWSLETTER correctly\", priority = 4)\r\n    public void verifyAbilityToJoinSporterNewsletterWithFemaleOptionCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.clearEmailField();\r\n        aeFooterPage.fillInemailFieldInNewsletterBlock(aeFooterPage.generateRandomEmail());\r\n        aeFooterPage.selectFemaleOptionInNewsletterBlock();\r\n        aeFooterPage.clickOnJoinBtnInNewsletterBlock();\r\n        Assert.assertTrue(aeFooterPage.getSubscriptionSuccessfulMsg().isDisplayed());\r\n        Assert.assertEquals(aeFooterPage.getSubscriptionSuccessfulMsg().getText(), \"Thank you for your subscription.\");\r\n    }\r\n\r\n    // There's a bug here, when joining using email already joined then the system display 2 invalid messages\r\n    @Test(description = \" Footer Section- Make sure inability to join sporter NEWSLETTER using email already joined\", priority = 5)\r\n    public void verifyInabilityToJoinSporterNewsletterUsingEmailAlreadyJoined() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.clearEmailField();\r\n        aeFooterPage.fillInemailFieldInNewsletterBlock(\"a@a.com\");\r\n        aeFooterPage.selectFemaleOptionInNewsletterBlock();\r\n        aeFooterPage.clickOnJoinBtnInNewsletterBlock();\r\n        Assert.assertTrue(aeFooterPage.getSubscriptionSuccessfulMsg().isDisplayed());\r\n        Assert.assertEquals(aeFooterPage.getSubscriptionSuccessfulMsg().getText(), \"This email address is already subscribed.\");\r\n    }\r\n\r\n    //There's a UI issue when displaying the email formate message\r\n    @Test(description = \" Footer Section- Make sure inability to join sporter NEWSLETTER using invalid email formate\", priority = 6)\r\n    public void verifyInabilityToJoinSporterNewsletterUsingInvalidEmailFormate() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.clearEmailField();\r\n        aeFooterPage.fillInemailFieldInNewsletterBlock(\"a@a\");\r\n        aeFooterPage.selectFemaleOptionInNewsletterBlock();\r\n        aeFooterPage.clickOnJoinBtnInNewsletterBlock();\r\n        Assert.assertEquals(aeFooterPage.getEmailRequiredMsgInNewsletterSection().getText(), \"Please enter a valid email address (Ex: johndoe@domain.com).\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure inability to join sporter NEWSLETTER without filling email field\", priority = 7)\r\n    public void verifyInabilityToJoinSporterNewsletterWithoutFillingEmailField() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.clearEmailField();\r\n        aeFooterPage.clickOnJoinBtnInNewsletterBlock();\r\n        Assert.assertEquals(aeFooterPage.getEmailRequiredMsgInNewsletterSection().getText(), \"This is a required field.\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Orders And Shipping Section Appears Correctly In Footer\", priority = 8)\r\n    public void verifyOrdersAndShippingSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        Assert.assertEquals(aeFooterPage.getOrdersAndShippingHeader().getText(), \"Orders & Shipping\");\r\n        Assert.assertEquals(aeFooterPage.getTrackYourOrderOption().getText(), \"Track Your Order\");\r\n        Assert.assertEquals(aeFooterPage.getShippingAndDeliveryOption().getText(), \"Shipping & Delivery\");\r\n        Assert.assertEquals(aeFooterPage.getRefundAndReturnsOption().getText(), \"Refund & Returns\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Track Your Order Link appears in the footer works correctly\", priority = 9)\r\n    public void verifyTrackYourOrderLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getTrackYourOrderOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.trackOrderUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Track Your Order page\", priority = 10)\r\n    public void verifyTheFooterSectionAppearsInTheTrackYourOrderPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyTrackYourOrderLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Shipping And Delivery Link appears in the footer works correctly\", priority = 11)\r\n    public void verifyShippingAndDeliveryLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getShippingAndDeliveryOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.shippingAndDeliveryUrl) );\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Shipping and Delivery page\", priority = 12)\r\n    public void verifyTheFooterSectionAppearsInTheShippingAndDeliveryPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyShippingAndDeliveryLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Refund And Returns Link appears in the footer works correctly\", priority = 13)\r\n    public void verifyRefundAndReturnLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getRefundAndReturnsOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.refundAndReturnUrl),\" The Refund and return page is not opened\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Refund And Returns page\", priority = 14)\r\n    public void verifyTheFooterSectionAppearsInTheRefundAndReturnPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyRefundAndReturnLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Let Us Help You Section Appears Correctly In Footer\", priority = 15)\r\n    public void verifyLetUsHelpYouSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getLetUsHelpYouHeader().getText(), \"Let Us Help You\");\r\n        Assert.assertEquals(aeFooterPage.getWowCustomerServiceOption().getText(), \"Wow Customer Service\");\r\n        Assert.assertEquals(aeFooterPage.getFAQsOption().getText(), \"FAQs\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Wow Customer Service Link appears in the footer works correctly\", priority = 16)\r\n    public void verifyWowCustomerServiceLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.getWowCustomerServiceOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.customerServiceUrl),\" The Customer Service URL is not opened\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Wow Customer Service page\", priority = 17)\r\n    public void verifyTheFooterSectionAppearsInTheWowCustomerServicePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWowCustomerServiceLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the FAQs Link appears in the footer works correctly\", priority = 18)\r\n    public void verifyFAQsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getFAQsOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.fAQsUrl),\"The current URL is not matched with the FAQs URL\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the FAQs page\", priority = 19)\r\n    public void verifyTheFooterSectionAppearsInTheFAQsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyFAQsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n//    @Test(description = \" Footer Section- Make sure the Most Selling Products Section Appears Correctly In Footer\", priority = 20)\r\n//    public void verifyMostSellingProductsSectionAppearsCorrectlyInFooter() {\r\n//        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        aeFooterPage.navigateToHomePage();\r\n//        Assert.assertEquals(aeFooterPage.getMostSellingProductsHeader().getText(), \"Most Selling Products\");\r\n//        Assert.assertEquals(aeFooterPage.getGrenadeReloadProteinOatBarOption().getText(), \"Dymatize ISO 100 Protein\");\r\n//        Assert.assertEquals(aeFooterPage.getDymatizeISO100ProteinOption().getText(), \"Grenade Carb Killa Protein Bar\");\r\n//        Assert.assertEquals(aeFooterPage.getGrenadeCarbKillaProteinBarOption().getText(), \"Grenade Carb Killa Protein Bar - Box of 12\");\r\n//    }\r\n    @Test(description = \" Footer Section- Make sure ability to access all products listed in the Most Selling Products Section\", priority = 20)\r\n    public void verifyClickingOnProductsInsideMostSellingProductsSectionWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        for(int i=0; i<aeFooterPage.getMostSellingList().size();i++){\r\n            aeFooterPage.getMostSellingList().get(i).click();\r\n            aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        }\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Grenade Reload Protein Oat Bar Link appears in the footer works correctly\", priority = 21)\r\n    public void verifyGrenadeReloadProteinOatBarLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.getGrenadeReloadProteinOatBarOption().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Grenade Reload Protein Oat Bar page\", priority = 22)\r\n    public void verifyTheFooterSectionAppearsInTheGrenadeReloadProteinOatBarPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyGrenadeReloadProteinOatBarLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Dramatize Iso 100 Protein Link appears in the footer works correctly\", priority = 23)\r\n    public void verifyDramatizeIso100ProteinLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getDymatizeISO100ProteinOption().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Dramatize Iso 100 Protein page\", priority = 24)\r\n    public void verifyTheFooterSectionAppearsInTheDramatizeIso100ProteinPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyDramatizeIso100ProteinLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Grenade Carb Killa Protein Bar Link appears in the footer works correctly\", priority = 25)\r\n    public void verifyGrenadeCarbKillaProteinBarLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getGrenadeCarbKillaProteinBarOption().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Dramatize Iso 100 Protein page\", priority = 26)\r\n    public void verifyTheFooterSectionAppearsInTheGrenadeCarbKillaProteinBarPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyGrenadeCarbKillaProteinBarLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Quest Nutrition - Bars - Box of 12 Link appears in the footer works correctly\", priority = 27)\r\n    public void verifyGrenadeCarbKillaProteinBarBoxOf12LinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getGrenadeCarbKillaProteinBarBoxOf12Option().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Grenade Carb Killa Protein Bar Box Of 12 page\", priority = 28)\r\n    public void verifyTheFooterSectionAppearsInTheGrenadeCarbKillaProteinBarBoxOf12Page() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyGrenadeCarbKillaProteinBarBoxOf12LinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Quest Nutrition Bars Box Of 12 Link appears in the footer works correctly\", priority = 29)\r\n    public void verifyQuestNutritionBarsBoxOf12LinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getQuestNutritionBarsBox12Option().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Quest Nutrition Bars Box Of 12 page\", priority = 30)\r\n    public void verifyTheFooterSectionAppearsInTheQuestNutritionBarsBoxOf12Page() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyQuestNutritionBarsBoxOf12LinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Get To Know Us Section Appears Correctly In Footer\", priority = 31)\r\n    public void verifyGetToKnowUsSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getGetToKnowUsHeader().getText(), \"Get To Know Us\");\r\n        Assert.assertEquals(aeFooterPage.getAboutSporterOption().getText(), \"About Sporter\");\r\n        Assert.assertEquals(aeFooterPage.getProductQualityOption().getText(), \"Product Quality\");\r\n        Assert.assertEquals(aeFooterPage.getProductAuthenticityOption().getText(), \"Product Authenticity\");\r\n        Assert.assertEquals(aeFooterPage.getWholesaleOption().getText(), \"Wholesale\");\r\n        Assert.assertEquals(aeFooterPage.getCareersOption().getText(), \"Careers\");\r\n        Assert.assertEquals(aeFooterPage.getSporterBlogOption().getText(), \"Sporter Blog\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure  About Sporter appears in the footer works correctly\", priority = 32)\r\n    public void verifyAboutSporterLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getAboutSporterOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.aboutSporterUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.aboutSporterUrl),\" The current URL is not matched with the aboutSporterUrl page\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the About Sporter page\", priority = 33)\r\n    public void verifyTheFooterSectionAppearsInTheAboutSporterPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyAboutSporterLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Product Quality appears in the footer works correctly\", priority = 34)\r\n    public void verifyProductQualityLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getProductQualityOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.productQualityUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.productQualityUrl),\" The Current URL is not matched with the productQuality Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Product Quality page\", priority = 35)\r\n    public void verifyTheFooterSectionAppearsInTheProductQualityPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyProductQualityLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the  Quality Authenticity appears in the footer works correctly\", priority = 36)\r\n    public void verifyProductAuthenticityLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getProductAuthenticityOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.productAuthenticityUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.productAuthenticityUrl),\" The current URL is not matched with the productAuthenticity Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Product Authenticity page\", priority = 37)\r\n    public void verifyTheFooterSectionAppearsInTheProductAuthenticityPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyProductAuthenticityLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Wholesale appears in the footer works correctly\", priority = 38)\r\n    public void verifyWholesaleLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getWholesaleOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.wholesaleUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.wholesaleUrl),\"The Current URL is not matched with the wholesale Url \");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    //Bug: The footer section is missing from Wholesale page.\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Wholesale page\", priority = 39)\r\n    public void verifyTheFooterSectionAppearsInTheWholesalePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWholesaleLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    //Bug: The system does not redirect the user to the Sporter LinkedIn page directly\r\n    @Test(description = \" Footer Section- Make sure the Careers appears in the footer works correctly\", priority = 40)\r\n    public void verifyCareersLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getCareersOption().click();\r\n        DataHelperAndWait.switchToTabBrowser(1,webDriver);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.careersUrl),\" The Current URL is not matched with the careers Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        webDriver.close();\r\n        DataHelperAndWait.switchToTabBrowser(0,webDriver);\r\n    }\r\n\r\n    //Bug: Clicking on the Sporter Blog link redirect the user to 404 Page\r\n    @Test(description = \" Footer Section- Make sure the Sporter Blog appears in the footer works correctly\", priority = 41)\r\n    public void verifySporterBlogLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getSporterBlogOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.sporterBlogUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.sporterBlogUrl),\" The Current URL is not matched with the sporterBlog Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    //Bug: Clicking on the Sporter Blog link redirect the user to 404 Page\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Sporter Blog page\", priority = 42)\r\n    public void verifyTheFooterSectionAppearsInTheSporterBlogPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifySporterBlogLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    //Bug: The address is missing\r\n    @Test(description = \" Footer Section- Make sure the Contact Us Section Appears Correctly In Footer\", priority = 43)\r\n    public void verifyContactUsSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getContactUsHeader().getText(), \"Contact Us\");\r\n        Assert.assertEquals(aeFooterPage.getContactInfoOption().getText(), \"Contact info\");\r\n        Assert.assertEquals(aeFooterPage.getPhoneNumberLabelOption().getText(), \"Phone Number:\");\r\n        Assert.assertEquals(aeFooterPage.getPhoneNumber().getText(), \"+971 4 88 30 300\");\r\n        Assert.assertEquals(aeFooterPage.getAddressLabel().getText(), \"Address:\");\r\n        Assert.assertEquals(aeFooterPage.getAddressValue().getText(), \"There's bug here\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the contact Info appears in the footer works correctly\", priority = 44)\r\n    public void verifyContactInfoLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getContactInfoOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.contactUsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.contactUsUrl),\" The Current URL is not matched with the contactUs Url \");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the contact US page\", priority = 45)\r\n    public void verifyTheFooterSectionAppearsInTheContactUsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyContactInfoLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    //Bug: Clicking on the phone number will redirect the user to HomePage and need to check with Khaled about its\r\n    @Test(description = \" Footer Section- Make sure the phone number appears in the footer works correctly\", priority = 46)\r\n    public void verifyPhoneNumberLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getPhoneNumber().click();\r\n        String myWindowHandle = webDriver.getWindowHandle();\r\n        webDriver.switchTo().window(myWindowHandle);\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Accessories & Apparel Section Appears Correctly In Footer\", priority = 47)\r\n    public void verifyAccessoriesAndApparelSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getAccessoriesAndApparelHeader().getText(), \"Accessories & Apparel\");\r\n        Assert.assertEquals(aeFooterPage.getTrainingApparelOption().getText(), \"Training Apparel\");\r\n        Assert.assertEquals(aeFooterPage.getFitnessAccessoriesOption().getText(), \"Fitness Accessories\");\r\n        Assert.assertEquals(aeFooterPage.getShakersOption().getText(), \"Shakers\");\r\n        Assert.assertEquals(aeFooterPage.getHomeGymEquipmentOption().getText(), \"Home Gym Equipment\");\r\n        Assert.assertEquals(aeFooterPage.getWatchesOption().getText(), \"Watches\");\r\n        Assert.assertEquals(aeFooterPage.getStrapsOption().getText(), \"Straps\");\r\n        Assert.assertEquals(aeFooterPage.getBagsOption().getText(), \"Bags\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Training Apparel Link appears in the footer works correctly\", priority = 48)\r\n    public void verifyTrainingApparelLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getTrainingApparelOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.trainingApparelUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.trainingApparelUrl),\" The Current URL is not matched with the trainingApparel Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Training Apparel page\", priority = 49)\r\n    public void verifyTheFooterSectionAppearsInTheTrainingApparelPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyTrainingApparelLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Fitness Accessories Link appears in the footer works correctly\", priority = 50)\r\n    public void verifyFitnessAccessoriesLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getFitnessAccessoriesOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.fitnessAccessoriesUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.fitnessAccessoriesUrl),\" The Current URL is not matched with the fitnessAccessories Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Fitness Accessories page\", priority = 51)\r\n    public void verifyTheFooterSectionAppearsInTheFitnessAccessoriesPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyFitnessAccessoriesLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Shakers Link appears in the footer works correctly\", priority = 52)\r\n    public void verifyShakersLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getShakersOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.shakersUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.shakersUrl),\" The Current URL is not matched with the shakers Url \");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Shakers page\", priority = 53)\r\n    public void verifyTheFooterSectionAppearsInTheShakersPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyShakersLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Home Gym Equipment Link appears in the footer works correctly\", priority = 54)\r\n    public void verifyHomeGymEquipmentLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getHomeGymEquipmentOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.homeGymEquipmentUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.homeGymEquipmentUrl),\" The Current URL is not matched with the homeGymEquipment Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Home Gym Equipment page\", priority = 55)\r\n    public void verifyTheFooterSectionAppearsInTheHomeGymEquipmentPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyHomeGymEquipmentLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Watches Link appears in the footer works correctly\", priority = 56)\r\n    public void verifyWatchesLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getWatchesOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.watchesUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.watchesUrl),\" The Current URL is not matched with the watches Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Watches page\", priority = 57)\r\n    public void verifyTheFooterSectionAppearsInTheWatchesPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWatchesLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Straps Link appears in the footer works correctly\", priority = 58)\r\n    public void verifyStrapsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getStrapsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.strapsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.strapsUrl),\" The Current URL is not matched with the straps Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Straps page\", priority = 59)\r\n    public void verifyTheFooterSectionAppearsInTheStrapsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyStrapsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Bags Link appears in the footer works correctly\", priority = 60)\r\n    public void verifyBagsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getBagsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.bagsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.bagsUrl),\" The Current URL is not matched with the bags Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Straps page\", priority = 61)\r\n    public void verifyTheFooterSectionAppearsInTheBagsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyBagsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Protein & Fitness Section Appears Correctly In Footer\", priority = 62)\r\n    public void verifyProteinAndFitnessSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getProteinAndFitnessHeader().getText(), \"Protein & Fitness\");\r\n        Assert.assertEquals(aeFooterPage.getWheyProteinOption().getText(), \"Whey Protein\");\r\n        Assert.assertEquals(aeFooterPage.getWheyProteinIsolateOption().getText(), \"Whey Protein Isolate\");\r\n        Assert.assertEquals(aeFooterPage.getCaseinProteinOption().getText(), \"Casein Protein\");\r\n        Assert.assertEquals(aeFooterPage.getWeightGainAndMassGainerOption().getText(), \"Weight Gain & Mass Gainer\");\r\n        Assert.assertEquals(aeFooterPage.getBCAAsAndAminoAcidsOption().getText(), \"BCAAs & Amino Acids\");\r\n        Assert.assertEquals(aeFooterPage.getPreWorkoutAndEnduranceOption().getText(), \"Pre-Workout & Endurance\");\r\n        Assert.assertEquals(aeFooterPage.getGlutamineAndRecoveryOption().getText(), \"Glutamine & Recovery\");\r\n        Assert.assertEquals(aeFooterPage.getFatBurnersOption().getText(), \"Fat Burners\");\r\n        Assert.assertEquals(aeFooterPage.getProteinBarsOption().getText(), \"Protein Bars\");\r\n        Assert.assertEquals(aeFooterPage.getHealthySnacksOption().getText(), \"Healthy Snacks\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Whey Protein Link appears in the footer works correctly\", priority = 63)\r\n    public void verifyWheyProteinLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.getWheyProteinOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.wheyProteinUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.wheyProteinUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Whey Protein page\", priority = 64)\r\n    public void verifyTheFooterSectionAppearsInTheWheyProteinPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWheyProteinLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Whey Protein Isolate Link appears in the footer works correctly\", priority = 65)\r\n    public void verifyWheyProteinIsolateLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getWheyProteinIsolateOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.wheyProteinIsolateUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.wheyProteinIsolateUrl),\" The Current URL is not matched with the wheyProteinIsolate Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Whey Protein Isolate page\", priority = 66)\r\n    public void verifyTheFooterSectionAppearsInTheWheyProteinIsolatePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWheyProteinIsolateLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Casein Protein Link appears in the footer works correctly\", priority = 67)\r\n    public void verifyCaseinProteinLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getCaseinProteinOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.caseinProteinUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.caseinProteinUrl),\" The Current URL is not matched with the caseinProtein Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Casein Protein page\", priority = 68)\r\n    public void verifyTheFooterSectionAppearsInTheCaseinProteinPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyCaseinProteinLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Weight Gain And Mass Gainer Link appears in the footer works correctly\", priority = 69)\r\n    public void verifyWeightGainAndMassGainerLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getWeightGainAndMassGainerOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.weightGainAndMassGainerUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.weightGainAndMassGainerUrl),\" The Current URL is not matched with weightGainAndMassGainer Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Weight Gain And Mass Gainer page\", priority = 70)\r\n    public void verifyTheFooterSectionAppearsInTheWeightGainAndMassGainerPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyWeightGainAndMassGainerLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the BCAAs And Amino Acids Link appears in the footer works correctly\", priority = 71)\r\n    public void verifyBCAAsAndAminoAcidsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getBCAAsAndAminoAcidsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.bCAAsAndAminoAcidsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.bCAAsAndAminoAcidsUrl),\" The Current URL is not matched with the bCAAsAndAminoAcids Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the BCAAs And Amino Acids page\", priority = 72)\r\n    public void verifyTheFooterSectionAppearsInTheBCAAsAndAminoAcidsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyBCAAsAndAminoAcidsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Pre-Workout And Endurance Link appears in the footer works correctly\", priority = 73)\r\n    public void verifyPreWorkoutAndEnduranceLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getPreWorkoutAndEnduranceOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.preWorkoutAndEnduranceUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.preWorkoutAndEnduranceUrl),\" The Current URL is not matched with the preWorkoutAndEnduranceUrl\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Pre-Workout And Endurance page\", priority = 74)\r\n    public void verifyTheFooterSectionAppearsInThePreWorkoutAndEndurancePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyPreWorkoutAndEnduranceLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Glutamine And Recovery Link appears in the footer works correctly\", priority = 75)\r\n    public void verifyGlutamineAndRecoveryLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getGlutamineAndRecoveryOption().click();\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Glutamine And Recovery page\", priority = 76)\r\n    public void verifyTheFooterSectionAppearsInTheGlutamineAndRecoveryPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyGlutamineAndRecoveryLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Fat Burners Link appears in the footer works correctly\", priority = 77)\r\n    public void verifyFatBurnersLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getFatBurnersOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.fatBurnersUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.fatBurnersUrl),\" The Current URL is not matched wih the fatBurners Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Fat Burners page\", priority = 78)\r\n    public void verifyTheFooterSectionAppearsInTheFatBurnersPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyFatBurnersLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Protein Bars Link appears in the footer works correctly\", priority = 79)\r\n    public void verifyProteinBarsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getProteinBarsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.proteinBarsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.proteinBarsUrl),\" The Current URL is not matched with the proteinBars Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Protein Bars page\", priority = 80)\r\n    public void verifyTheFooterSectionAppearsInTheProteinBarsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyProteinBarsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Healthy Snacks Link appears in the footer works correctly\", priority = 81)\r\n    public void verifyHealthySnacksLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getHealthySnacksOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.healthySnacksUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.healthySnacksUrl),\" The Current URL is not matched with the healthySnacks Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Healthy Snacks page\", priority = 82)\r\n    public void verifyTheFooterSectionAppearsInTheHealthySnacksPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyHealthySnacksLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Vitamins & Health Section Appears Correctly In Footer\", priority = 83)\r\n    public void verifyVitaminsAndHealthSectionAppearsCorrectlyInFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertEquals(aeFooterPage.getVitaminsAndHealthHeader().getText(), \"Vitamins & Health\");\r\n        Assert.assertEquals(aeFooterPage.getMultivitaminsOption().getText(), \"Multivitamins\");\r\n        Assert.assertEquals(aeFooterPage.getVitaminsdOption().getText(), \"Vitamin D\");\r\n        Assert.assertEquals(aeFooterPage.getVitaminscOption().getText(), \"Vitamin C\");\r\n        Assert.assertEquals(aeFooterPage.getVitaminseOption().getText(), \"Vitamin E\");\r\n        Assert.assertEquals(aeFooterPage.getFishOilAndOmega3Option().getText(), \"Fish Oil & Omega 3\");\r\n        Assert.assertEquals(aeFooterPage.getFolicAcidOption().getText(), \"Folic Acid\");\r\n        Assert.assertEquals(aeFooterPage.getBoneAndJointSupportOption().getText(), \"Bone & Joint Support\");\r\n        Assert.assertEquals(aeFooterPage.getCollagenOption().getText(), \"Collagen\");\r\n        Assert.assertEquals(aeFooterPage.getHairSkinAndNailsOption().getText(), \"Hair Skin & Nails\");\r\n        Assert.assertEquals(aeFooterPage.getTestosteroneBoosterOption().getText(), \"Testosterone Booster\");\r\n        Assert.assertEquals(aeFooterPage.getMelatoninAndSleepSupportOption().getText(), \"Melatonin & Sleep Support\");\r\n        Assert.assertEquals(aeFooterPage.getDigestiveSupportOption().getText(), \"Digestive Support\");\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Multivitamins Link appears in the footer works correctly\", priority = 84)\r\n    public void verifyMultivitaminsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getMultivitaminsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.multivitaminsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.multivitaminsUrl),\" The Current URL is not matched with the multivitamins Url\");\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Multivitamins page\", priority = 85)\r\n    public void verifyTheFooterSectionAppearsInTheMultivitaminsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyMultivitaminsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Vitamins D Link appears in the footer works correctly\", priority = 86)\r\n    public void verifyVitaminsdLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getVitaminsdOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.vitamindUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.vitamindUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Vitamins D page\", priority = 87)\r\n    public void verifyTheFooterSectionAppearsInTheVitaminsdPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyVitaminsdLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Vitamins C Link appears in the footer works correctly\", priority = 88)\r\n    public void verifyVitaminscLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getVitaminscOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.vitamincUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.vitamincUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Vitamins C page\", priority = 89)\r\n    public void verifyTheFooterSectionAppearsInTheVitaminscPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyVitaminscLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Vitamins E Link appears in the footer works correctly\", priority = 90)\r\n    public void verifyVitaminseLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getVitaminseOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.vitamineUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.vitamineUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Vitamins E page\", priority = 91)\r\n    public void verifyTheFooterSectionAppearsInTheVitaminsePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyVitaminseLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Fish Oil & Omega 3 Link appears in the footer works correctly\", priority = 92)\r\n    public void verifyFishOilAndOmega3LinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getFishOilAndOmega3Option().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.fishOilOmegasUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.fishOilOmegasUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Fish Oil & Omega 3 page\", priority = 93)\r\n    public void verifyTheFooterSectionAppearsInTheFishOilAndOmega3Page() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyFishOilAndOmega3LinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Folic Acid Link appears in the footer works correctly\", priority = 94)\r\n    public void verifyFolicAcidLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getFolicAcidOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.folicAcidUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.folicAcidUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Folic Acid page\", priority = 95)\r\n    public void verifyTheFooterSectionAppearsInTheFolicAcidPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyFolicAcidLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Bone & Joint Support Link appears in the footer works correctly\", priority = 96)\r\n    public void verifyBoneAndJointSupportLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getBoneAndJointSupportOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.boneJointSupportUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.boneJointSupportUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Bone & Joint Support page\", priority = 97)\r\n    public void verifyTheFooterSectionAppearsInTheBoneAndJointSupportPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyBoneAndJointSupportLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Collagen Link appears in the footer works correctly\", priority = 98)\r\n    public void verifyCollagenLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getCollagenOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.collagenUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.collagenUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Collagen page\", priority = 99)\r\n    public void verifyTheFooterSectionAppearsInTheCollagenPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyCollagenLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Hair Skin & Nails Link appears in the footer works correctly\", priority = 100)\r\n    public void verifyHairSkinAndNailsLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getHairSkinAndNailsOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.hairSkinNailsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.hairSkinNailsUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Hair Skin & Nails page\", priority = 101)\r\n    public void verifyTheFooterSectionAppearsInTheHairSkinAndNailsPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyHairSkinAndNailsLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Testosterone Booster Link appears in the footer works correctly\", priority = 102)\r\n    public void verifyTestosteroneBoosterLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getTestosteroneBoosterOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.testosteroneBoosterUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.testosteroneBoosterUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Hair Testosterone Booster page\", priority = 103)\r\n    public void verifyTheFooterSectionAppearsInTheTestosteroneBoosterPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyTestosteroneBoosterLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Melatonin & Sleep Support Link appears in the footer works correctly\", priority = 104)\r\n    public void verifyMelatoninAndSleepSupportLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getMelatoninAndSleepSupportOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.melatoninSleepSupportUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.melatoninSleepSupportUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the  Melatonin & Sleep Support page\", priority = 105)\r\n    public void verifyTheFooterSectionAppearsInTheMelatoninAndSleepSupportPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyMelatoninAndSleepSupportLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Digestive Support Link appears in the footer works correctly\", priority = 106)\r\n    public void verifyDigestiveSupportLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getDigestiveSupportOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.digestionSupportUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.digestionSupportUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Digestive Support  page\", priority = 107)\r\n    public void verifyTheFooterSectionAppearsInTheDigestiveSupportPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyDigestiveSupportLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Terms of Service Link appears in the footer works correctly\", priority = 108)\r\n    public void verifyTermsAndServiceLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getTermsAndServiceOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.termsAndServiceUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.termsAndServiceUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Terms of Service page\", priority = 109)\r\n    public void verifyTheFooterSectionAppearsInTheTermsAndServicePage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyTermsAndServiceLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the Privacy Policy Link appears in the footer works correctly\", priority = 110)\r\n    public void verifyPrivacyPolicyLinkAppearsInFooterWorksCorrectly() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        aeFooterPage.getPrivacyPolicyOption().click();\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.privacyPolicyUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.privacyPolicyUrl));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section- Make sure the footer section appears correctly in the Privacy Policy page\", priority = 111)\r\n    public void verifyTheFooterSectionAppearsInThePrivacyPolicyPage() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyPrivacyPolicyLinkAppearsInFooterWorksCorrectly();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n    @Test(description = \" Footer Section- Make sure the copyright statement appears correctly in the footer section\", priority = 116)\r\n    public void verifyTheCopyRightStatementAppearsInTheFooter() {\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.navigateToHomePage();\r\n        Assert.assertTrue(aeFooterPage.getCopyright().isDisplayed());\r\n    }\r\n    @Test(description = \" Footer Section/Social Media- Make sure the ability to click on the instagram icon correctly\", priority = 112)\r\n    public void verifyAbilityToClickOnInstagramIconCorrectly() throws Exception {\r\n        tearDown();\r\n        setupBrowserFromTheClass(environmentName,browserName,countryUrl);\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.switchToAECountry();\r\n        aeFooterPage.getInstagramIcon().click();\r\n        DataHelperAndWait.switchToTabBrowser(1,webDriver);\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.instagramURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.instagramURL));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \" Footer Section/Social Media- Make sure the ability to click on the facebook icon correctly\", priority = 113)\r\n    public void verifyAbilityToClickOnFacebookIconCorrectly() throws Exception {\r\n        tearDown();\r\n        setupBrowserFromTheClass(environmentName,browserName,countryUrl);\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.switchToAECountry();\r\n        aeFooterPage.getFacebookIcon().click();\r\n        DataHelperAndWait.switchToTabBrowser(1,webDriver);\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.facebookURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.facebookURL));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        webDriver.close();\r\n        DataHelperAndWait.switchToTabBrowser(0,webDriver);\r\n    }\r\n\r\n    @Test(description = \" Footer Section/Social Media- Make sure the ability to click on the twitter icon correctly\", priority = 114)\r\n    public void verifyAbilityToClickOnTwitterIconCorrectly() throws Exception {\r\n        tearDown();\r\n        setupBrowserFromTheClass(environmentName,browserName,countryUrl);\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.switchToAECountry();\r\n        aeFooterPage.getTwitterIcon().click();\r\n        DataHelperAndWait.switchToTabBrowser(1,webDriver);\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.twitterURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.twitterURL));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();;\r\n        webDriver.close();\r\n        DataHelperAndWait.switchToTabBrowser(0,webDriver);\r\n    }\r\n\r\n    @Test(description = \" Footer Section/Social Media- Make sure the ability to click on the youtube icon correctly\", priority = 115)\r\n    public void verifyAbilityToClickOnYouTubeIconCorrectly() throws Exception {\r\n        tearDown();\r\n        setupBrowserFromTheClass(environmentName,browserName,countryUrl);\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        aeFooterPage.switchToAECountry();\r\n        aeFooterPage.getYoutubeIcon().click();\r\n        DataHelperAndWait.switchToTabBrowser(1,webDriver);\r\n        DataHelperAndWait.waitForUrlContains(aeFooterPage.youtubeURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeFooterPage.youtubeURL));\r\n        aeFooterPage.verifyTheDisplayedPageDoesNotHaveErrors();;\r\n        webDriver.close();\r\n        DataHelperAndWait.switchToTabBrowser(0,webDriver);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AEFooterPageTestCases.java b/src/test/java/sporter_test/AEFooterPageTestCases.java
--- a/src/test/java/sporter_test/AEFooterPageTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AEFooterPageTestCases.java	(date 1673265422447)
@@ -80,7 +80,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Footer Section","Smoke Testing Result","Low Severity"},description = " Footer Section- Verify the Join Our NEWSLETTER section that appears in the footer section is displayed correctly", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Footer Section- Verify the Join Our NEWSLETTER section that appears in the footer section is displayed correctly", priority = 2)
+>>>>>>> origin/master
     public void verifyJoinOurNewsletterSectionIsDisplayedCorrectly() {
         AEFooterPage aeFooterPage = new AEFooterPage(webDriver);
         Assert.assertTrue(aeFooterPage.getNewsletterBlock().isDisplayed());
@@ -90,7 +94,11 @@
         Assert.assertTrue(aeFooterPage.getJoinBtnInNewsletterBlock().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Footer Section","Smoke Testing Result","Medium Severity"},description = " Footer Section- Make sure the user(Male) can join sporter NEWSLETTER correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Footer Section- Make sure the user(Male) can join sporter NEWSLETTER correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyAbilityToJoinSporterNewsletterWithMaleOptionCorrectly() {
         AEFooterPage aeFooterPage = new AEFooterPage(webDriver);
         aeFooterPage.fillInemailFieldInNewsletterBlock(aeFooterPage.generateRandomEmail());
@@ -99,7 +107,11 @@
         Assert.assertTrue(aeFooterPage.getSubscriptionSuccessfulMsg().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Footer Section","Smoke Testing Result","Medium Severity"},description = " Footer Section- Make sure the user(Female) can join sporter NEWSLETTER correctly", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Footer Section- Make sure the user(Female) can join sporter NEWSLETTER correctly", priority = 4)
+>>>>>>> origin/master
     public void verifyAbilityToJoinSporterNewsletterWithFemaleOptionCorrectly() {
         AEFooterPage aeFooterPage = new AEFooterPage(webDriver);
         aeFooterPage.navigateToHomePage();
Index: src/test/java/sporter_test/AeProductDetailsPageTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AEGuestUserPage;\r\nimport sporter_pages.AEMegaMenuPage;\r\nimport sporter_pages.AeProductDetailsPage;\r\n\r\nimport static org.testng.Assert.*;\r\n\r\npublic class AeProductDetailsPageTestCases extends BaseTest {\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Products Details Page- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeProductDetailsPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n\r\n    @Test(description = \"Make sure the shopper is able to keep the shopping after adding the product to the cart \", priority = 2)\r\n    public void keepShoppingAfterAddingToTheCart() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        String currentURL = webDriver.getCurrentUrl() + \"#\";\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), currentURL);\r\n    }\r\n\r\n    @Test(description = \"Make sure the shopper is able to View the cart after adding the product to it \", priority = 3)\r\n    public void viewCartAfterAddingTheProductToIt() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n    }\r\n\r\n    @Test(description = \"Make sure the out of stock message appears when displaying out of stock product \", priority =4)\r\n    public void verifyOOSMessageIsDisplayed() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayOOSProduct();\r\n        assertTrue(aeProductDetailsPage.getOOSMsg().isDisplayed());\r\n    }\r\n\r\n    @Test(dependsOnMethods = \"verifyOOSMessageIsDisplayed\",description = \"Make sure the shopper is unable to add out of stock product to the cart\", priority =5,expectedExceptions = { org.openqa.selenium.NoSuchElementException.class })\r\n    public void verifyInabilityToAddOosProductToTheCart() throws Exception{\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        Assert.assertFalse(aeProductDetailsPage.getAddToCartSectionForOOSProduct().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Make sure to display the product from search screen\", priority = 6)\r\n    public void verifyAbilityToDisplayTheProductFromSearchScreen() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.clickOnSearchBtn();\r\n        aeProductDetailsPage.clickOnTheProductCard();\r\n        assertTrue(aeProductDetailsPage.getAddToCartBtn().isDisplayed());\r\n    }\r\n\r\n\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Make sure that the increase quantity function works fine \", priority = 7)\r\n    public void verifyIncreaseQuantityButtonWorkingFine() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.increaseTheQuantity();\r\n        Assert.assertEquals(aeProductDetailsPage.getQuantityField().getAttribute(\"value\"), \"2\");\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Make sure that the Decrease quantity function works fine \", priority = 8)\r\n    public void verifyDecreaseQuantityButtonWorkingFine() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.decreaseTheQuantity();\r\n        Assert.assertEquals(aeProductDetailsPage.getQuantityField().getAttribute(\"value\"), \"1\");\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Make sure that the customer can submit his review successfully \", priority = 9)\r\n    public void verifyAbilityToSubmitTheProductReview() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.selectStarInReview();\r\n        aeProductDetailsPage.submitProductReview(\"Review Description\", \"Review Summary\", \"Walaa Mohammad\");\r\n        assertTrue(aeProductDetailsPage.getReviewToastMsg().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Make sure that the customer is unable to submit his review without selecting any star \", priority = 10)\r\n    public void verifyInabilityToSubmitReviewWithoutSelectingStar() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.submitProductReview(\"Review Description\", \"Review Summary\", \"Wala'a Mohammad\");\r\n        assertTrue(aeProductDetailsPage.getReviewErrorMsg().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Make sure that the customer can submit his review when filling Review Form with Long Length\", priority = 11)\r\n    public void verifyAbilityToFillTheReviewWIthLongLength() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.selectStarInReview();\r\n        aeProductDetailsPage.submitProductReview(\"Review Description With Long Length Review Description With Long LengthReReview Description With Long Length Review Description With Long Length view Description With Long Length \", \"Review Summary WIth Long Length Review Summary WIth Long Length Review Summary WIth Long Length Review Summary WIth Long Length Review Summary WIth Long Length \", \"Abd-Alrahman Abd Alazez Abdullah Mohammad Khair\");\r\n        assertTrue(aeProductDetailsPage.getReviewToastMsg().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Make sure that the customer can navigate to the home page using the BreadCrumb \", priority = 12)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Make sure that the customer can add the same product more than once by clicking on the Add To Product button in each time \", priority = 13)\r\n    public void verifyAbilityToAddProductToCartMultiTimes() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        String oldProductURL = webDriver.getCurrentUrl();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        String newProductURL = webDriver.getCurrentUrl();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), newProductURL);\r\n    }\r\n\r\n    @Test(description = \"Make sure that the product price is changed when you change the quantity \", priority = 14)\r\n    public void verifyTheProductPriceChangesBasedOnTheSelectedQty() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        String currentProductPrice = aeProductDetailsPage.getProductPrice().getText();\r\n        aeProductDetailsPage.increaseTheQuantity();\r\n        String newProductPrice = aeProductDetailsPage.getProductPrice().getText();\r\n        Assert.assertNotEquals(currentProductPrice, newProductPrice);\r\n    }\r\n\r\n\r\n    @Test(description = \"Make sure ability to display the bundle and select all options\", priority = 15)\r\n    public void verifyAbilityToDisplayBundleAndSelectAllOptions() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.clickOnSearchBtn();\r\n        aeProductDetailsPage.clickOnTheProductCard();\r\n        Select select = new Select(aeProductDetailsPage.getBundleMenu());\r\n        WebElement currentSelectedOption = select.getFirstSelectedOption();\r\n        String currentSelectedOptionText = currentSelectedOption.getText();\r\n        System.out.println(currentSelectedOptionText);\r\n        DataHelperAndWait.selectAllDropDownListOptions(select);\r\n        WebElement newSelectedOption = select.getAllSelectedOptions().get(0);\r\n        String newSelectedOptionText = newSelectedOption.getText();\r\n        System.out.println(newSelectedOptionText);\r\n        Assert.assertNotEquals(currentSelectedOptionText, newSelectedOptionText);\r\n    }\r\n\r\n    @Test(description = \"Verify that the system display a label on the PDP to indicate for the customer he will get a free product\", priority = 16)\r\n    public void verifyTheresLabelInPdpToIndicateThatTheresAnOfferOnThisProduct() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.clickOnFirstProductInTheCategoryList();\r\n        assertTrue(aeProductDetailsPage.getFreeProductLabel().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the About This product section displays correctly in the PDP\", priority = 17)\r\n    public void verifyAboutThisProductSectionDisplaysCorrectlyInProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        assertTrue(aeProductDetailsPage.getAboutThisProductSection().isDisplayed());\r\n        assertEquals(aeProductDetailsPage.getAboutThisProductTitle().getText(), \"About This Product\");\r\n    }\r\n\r\n    @Test(description = \"Verify that the Supplement Facts section displays correctly in the PDP\", priority = 18)\r\n    public void verifySupplementFactsSectionDisplaysCorrectlyInProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        assertTrue(aeProductDetailsPage.getSupplementFactsTable().isDisplayed());\r\n        assertEquals(aeProductDetailsPage.getSupplementFactsTitle().getText(), \"Supplement Facts\");\r\n    }\r\n\r\n    //      The following Test Cases handle displaying the Mega Menu from Product Page\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Verify that the ShopBy Menu Is Displayed When Hovering On It From Product Details Page\", priority = 19)\r\n    public void verifyShopByMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        Actions action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getShopeByMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getSubMenuSection().isDisplayed(), \"The Sport Supplements menu is not displayed when Hovering on it from Product Page\");\r\n\r\n    }\r\n\r\n    @Test(description = \"Verify that the Sport Supplements Menu Is Displayed When Hovering On It From Product Details Page\", priority = 20)\r\n    public void verifySportSupplementsMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        Actions action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        DataHelperAndWait.waitToBeVisible(aeMegamenuPage.getSportsSupplementMainMenuList().get(0),5,webDriver);\r\n        Assert.assertEquals(aeMegamenuPage.getSportsSupplementMainMenuList().get(0).getText(), \"PROTEIN\\n\" + \"Whey Protein\\n\" + \"Whey Protein Isolate\\n\" +\r\n                \"Protein Blends\\n\" + \"Non-dairy Protein\\n\" + \"Casein Protein\\n\" + \"Diet Protein\\n\" + \"Mass Gainers\\n\" + \"CREATINE\\n\" +\r\n                \"Creatine Monohydrate\\n\" + \"Creatine Blends\\n\" + \"AMINO ACIDS\\n\" + \"BCAA\\n\" + \"EAA\\n\" + \"Arginine\\n\" + \"Beta Alanine\\n\" +\r\n                \"HMB\\n\" + \"Amino Acid Powders\\n\" + \"Amino Acid Pills\\n\" + \"Citrulline\\n\" + \"Amino Acid Liquids\\n\" + \"MUSCLE BOOSTERS\\n\" +\r\n                \"Testosterone Boosters\\n\" + \"Gh Boosters\\n\" + \"WEIGHT MANAGEMENT\\n\" + \"Stimulant Weight Loss\\n\" + \"Non-stimulant Weight Loss\\n\" +\r\n                \"Meal Replacements\\n\" + \"Metabolism Support\\n\" + \"Toning Creams\\n\" + \"MCT\\n\" + \"RECOVERY\\n\" + \"Glutamine\\n\" + \"Recovery Blends\\n\" +\r\n                \"Electrolytes & Hydration\\n\" + \"CARBOHYDRATES\\n\" + \"Carbohydrate Powders\\n\" + \"ENERGY & ENDURANCE\\n\" + \"Stimulant Energy\\n\" +\r\n                \"Non-stimulant Energy\\n\" + \"GAMING & FOCUS\\n\" + \"Gaming Essentials\");    }\r\n\r\n    @Test(description = \"Verify that the Vitamins And Health Menu Is Displayed When Hovering On It From Product Details Page\", priority = 21)\r\n    public void verifyVitaminsAndHealthMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        Actions action = new Actions(webDriver);\r\n        webDriver.navigate().to(aeMegamenuPage.BaseURL +product);\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getVitaminsAndHealthSubMenuSection().isDisplayed(), \"The Sport Supplements menu is not displayed when Hovering on it from OOS Product Page\");    }\r\n\r\n    @Test(description = \"Verify that the Healthy Food Menu Is Displayed When Hovering On It From Product Details Page\", priority = 22)\r\n    public void verifyHealthyFoodMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        Actions action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getHealthyFoodSubMenuSection().isDisplayed(), \"The Sport Supplements menu is not displayed when Hovering on it\");    }\r\n\r\n    @Test(description = \"Verify that the Sports Menu Is Displayed When Hovering On It From Product Details Page\", priority = 23)\r\n    public void verifySportsMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        Actions action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getSportsSubMenuSection().isDisplayed(), \"The Sport Supplements menu is not displayed when Hovering on it\");    }\r\n\r\n    @Test(description = \"Verify that the account Profile icon works correctly in PDP\", priority = 24)\r\n    public void verifyAccountProfileIconWorksCorrectlyInProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnAccountProfileIcon();\r\n        assertTrue(aeProductDetailsPage.getAccountProfileOptions().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the Direction Of Use section displays correctly in the PDP\", priority = 25)\r\n    public void verifyDirectionOfUseSectionDisplaysCorrectlyInProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        assertTrue(aeProductDetailsPage.getDirectionsOfUseSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the About Brand section displays correctly in the PDP\", priority = 26)\r\n    public void verifyAboutBrandSectionDisplaysCorrectlyInProductDetailsPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        assertTrue(aeProductDetailsPage.getAboutBrandSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the header Bar in the PDP appears correctly when scrolling down\", priority = 27)\r\n    public void verifyAddToCartBtnInHeaderBarWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        Actions act = new Actions(webDriver);\r\n        act.sendKeys(Keys.PAGE_DOWN).build().perform();\r\n        aeProductDetailsPage.clickOnAddToCartBtnInProductHeaderBar();\r\n        assertTrue(aeProductDetailsPage.getProductHeaderBar().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the Add to Cart Button appears in the header Bar in the PDP works correctly \", priority = 28)\r\n    public void verifyHeaderBarDisplaysCorrectlyInProductDetailsPageWhenScrollingThePage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        Actions act = new Actions(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        act.sendKeys(Keys.PAGE_DOWN).build().perform();\r\n        aeProductDetailsPage.clickOnAddToCartBtnInProductHeaderBar();\r\n        assertTrue(aeProductDetailsPage.getKeepShippingBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify clicking on the By Brand Link appears in Product Name section will redirect the user to correct page \", priority = 29)\r\n    public void verifyClickingOnByBrandLinkAppearsInProductNameSectionRedirectUserToCorrectPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnProductBrandLink();\r\n        DataHelperAndWait.waitForUrlContains(\"brands\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"brands\"));\r\n        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Verify that Expected Delivery Date Label and its value displayed correctly\", priority = 30)\r\n    public void verifyExpectedDeliveryDateAppearsCorrectlyAndRetrieveDateInPdp() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        assertTrue(aeProductDetailsPage.getExpectedDeliveryDateLabel().isDisplayed());\r\n        assertTrue(aeProductDetailsPage.getExpectedDeliveryDateValue().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Verify that the search button works correctly from the PDP\", priority = 31)\r\n    public void verifySearchBtnWorksCorrectlyFromPdp() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(aeProductDetailsPage.getSearchPageTitle().isDisplayed());\r\n        aeProductDetailsPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Make sure that the next review page button appears in Reviews section works correctly \", priority = 32)\r\n    public void verifyNextReviewPageBtnAppearsInReviewsSectionWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnNextReviewPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n//There's bug here\r\n    @Test(description = \"Make sure that the Previous review page button appears in Reviews section works correctly \", priority = 33)\r\n    public void verifyPreviousReviewPageBtnAppearsInReviewsSectionWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.clickOnPreviousReviewPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=1\"));\r\n    }\r\n\r\n    @Test(description = \"Make sure that the pagination control appears in Reviews section works correctly \", priority = 34)\r\n    public void verifyPaginationControlAppearsInReviewsSectionWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnPageBtnInReviewSection();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Make sure that the simple price changes when navigation between sizes for the config \", priority = 35)\r\n    public void verifySimplePriceChangesWhenNavigationBetweenSizesForTheConfig() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnFirstsimple();\r\n        String firstPrice = aeProductDetailsPage.getFinalProductPrice().getText();\r\n        aeProductDetailsPage.clickOnSecondimple();\r\n        String secondPrice = aeProductDetailsPage.getFinalProductPrice().getText();\r\n        Assert.assertNotEquals(firstPrice, secondPrice,\"The simple price is not changes\");\r\n    }\r\n\r\n    @Test(description = \"Make sure ability to navigate to the home page by clicking on the sporter logo from the product Details Page  \", priority = 36)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromPdp() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeDomain+\"/\");\r\n    }\r\n\r\n    @Test(description = \"Make sure the system will display a message when the offer is not available in the selected country\", priority = 37)\r\n    public void verifyInabilityToDisplayUnAvailableOffer() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayNotAvailableOfferProduct();\r\n        aeProductDetailsPage.switchToJOCountry();\r\n        boolean verifyTitle = webDriver.getTitle().equalsIgnoreCase(\"Sporter.com - Page Not Found\");\r\n        assertFalse(verifyTitle, \"Page Not Found Is Displayed and the URL is \"+webDriver.getCurrentUrl());\r\n        boolean isTheElementPresent = webDriver.getPageSource().contains(\"We can't find products matching the selection.\");\r\n        assertFalse(isTheElementPresent, \"The page is empty and the URL is \"+webDriver.getCurrentUrl());\r\n        boolean isExceptionPagePresent = webDriver.getPageSource().contains(\"An error has happened during application run. See exception log for details.\");\r\n        assertFalse(isExceptionPagePresent, \"The exception page is displayed \"+webDriver.getCurrentUrl());\r\n        boolean isTheElementPresent2 = webDriver.getPageSource().contains(\"this offer is not available in your country\");\r\n        assertTrue(isTheElementPresent2, \"The  offer is not available in your country page is displayed \"+webDriver.getCurrentUrl());\r\n    }\r\n//    @Test(description = \"Make sure that the customer cannot add more than 2 Qty for the same product when switching to Jordan Store\", priority = 38)\r\n//    public void verifyInabilityToAddMoreThan2QtyForJOStore() {\r\n//        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        aeProductDetailsPage.switchToJOCountry();\r\n//        aeProductDetailsPage.displayTheProduct();\r\n//        aeProductDetailsPage.increaseTheQuantity();\r\n//        aeProductDetailsPage.increaseTheQuantity();\r\n//        aeProductDetailsPage.addToCart();\r\n//        assertTrue(aeProductDetailsPage.getInconvenienceWarningMsg().isDisplayed());\r\n//    }\r\n    @Test(description = \"Make sure that the customer can switch to Arabic Language from PDP \", priority = 39)\r\n    public void verifyAbilityToSwitchToArabicVersionFromPDP() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.switchToAECountry();\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.switchToArabicVersion();\r\n        assertTrue(aeProductDetailsPage.getEnglishLangBtn().isDisplayed());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeProductDetailsPageTestCases.java b/src/test/java/sporter_test/AeProductDetailsPageTestCases.java
--- a/src/test/java/sporter_test/AeProductDetailsPageTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeProductDetailsPageTestCases.java	(date 1673265422709)
@@ -61,7 +61,11 @@
         Assert.assertFalse(aeProductDetailsPage.getAddToCartSectionForOOSProduct().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","High Severity"},description = "Make sure to display the product from search screen", priority = 6)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure to display the product from search screen", priority = 6)
+>>>>>>> origin/master
     public void verifyAbilityToDisplayTheProductFromSearchScreen() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.clickOnSearchBtn();
@@ -71,7 +75,11 @@
 
 
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","High Severity"},description = "Make sure that the increase quantity function works fine ", priority = 7)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure that the increase quantity function works fine ", priority = 7)
+>>>>>>> origin/master
     public void verifyIncreaseQuantityButtonWorkingFine() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.displayTheProduct();
@@ -79,14 +87,22 @@
         Assert.assertEquals(aeProductDetailsPage.getQuantityField().getAttribute("value"), "2");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","High Severity"},description = "Make sure that the Decrease quantity function works fine ", priority = 8)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure that the Decrease quantity function works fine ", priority = 8)
+>>>>>>> origin/master
     public void verifyDecreaseQuantityButtonWorkingFine() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.decreaseTheQuantity();
         Assert.assertEquals(aeProductDetailsPage.getQuantityField().getAttribute("value"), "1");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","Medium Severity"},description = "Make sure that the customer can submit his review successfully ", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure that the customer can submit his review successfully ", priority = 9)
+>>>>>>> origin/master
     public void verifyAbilityToSubmitTheProductReview() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.selectStarInReview();
@@ -118,7 +134,11 @@
         aeProductDetailsPage.clickOnBreadcrumbHomePage();
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);
     }
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","High Severity"},description = "Make sure that the customer can add the same product more than once by clicking on the Add To Product button in each time ", priority = 13)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Make sure that the customer can add the same product more than once by clicking on the Add To Product button in each time ", priority = 13)
+>>>>>>> origin/master
     public void verifyAbilityToAddProductToCartMultiTimes() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.displayTheProduct();
@@ -186,7 +206,11 @@
     }
 
     //      The following Test Cases handle displaying the Mega Menu from Product Page
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","Low Severity"},description = "Verify that the ShopBy Menu Is Displayed When Hovering On It From Product Details Page", priority = 19)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Verify that the ShopBy Menu Is Displayed When Hovering On It From Product Details Page", priority = 19)
+>>>>>>> origin/master
     public void verifyShopByMenuIsDisplayedWhenHoveringOnItFromProductDetailsPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
Index: src/test/java/sporter_test/QatarHomePageTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.QatarHomePage;\r\n\r\npublic class QatarHomePageTestCases extends BaseTest {\r\n\r\n\r\n//    QatarHomePage qatarHomePage;\r\n//The below code used when we did not define the QatarHomePageObject inside each method\r\n//    @BeforeClass\r\n//    @Override\r\n//    @Parameters({\"environment\"})\r\n//    public void setupBrowser( String environment) throws Exception {\r\n//        super.setupBrowser(environment);\r\n//        qatarHomePage= new QatarHomePage(webDriver);\r\n//    }\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Qatar HomePage- Switching to the Qatar Store\", priority = 1)\r\n    public void switchToQatarStore() {\r\n//        qatarHomePage.webDriver=this.webDriver;\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.switchToQatarCountry();\r\n        if(webDriver.getCurrentUrl().contains(qatarHomePage.qatarDomain)){\r\n            System.out.println(\"You are in Qatar Store\");\r\n        }\r\n        else {\r\n            qatarHomePage.switchToQatarCountry();\r\n        }\r\n    }\r\n\r\n    @Test( description = \"Qatar HomePage- Make sure the next and previous buttons appearing in the HomePage rotating slider section are displayed \", priority = 2)\r\n    public void verifyNextArrowAtHomePageRotatingSliderIsDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        Assert.assertTrue(qatarHomePage.getNextArrowInHomePageRotatingSlider().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure clicking on the banners inside the rotating slider section works correctly\", priority = 3)\r\n    public void verifyClickingOnTheBannersInsideTheRotatingSliderWorksCorrectly() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        for (int i = 0; i < qatarHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            qatarHomePage.getHomePageRotatingSliderPagingList().get(i).click();\r\n            qatarHomePage.getBannerInRotatingSliderSection().click();\r\n            qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            qatarHomePage.navigate();\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure clicking on the first and second side banners works correctly\", priority = 4)\r\n    public void verifyClickingOnTheFirstAndSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        String expectedUrl = qatarHomePage.getFirstSideBanner().getAttribute(\"href\");\r\n        qatarHomePage.getFirstSideBanner().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        String expectedUrlForSecondSideBanner = qatarHomePage.getSecondSideBanner().getAttribute(\"href\");\r\n        qatarHomePage.getSecondSideBanner().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrlForSecondSideBanner), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly\", priority = 5)\r\n    public void verifyClickingOnHomePageHorizontalBannerDoeNotRedirectTheUserTo404PageOrNoContentFoundPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getHorizontalBanner().isDisplayed(), \"The HomePage Horizontal Banner is missing\");\r\n        String expectedUrl = qatarHomePage.getHorizontalBanner().getAttribute(\"href\");\r\n        qatarHomePage.clickOnHomePageHorizontalBanner();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure the Shop By Category section is displayed \", priority = 6)\r\n    public void verifyShopByCategoryIsDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getShopByCategoryHeader().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getShopByCategorySections().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure the main options in the Mega Menu are retrieved correctly\", priority = 7)\r\n    public void verifyMainOptionsInTheMegaMenuAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertEquals(qatarHomePage.getShopByOption().getText(), \"Shop By\");\r\n        Assert.assertEquals(qatarHomePage.getSportSupplementsOption().getText(), \"Sport Supplements\");\r\n        Assert.assertEquals(qatarHomePage.getVitaminsAndHealthOption().getText(), \"Vitamins & Health\");\r\n        Assert.assertEquals(qatarHomePage.getHealthyFoodOption().getText(), \"Healthy Food\");\r\n        Assert.assertEquals(qatarHomePage.getSportsOption().getText(), \"SPORTS\");\r\n        Assert.assertEquals(qatarHomePage.getWomenOnlyOption().getText(), \"Women's Only\");\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure clicking on the banners appearing under shop by category banners works correctly\", priority = 8)\r\n    public void verifyClickingOnTheBannersUnderShopByCategoryBannersRedirectTheUserToCorrectUrl() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        for (int i = 0; i < qatarHomePage.getHomePageUnderShopByCategoryBanners().size(); i++) {\r\n            String expectedUrl = qatarHomePage.getHomePageUnderShopByCategoryBanners().get(i).getAttribute(\"href\");\r\n            qatarHomePage.getHomePageUnderShopByCategoryBanners().get(i).click();\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n            qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            qatarHomePage.navigate();\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure the Top Selling Stacks section is displayed \", priority = 9)\r\n    public void verifyTopSellingStacksSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getTopSellingStacksHeader().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getTopSellingStacksSections().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure the Top Sellers section is displayed \", priority = 10)\r\n    public void verifyTopSellersSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getTopSellerHeader().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getTopSellerSections().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Medium Severity\",\"Home Page\",\"Smoke Testing Result\"},description = \"Qatar HomePage- Make sure that all links appear correctly in the Top Sellers section \", priority = 11)\r\n    public void verifyAllLinksInTopSellersSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n//        Assert.assertTrue(qatarHomePage.getAllLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getSportSupplementsLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getHealthyFoodLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getVitaminsAndHealthLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getSportswearAndAccessoriesLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on ALL tab from the Top Seller Section works correctly \", priority = 12)\r\n    public void verifyAbilityToClickOnTheAllLinkInTopSellersSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnAllLinkInTopSellerSection();\r\n        Assert.assertTrue(qatarHomePage.getAllLActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sport Supplements tab from the Top Seller Section works correctly \", priority = 13)\r\n    public void verifyAbilityToClickOnTheSportSupplementsLinkInTopSellersSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportSupplementsLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getSportSupplementsActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getSportSupplementsActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Healthy Food tab from the Top Seller Section works correctly  \", priority = 14)\r\n    public void verifyAbilityToClickOnTheHealthyFoodLinkInTopSellersSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnHealthyFoodLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getHealthyFoodActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getHealthyFoodActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Vitamins And Health tab from the Top Seller Section works correctly\", priority = 15)\r\n    public void verifyAbilityToClickOnTheVitaminsAndHealthLinkInTopSellersSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnVitaminsAndHealthLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getVitaminsAndHealthActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getVitaminsAndHealthActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sportswear And Accessories from the Top Seller Section works correctly \", priority = 16)\r\n    public void verifyAbilityToClickOnTheSportswearAndAccessoriesLinkInTopSellersSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportswearAndAccessoriesLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getSportswearAndAccessoriesActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getSportswearAndAccessoriesActiveLink().isDisplayed());\r\n    }\r\n    @Test(description = \"Qatar HomePage- Make sure that previous and next buttons in the Top Seller Section work correctly \", priority = 17)\r\n    public void verifyPreviousBtnWillAppearInTopSellersSectionOnceClickingOnNextBtn() {\r\n        QatarHomePage qatarHomePage= new QatarHomePage(webDriver);\r\n    //        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnNextButtonInTopSellerSectionInTopSellerSection();\r\n        Assert.assertTrue(qatarHomePage.getPreviousButtonInTopSellerSection().isDisplayed());\r\n        qatarHomePage.clickOnPreviousButtonInTopSellersSection();\r\n    }\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure the Trending On Sporter section is displayed \", priority = 18)\r\n    public void verifyTrendingOnSporterSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getTrendingOnSporterHeader().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getTrendingOnSporterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure the next button appearing in the Trending On Sporter section works Correctly \", priority = 19)\r\n    public void verifyNextBtnInTrendingOnSporterSectionWorks() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnNextButtonInTrendingOnSporterSection();\r\n        Assert.assertTrue(qatarHomePage.getTrendingOnSporterSectionPositionAfterClickingOnNext().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure the previous button appearing in the Trending On Sporter section works Correctly \", priority = 20)\r\n    public void verifyPreviousBtnInTrendingOnSporterSectionWorks() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.clickOnPreviousButtonInTrendingOnSporterSection();\r\n        Assert.assertTrue(qatarHomePage.getTrendingOnSporterSectionPositionAfterClickingOnPrevious().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Qatar HomePage- Make sure the New Arrivals section is displayed \", priority = 21)\r\n    public void verifyNewArrivalsSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsHeader().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure that all tabs appear correctly in the New Arrivals section \", priority = 22)\r\n    public void verifyAllLinksInNewArrivalsSectionAreDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsAllLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsSportSupplementsLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsHealthyFoodLinkLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsVitaminsAndHealthLink().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsSportWearAndAccessoriesLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the ALL tab from the New Arrivals Section works correctly\", priority = 23)\r\n    public void verifyAbilityToClickOnTheAllLinkInNewArrivalsSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnAllLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getNewArrivalsAllActiveLink(), 4, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsAllActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sport Supplements tab from the New Arrivals Section works correctly \", priority = 24)\r\n    public void verifyAbilityToClickOnTheSportSupplementsLinkInNewArrivalsSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportSupplementsLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getNewArrivalsSportSupplementsActiveLink(), 4, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsSportSupplementsActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Healthy Food tab from the New Arrivals Section works correctly\", priority = 25)\r\n    public void verifyAbilityToClickOnTheHealthyFoodLinkInNewArrivalsSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnHealthyFoodLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getNewArrivalsHealthyFoodActiveLink(), 4, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsHealthyFoodActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Vitamins And Health tab from the New Arrivals Section works correctly\", priority = 26)\r\n    public void verifyAbilityToClickOnTheVitaminsAndHealthLinkInNewArrivalsSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnVitaminsAndHealthLinkInNewArrivalsSection();\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalVitaminsAndHealthActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sportswear And Accessories tab from the New Arrivals Section works correctly \", priority = 27)\r\n    public void verifyAbilityToClickOnTheSportswearAndAccessoriesLinkInNewArrivalsSection() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportswearAndAccessoriesLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(qatarHomePage.getNewArrivalsSportWearAndAccessoriesActiveLink(), 4, webDriver);\r\n        Assert.assertTrue(qatarHomePage.getNewArrivalsSportWearAndAccessoriesActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure that previous and next button appearing in the New Arrival section works correctly \", priority = 28)\r\n    public void verifyPreviousBtnWillAppearInNewArrivalsSectionOnceClickingOnNextBtn() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnNextButtonInNewArrivalSection();\r\n        Assert.assertTrue(qatarHomePage.getPreviousBtnInNewArrivalsSection().isDisplayed());\r\n    }\r\n\r\n//    @Test(description = \"Qatar HomePage- Make sure the next button appearing in the New Arrivals section works Correctly \", priority = 31)\r\n//    public void verifyNextBtnInNewArrivalsSectionWorks() {\r\n//        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n//        qatarHomePage.clickOnNextButtonInNewArrivalSection();\r\n//        Assert.assertTrue(qatarHomePage.getNewArrivalsSectionPositionAfterClickingOnNext().isDisplayed());\r\n//    }\r\n\r\n//    @Test(description = \"Qatar HomePage- Make sure the previous button appearing in the New Arrivals section works Correctly \", priority = 32)\r\n//    public void verifyPreviousBtnInNewArrivalsSectionWorks() {\r\n//        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n//        qatarHomePage.clickOnNextButtonInNewArrivalSection();\r\n//        qatarHomePage.clickOnPreviousButtonInNewArrivalSection();\r\n//        Assert.assertTrue(qatarHomePage.getNewArrivalsSectionPositionAfterClickingOnPrevious().isDisplayed());\r\n//    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure the Got A Question section is displayed \", priority = 29)\r\n    public void verifyGotQuestionSectionIsDisplayed() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.navigate();\r\n        Assert.assertTrue(qatarHomePage.getQuestionBlock().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getPhoneBtn().isDisplayed());\r\n        Assert.assertTrue(qatarHomePage.getEmailBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Qatar HomePage- Make sure clicking on email button from the Got A Question section works correctly \", priority = 30)\r\n    public void verifyAbilityToClickOnEmailBtnInGotQuestionSectionCorrectly() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n//        qatarHomePage.clickOnEmailBtn();\r\n        DataHelperAndWait.waitForUrlContains(qatarHomePage.contactUsUrl,webDriver,1);\r\n//        Assert.assertTrue(webDriver.getCurrentUrl().contains(qatarHomePage.contactUsUrl), \"The system redirect the user to wrong URL \" + webDriver.getCurrentUrl());\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sports Supplements category from HomePage works correctly \", priority = 31)\r\n    public void verifyClickingOnSportsSupplementsCategoryRedirectTheUserToCorrectPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportsSupplementsCategory();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Healthy Food category from HomePage works correctly \", priority = 32)\r\n    public void verifyClickingOnHealthyFoodCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnHealthyFoodCategory();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Vitamins And Health category from HomePage works correctly\", priority = 33)\r\n    public void verifyClickingOnVitaminsAndHealthCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnVitaminsAndHealthCategory();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the Sportswear & Accessories category from HomePage works correctly\", priority = 34)\r\n    public void verifyClickingOnSportswearAndAccessoriesCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnSportswearAndAccessoriesCategory();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the products appearing in the Top Selling Stacks section works correctly\", priority = 35)\r\n    public void verifyClickOnTheProductsAppearingInTheTopSellingStacksSectionRedirectTheUserToCorrectUrl() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        String expectedUrl = qatarHomePage.getFirstProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFirstProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getSecondProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnSecondProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFourthProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFourthProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFiveProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFifthProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the products appearing in the Top Sellers section redirect the user to the correct URL\", priority = 36)\r\n    public void verifyClickOnTheProductsAppearingInTheTopSellersSectionRedirectTheUserToCorrectUrl() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        String expectedUrl = qatarHomePage.getFirstProductInTopSellersSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFirstProductInTheTopSellersSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getSecondProductInTopSellersSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnSecondProductInTheTopSellersSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFourthProductInTopSellersSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFourthProductInTheTopSellersSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFiveProductInTopSellersSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFifthProductInTheTopSellersSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on the products appearing in the New Arrivals section redirect the user to the correct URL\", priority = 37)\r\n    public void verifyClickOnTheProductsAppearingInTheNewArrivalsSectionRedirectTheUserToCorrectUrl() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        String expectedUrl = qatarHomePage.getFirstProductInNewArrivalsSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFirstProductInTheNewArrivalsSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getSecondProductInNewArrivalsSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnSecondProductInTheNewArrivalsSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getThirdProductInNewArrivalsSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnThirdProductInTheNewArrivalsSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFourthProductInNewArrivalsSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFourthProductInTheNewArrivalsSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        qatarHomePage.navigate();\r\n        expectedUrl = qatarHomePage.getFiveProductInNewArrivalsSection().getAttribute(\"href\");\r\n        qatarHomePage.clickOnFifthProductInTheNewArrivalsSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Qatar HomePage- Make sure clicking on phone button from the Got A Question section works correctly \", priority = 38)\r\n    public void verifyAbilityToClickOnPhoneBtnInGotQuestionSectionCorrectly() {\r\n        QatarHomePage qatarHomePage = new QatarHomePage(webDriver);\r\n        qatarHomePage.navigate();\r\n        qatarHomePage.clickOnPhoneBtn();\r\n        String currentWindow = webDriver.getWindowHandle();\r\n        webDriver.switchTo().window(currentWindow);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/QatarHomePageTestCases.java b/src/test/java/sporter_test/QatarHomePageTestCases.java
--- a/src/test/java/sporter_test/QatarHomePageTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/QatarHomePageTestCases.java	(date 1673265423040)
@@ -39,7 +39,11 @@
         Assert.assertTrue(qatarHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure clicking on the banners inside the rotating slider section works correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure clicking on the banners inside the rotating slider section works correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersInsideTheRotatingSliderWorksCorrectly() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -51,7 +55,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure clicking on the first and second side banners works correctly", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure clicking on the first and second side banners works correctly", priority = 4)
+>>>>>>> origin/master
     public void verifyClickingOnTheFirstAndSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
         qatarHomePage.navigate();
@@ -66,7 +74,11 @@
         qatarHomePage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly", priority = 5)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly", priority = 5)
+>>>>>>> origin/master
     public void verifyClickingOnHomePageHorizontalBannerDoeNotRedirectTheUserTo404PageOrNoContentFoundPage() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
         qatarHomePage.navigate();
@@ -97,7 +109,11 @@
         Assert.assertEquals(qatarHomePage.getWomenOnlyOption().getText(), "Women's Only");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure clicking on the banners appearing under shop by category banners works correctly", priority = 8)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure clicking on the banners appearing under shop by category banners works correctly", priority = 8)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersUnderShopByCategoryBannersRedirectTheUserToCorrectUrl() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -110,7 +126,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure the Top Selling Stacks section is displayed ", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure the Top Selling Stacks section is displayed ", priority = 9)
+>>>>>>> origin/master
     public void verifyTopSellingStacksSectionAreDisplayed() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
         qatarHomePage.navigate();
@@ -118,7 +138,11 @@
         Assert.assertTrue(qatarHomePage.getTopSellingStacksSections().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure the Top Sellers section is displayed ", priority = 10)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure the Top Sellers section is displayed ", priority = 10)
+>>>>>>> origin/master
     public void verifyTopSellersSectionAreDisplayed() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -126,7 +150,11 @@
         Assert.assertTrue(qatarHomePage.getTopSellerSections().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Medium Severity","Home Page","Smoke Testing Result"},description = "Qatar HomePage- Make sure that all links appear correctly in the Top Sellers section ", priority = 11)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure that all links appear correctly in the Top Sellers section ", priority = 11)
+>>>>>>> origin/master
     public void verifyAllLinksInTopSellersSectionAreDisplayed() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -188,7 +216,11 @@
         Assert.assertTrue(qatarHomePage.getPreviousButtonInTopSellerSection().isDisplayed());
         qatarHomePage.clickOnPreviousButtonInTopSellersSection();
     }
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure the Trending On Sporter section is displayed ", priority = 18)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure the Trending On Sporter section is displayed ", priority = 18)
+>>>>>>> origin/master
     public void verifyTrendingOnSporterSectionAreDisplayed() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -211,7 +243,11 @@
         Assert.assertTrue(qatarHomePage.getTrendingOnSporterSectionPositionAfterClickingOnPrevious().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "Qatar HomePage- Make sure the New Arrivals section is displayed ", priority = 21)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure the New Arrivals section is displayed ", priority = 21)
+>>>>>>> origin/master
     public void verifyNewArrivalsSectionAreDisplayed() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.navigate();
@@ -308,7 +344,11 @@
         Assert.assertTrue(qatarHomePage.getEmailBtn().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","Critical Severity"},description = "Qatar HomePage- Make sure clicking on email button from the Got A Question section works correctly ", priority = 30)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Qatar HomePage- Make sure clicking on email button from the Got A Question section works correctly ", priority = 30)
+>>>>>>> origin/master
     public void verifyAbilityToClickOnEmailBtnInGotQuestionSectionCorrectly() {
         QatarHomePage qatarHomePage = new QatarHomePage(webDriver);
 //        qatarHomePage.clickOnEmailBtn();
Index: src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport org.testng.asserts.SoftAssert;\r\nimport sporter_pages.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.testng.Assert.assertEquals;\r\nimport static org.testng.Assert.assertFalse;\r\n\r\npublic class AeVitaminsAndHealthCategoryTestCases extends BaseTest {\r\n    private AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage;\r\n    private AeProductDetailsPage aeProductDetailsPage;\r\n    private KsaHomePage ksaHomePage;\r\n    private AEFooterPage aeFooterPage;\r\n    private AEGuestUserPage aeGuestUserPage;\r\n    private Actions action;\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Vitamins & Health Category Page- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore () {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();\r\n        }\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Vitamins & Health Category- Verify clicking on the Vitamins & Health Category Appears In MegaMenu works correctly\", priority = 2)\r\n    public void verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from ShopBy Menu works correctly\", priority = 3)\r\n    public void verifyClickingOnVitaminsAndHealthCategoryFromShopByMenuRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getShopeByMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthOption()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminsAndHealthOption().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminsAndHealthOption().click();\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from HomePage works correctly\", priority = 4)\r\n    public void verifyClickingOnVitaminsAndHealthCategoryFromHomePageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        aeVitaminsAndHealthCategoryPage.getVitaminsAndHealthCategoryInHomePage().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeVitaminsAndHealthCategoryPage.healthVitaminsUrl));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify the rotating slider section is displayed correctly \", priority = 5)\r\n    public void verifyRotatingSliderIsDisplayedInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getHomePageRotatingSlider().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderList().get(i).isDisplayed());\r\n        }\r\n    }\r\n    //There's a bug here since the next arrow icon is missing\r\n    @Test(description = \"Vitamins & Health Category- Verify the next button of the rotating slider section is displayed correctly \", priority = 6)\r\n    public void verifyNextArrowOfRotatingSliderIsDisplayedInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getNextArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n    //There's a bug here since the previous arrow icon is missing\r\n    @Test(description = \"Vitamins & Health Category- Verify the previous button of the rotating slider section is displayed correctly \", priority = 7)\r\n    public void verifyPreviousArrowOfRotatingSliderIsDisplayedInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify the pagination control of rotating slider section is displayed correctly\", priority = 7)\r\n    public void verifyPaginationControlOfRotatingSliderSectionIsDisplayedInTheVitaminsAndHealthCategoryPage() {\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingControl().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingList().get(i).isDisplayed());\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify the side Banners is displayed correctly\", priority = 8)\r\n    public void verifySideBannersIsDisplayedInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getHomePageSideBanner().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify the pagination control of rotating slider section works correctly\", priority = 9)\r\n    public void verifyPaginationControlOfRotatingSliderSectionWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().size(); i++) {\r\n           aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).click();\r\n           DataHelperAndWait.waitToBeVisible( aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i),3,webDriver);\r\n           Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).getAttribute(\"class\"),\"flex-active\");\r\n        }\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Verify clicking on the banners appear in rotating slider section works correctly\", priority = 10)\r\n    public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().size(); i++) {\r\n            aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).click();\r\n            aeVitaminsAndHealthCategoryPage.getBannerInRotatingSliderSection().click();\r\n            aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        }\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure the clicking on the first side banner works correctly in Vitamins & Health Category Page\", priority = 11)\r\n    public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedBannerUrl=aeVitaminsAndHealthCategoryPage.getFirstSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getFirstSideBanner().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl);\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Verify clicking on the second side banner works correctly\", priority = 12)\r\n    public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedBannerUrl=aeVitaminsAndHealthCategoryPage.getSecondSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getSecondSideBanner().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl);\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Vitamins & Health Category- Verify that the customer can navigate to the home page using the BreadCrumb appearing in the Vitamins AndHealth Category Page \", priority = 13)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeDomain+\"/\");\r\n    }\r\n    //Shop By Category Test Cases\r\n    @Test(description = \"Vitamins & Health Category- Verify the Shop By Category section is displayed correctly\", priority = 14)\r\n    public void verifyShopByCategoryInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getShopByCategoryHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getShopByCategorySections().isDisplayed());    }\r\n    //Fish Oil & Omegas Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Verify clicking on the Fish Oil & Omegas category inside Shop By Category section works correctly \", priority = 15)\r\n    public void verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(0).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(0).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Fish Oil & Omegas category page \", priority = 16)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheFishOilAndOmegasCategoryPage () {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Fish Oil & Omegas category page \", priority = 17)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheFishOilAndOmegasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Fish Oil And Omegas Category Page \", priority = 18)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForFishOilAndOmegasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Fish Oil & Omegas category page  \", priority = 19)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInFishOilAndOmegasCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Fish Oil & Omegas Category Page \", priority = 20)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInFishOilAndOmegasCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Fish Oil & Omegas footer appears correctly  \", priority = 22)\r\n    public void verifyFishOilAndOmegasFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the text appears in the Fish Oil & Omegas footer appears correctly  \", priority = 23)\r\n    public void verifyTheTextAppearInTheFishOilAndOmegasFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterParagraph1().getText(),\"Fish Oil & Omegas\",\"The footer has incorrect title\");\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterParagraph2().getText(),\"We are positive about the fact that you heard about the benefits of oils and omegas before. Oils and omegas like fish oil and omega-3 could make wonders! It is vital for your body to get the right balance of omegas and good fatty acids. Dry skin, brittle hair, frequent urination, sleep and attention problems and emotional sensitivity, are all some of the symptoms you may suffer from in case you were lacking fish oil (omega-3), while lacking other essential fatty acids and oils could come in the shape of slow-growing nails, dry eyes and stiff joints.\",\"The footer has incorrect Paragraph\");\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterParagraph3().getText(),\"Fish oil, Flaxseed oil, Black seed oil, Krill oil, Chia seed oil and other omega mixes are key nutrients for improving your heart health, fighting inflammation, getting a healthy, great-looking skin, weight loss, improving brain function and reducing joints pain.\\n\" +\r\n                \"\\n\" +\r\n                \"Getting your hands on all of these essential oils and omegas including fish oil with their magical benefits is now between your hands! Sporter has made huge efforts to give you the best natural fish oil, essential oils and omegas, as part of completing its mission of serving all types of goals and satisfying needs.\",\"The footer has incorrect Paragraph\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Fish Oil & Omegas category page\", priority = 24)\r\n    public void verifySearchBtnWorksCorrectlyFromFishOilAndOmegasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Fish Oil & Omegas category page is disable when the current page is page 1 \", priority = 25)\r\n    public void verifyThePreviousBtnInFishOilAndOmegasCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Fish Oil & Omegas category page works correctly\", priority = 26)\r\n    public void verifyThePaginationControlInFishOilAndOmegasCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Fish Oil And Omegas Category Page works correctly\", priority = 27)\r\n    public void verifyPreviousPageBtnInFishOilAndOmegasCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInFishOilAndOmegasCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Fish Oil And Omegas Category Page works correctly\", priority = 28)\r\n    public void verifyNextPageBtnInFishOilAndOmegasCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInFishOilAndOmegasCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Fish Oil & Omegas Category- Make sure all secure tabs appears correctly(100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks)\", priority = 29)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInFishOilAndOmegasCategoryPage () {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n//    Multivitamins Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Multivitamins category inside Shop By Category section works correctly \", priority = 30)\r\n    public void verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(1).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(1).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Multivitamins category page \", priority = 31)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMultivitaminsCategoryPage () {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Multivitamins category page \", priority = 32)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMultivitaminsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Multivitamins Category Page \", priority = 33)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMultivitaminsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Multivitamins category page  \", priority = 34)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMultivitaminsCategoryPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Multivitamins Category Page \", priority = 35)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMultivitaminsCategoryPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Multivitamins Category page \", priority = 36)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInMultivitaminsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Multivitamins, Vitamins & Health\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Multivitamins footer appears correctly  \", priority = 37)\r\n    public void verifyMultivitaminsFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Multivitamins category page\", priority = 38)\r\n    public void verifySearchBtnWorksCorrectlyFromMultivitaminsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Multivitamins category page is disable when the current page is page 1 \", priority = 39)\r\n    public void verifyThePreviousBtnInMultivitaminsCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Multivitamins category page works correctly\", priority = 40)\r\n    public void verifyThePaginationControlInMultivitaminsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Multivitamins Category Page works correctly\", priority = 41)\r\n    public void verifyPreviousPageBtnInMultivitaminsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMultivitaminsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Multivitamins Category Page works correctly\", priority = 42)\r\n    public void verifyNextPageBtnInMultivitaminsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMultivitaminsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Multivitamins Category- Make sure all secure tabs appears correctly(100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks)\", priority = 43)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMultivitaminsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //Vitamins A-Z Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Vitamins A-Z category inside Shop By Category section works correctly \", priority = 44)\r\n    public void verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\naeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(2).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(2).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Vitamins A_Z category page \", priority = 45)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the VitaminsA_Z category page \", priority = 46)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for VitaminsA_Z Category Page \", priority = 47)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the VitaminsA_Z category page  \", priority = 48)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInVitaminsA_ZCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the VitaminsA_Z Category Page \", priority = 49)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInVitaminsA_ZCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the VitaminsA_Z Category page \", priority = 50)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Essential Vitamins, Vitamins & Health\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the VitaminsA_Z footer appears correctly  \", priority = 51)\r\n    public void verifyVitaminsA_ZFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the VitaminsA_Z category page\", priority = 52)\r\n    public void verifySearchBtnWorksCorrectlyFromVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the VitaminsA_Z category page is disable when the current page is page 1 \", priority = 53)\r\n    public void verifyThePreviousBtnInVitaminsA_ZCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the VitaminsA_Z category page works correctly\", priority = 54)\r\n    public void verifyThePaginationControlInVitaminsA_ZCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In VitaminsA_Z Category Page works correctly\", priority = 55)\r\n    public void verifyPreviousPageBtnInVitaminsA_ZCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInVitaminsA_ZCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In VitaminsA_Z Category Page works correctly\", priority = 56)\r\n    public void verifyNextPageBtnInVitaminsA_ZCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInVitaminsA_ZCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the VitaminsA_Z category page\", priority = 57)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInVitaminsA_ZCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n//    Minerals Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Minerals category inside Shop By Category section works correctly \", priority = 58)\r\n    public void verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(3).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(3).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Minerals category page \", priority = 59)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMineralsCategoryPage () {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Minerals category page \", priority = 60)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMineralsCategoryPage () {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Minerals Category Page \", priority = 61)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMineralsCategoryPage () {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Minerals category page  \", priority = 62)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMineralsCategoryPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Minerals Category Page \", priority = 63)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMineralsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Minerals Category page \", priority = 64)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInMineralsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Minerals, Vitamins & Health\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Minerals footer appears correctly  \", priority = 65)\r\n    public void verifyMineralsFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Minerals category page\", priority = 66)\r\n    public void verifySearchBtnWorksCorrectlyFromMineralsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Minerals category page is disable when the current page is page 1 \", priority = 67)\r\n    public void verifyThePreviousBtnInMineralsCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    //There's a performance issue in the pagination control\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Minerals category page works correctly\", priority = 68)\r\n    public void verifyThePaginationControlInMineralsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Minerals Category Page works correctly\", priority = 69)\r\n    public void verifyPreviousPageBtnInMineralsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMineralsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Minerals Category Page works correctly\", priority = 70)\r\n    public void verifyNextPageBtnInMineralsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMineralsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Minerals category page\", priority = 71)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMineralsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //Antioxidants Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Antioxidants category inside Shop By Category section works correctly \", priority = 72)\r\n    public void verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(4).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(4).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Antioxidants category page \", priority = 73)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheAntioxidantsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Antioxidants category page \", priority = 74)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheAntioxidantsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Antioxidants Category Page \", priority = 75)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForAntioxidantsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Antioxidants category page  \", priority = 76)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInAntioxidantsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Antioxidants Category Page \", priority = 77)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInAntioxidantsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Antioxidants footer appears correctly  \", priority = 79)\r\n    public void verifyAntioxidantsFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Antioxidants category page\", priority = 80)\r\n    public void verifySearchBtnWorksCorrectlyFromAntioxidantsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Antioxidants category page is disable when the current page is page 1 \", priority = 81)\r\n    public void verifyThePreviousBtnInAntioxidantsCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    //There's a performance issue in the pagination control\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Antioxidants category page works correctly\", priority = 82)\r\n    public void verifyThePaginationControlInAntioxidantsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Antioxidants Category Page works correctly\", priority = 83)\r\n    public void verifyPreviousPageBtnInAntioxidantsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInAntioxidantsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Antioxidants Category Page works correctly\", priority = 84)\r\n    public void verifyNextPageBtnInAntioxidantsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInAntioxidantsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Antioxidants category page\", priority = 85)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInAntioxidantsCategoryPage () {\r\n        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //Superfoods Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Superfoods category inside Shop By Category section works correctly \", priority = 86)\r\n    public void verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(5).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(5).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Superfoods category page \", priority = 86)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Superfoods category page \", priority = 87)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Superfoods Category Page \", priority = 88)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Superfoods category page  \", priority = 89)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSuperfoodsCategoryPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Superfoods Category Page \", priority = 90)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSuperfoodsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description that should appear in the image is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Superfoods Category page \", priority = 91)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Superfoods, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Superfoods category page\", priority = 93)\r\n    public void verifySearchBtnWorksCorrectlyFromSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Superfoods category page is disable when the current page is page 1 \", priority = 94)\r\n    public void verifyThePreviousBtnInSuperfoodsCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    //There's a performance issue in the pagination control\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Superfoods category page works correctly\", priority = 95)\r\n    public void verifyThePaginationControlInSuperfoodsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Superfoods Category Page works correctly\", priority = 96)\r\n    public void verifyPreviousPageBtnInSuperfoodsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSuperfoodsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Superfoods Category Page works correctly\", priority = 97)\r\n    public void verifyNextPageBtnInSuperfoodsCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSuperfoodsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Superfoods category page\", priority = 98)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSuperfoodsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n//    Collagen Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Collagen category inside Shop By Category section works correctly \", priority = 99)\r\n    public void verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(6).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(6).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Collagen category page \", priority = 100)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Collagen category page \", priority = 101)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Collagen Category Page \", priority = 102)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Collagen category page  \", priority = 103)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInCollagenCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Collagen Category Page \", priority = 104)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInCollagenCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description that should appear in the image is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Collagen Category page \", priority = 105)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Collagen, Beauty\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Collagen footer appears correctly  \", priority = 106)\r\n    public void verifyCollagenFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Collagen category page\", priority = 107)\r\n    public void verifySearchBtnWorksCorrectlyFromCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Collagen category page is disable when the current page is page 1 \", priority = 108)\r\n    public void verifyThePreviousBtnInCollagenCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Collagen category page works correctly\", priority = 109)\r\n    public void verifyThePaginationControlInCollagenCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    //There's a performance issue here\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Collagen Category Page works correctly\", priority = 110)\r\n    public void verifyPreviousPageBtnInCollagenCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInCollagenCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Collagen Category Page works correctly\", priority = 111)\r\n    public void verifyNextPageBtnInCollagenCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInCollagenCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Collagen category page\", priority = 112)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInCollagenCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //Melatonin Category page Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Melatonin category inside Shop By Category section works correctly \", priority = 113)\r\n    public void verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(7).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(7).click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),BasePage.BaseURL +\"/en-ae/vitamin-health/vitamins-sleep-mood-solutions/melatonin/\");\r\n        //There's a bug here in the DOM because the URL appears incorrectly\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Melatonin category page \", priority = 114)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Melatonin category page \", priority = 115)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Melatonin Category Page \", priority = 116)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Melatonin category page  \", priority = 117)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMelatoninCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Melatonin Category Page \", priority = 118)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMelatoninCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description that should appear in the image is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Melatonin Category page \", priority = 119)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Melatonin, Sleep & Mood Solutions\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Melatonin category page\", priority = 121)\r\n    public void verifySearchBtnWorksCorrectlyFromMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Melatonin category page is disable when the current page is page 1 \", priority = 122)\r\n    public void verifyThePreviousBtnInMelatoninCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Melatonin category page works correctly\", priority = 123)\r\n    public void verifyThePaginationControlInMelatoninCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n\r\n    }\r\n    //There's a performance issue here\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Melatonin Category Page works correctly\", priority = 124)\r\n    public void verifyPreviousPageBtnInMelatoninCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMelatoninCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Melatonin Category Page works correctly\", priority = 125)\r\n    public void verifyNextPageBtnInMelatoninCategoryPageWorksCorrectly() throws InterruptedException{\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMelatoninCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Melatonin category page\", priority = 126)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMelatoninCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //Herbal Reference Guide Test Cases\r\n\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Herbal Reference Guide section is displayed correctly \", priority = 127)\r\n    public void verifyHerbalReferenceGuideSectionIsDisplayedCorrectly () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideTitle().getText(), \"Herbal Reference Guide\");\r\n        ArrayList<String> expectedOptions = new ArrayList<>() {{\r\n            add(\"Tumeric\");\r\n            add(\"Dandelion\");\r\n            add(\"Ginseng\");\r\n            add(\"Milk Thistle\");\r\n            add(\"Alfalfa\");\r\n        }};\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().size(); i++) {\r\n            Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(i).getText(), expectedOptions.get(i));\r\n            System.out.println(\"Actual: \"+aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(i).getText()+\"  Expected: \"+expectedOptions.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Tumeric icon Redirect User To CorrectURL\", priority = 128)\r\n    public void verifyClickingOnTumericPageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedUrl=aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(0).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(0).click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl().replace(aeDomain,\"\"),expectedUrl);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Tumeric page\", priority = 138)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInTumericPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnTumericPageRedirectUserToCorrectURL();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Tumeric Page \", priority = 133)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInTheTumericPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnTumericPageRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Dandelion icon Redirect User To CorrectURL\", priority = 129)\r\n    public void verifyClickingOnDandelionPageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedUrl=aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(1).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(1).click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl().replace(aeDomain,\"\"),expectedUrl);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Dandelion page\", priority = 139)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInDandelionPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDandelionPageRedirectUserToCorrectURL();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Dandelion Page \", priority = 134)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInTheDandelionPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDandelionPageRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Ginseng icon Redirect User To CorrectURL\", priority = 130)\r\n    public void verifyClickingOnGinsengPageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedUrl=aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(2).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(2).click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl().replace(aeDomain,\"\"),expectedUrl);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Ginseng page\", priority = 140)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInGinsengPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnGinsengPageRedirectUserToCorrectURL();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Ginseng Page \", priority = 135)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInTheGinsengPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnGinsengPageRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"}, description = \"Vitamins & Health Category- Make sure clicking on the Milk Thistle icon Redirect User To CorrectURL\", priority = 131)\r\n    public void verifyClickingOnMilkThistlePageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedUrl=aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(3).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(3).click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl().replace(aeDomain,\"\"),expectedUrl);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Milk Thistle page\", priority = 141)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMilkThistlPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMilkThistlePageRedirectUserToCorrectURL();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Milk Thistle Page \", priority = 136)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInTheMilkThistlePage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMilkThistlePageRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Alfalfa icon Redirect User To CorrectURL\", priority = 132)\r\n    public void verifyClickingOnAlfalfaPageRedirectUserToCorrectURL() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedUrl=aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(4).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(4).click();\r\n        Assert.assertEquals(webDriver.getCurrentUrl().replace(aeDomain,\"\"),expectedUrl);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Alfalfa page\", priority = 142)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInAlfalfaPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnAlfalfaPageRedirectUserToCorrectURL();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Alfalfa Page \", priority = 137)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInTheAlfalfaPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnAlfalfaPageRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Tumeric page\", priority = 143)\r\n    public void verifySearchBtnWorksCorrectlyFromTumericPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnTumericPageRedirectUserToCorrectURL();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Dandelion  page\", priority = 144)\r\n    public void verifySearchBtnWorksCorrectlyFromDandelionPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDandelionPageRedirectUserToCorrectURL();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Ginseng  page\", priority = 145)\r\n    public void verifySearchBtnWorksCorrectlyFromGinsengPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnGinsengPageRedirectUserToCorrectURL();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Milk Thistle  page\", priority = 146)\r\n    public void verifySearchBtnWorksCorrectlyFromMilkThistlePage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMilkThistlePageRedirectUserToCorrectURL();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //There's a bug here because the page is not opened correctly\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Alfalfa  page\", priority = 147)\r\n    public void verifySearchBtnWorksCorrectlyFromAlfalfaePage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnAlfalfaPageRedirectUserToCorrectURL();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n//    Shop By Health Need Test Cases\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Shop By Health Need section is displayed \", priority = 148)\r\n    public void verifyShopByHealthNeedInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getShopByHealthNeedTitle().getText(),\"Shop By Health Need\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getShopByHealthNeedSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the next item button appears in the Shop By Health Need section works correctly \", priority = 149)\r\n    public void verifyNextButtonAppearsInTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getBeautyCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getEnergyFormulasCategory().isDisplayed());\r\n    }\r\n//There's a performance issue here\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Previous item button appears in the Shop By Health Need section works correctly \", priority = 150)\r\n    public void verifyPreviousButtonAppearsInTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getBeautyCategory().isDisplayed());\r\n    }\r\n    //Beauty Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Beauty category inside Shop By Health Need works correctly \", priority = 151)\r\n    public void verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getBeautyCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getBeautyCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Beauty category page \", priority = 152)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Beauty category page \", priority = 153)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Beauty Category Page \", priority = 154)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Beauty category page  \", priority = 155)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInBeautyCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Beauty Category Page \", priority = 156)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInBeautyCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Beauty Category page \", priority = 157)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Beauty, Vitamins & Health\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Beauty footer appears correctly  \", priority = 158)\r\n    public void verifyBeautyFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Beauty category page\", priority = 159)\r\n    public void verifySearchBtnWorksCorrectlyFromBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Beauty category page is disable when the current page is page 1 \", priority = 160)\r\n    public void verifyThePreviousBtnInBeautyCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Beauty category page works correctly\", priority = 161)\r\n    public void verifyThePaginationControlInBeautyCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Beauty Category Page works correctly\", priority = 162)\r\n    public void verifyPreviousPageBtnInBeautyCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Beauty Category Page works correctly\", priority = 163)\r\n    public void verifyNextPageBtnInBeautyCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Beauty category page\", priority = 164)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Beauty category page\", priority = 165)\r\n    public void verifyFiltrationSectionIsDisplayedInBeautyCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n     Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Bone & Joint Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Bone And Joint category inside Shop By Health Need works correctly \", priority = 166)\r\n    public void verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getBoneAndJointCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getBoneAndJointCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Bone And Joint category page \", priority = 167)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Bone And Joint category page \", priority = 168)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Bone And Joint Category Page \", priority = 169)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Bone And Joint category page  \", priority = 170)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInBoneAndJointCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Bone And Joint Category Page \", priority = 171)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInBoneAndJointCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Bone And Joint Category page \", priority = 172)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Bone & Joint, Vitamins & Health\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Bone And Joint footer appears correctly  \", priority = 173)\r\n    public void verifyBoneAndJointFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Bone And Joint category page\", priority = 174)\r\n    public void verifySearchBtnWorksCorrectlyFromBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Bone And Joint category page is disable when the current page is page 1 \", priority = 175)\r\n    public void verifyThePreviousBtnInBoneAndJointCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Bone And Joint category page works correctly\", priority = 176)\r\n    public void verifyThePaginationControlInBoneAndJointCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Bone And Joint Category Page works correctly\", priority = 177)\r\n    public void verifyPreviousPageBtnInBoneAndJointCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the Next button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Bone And Joint Category Page works correctly\", priority = 178)\r\n    public void verifyNextPageBtnInBoneAndJointCategoryPageWorksCorrectly () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Bone And Joint category page\", priority = 179)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Bone And Joint category page\", priority = 180)\r\n    public void verifyFiltrationSectionIsDisplayedInBoneAndJointCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Brain Support Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Brain Support category inside Shop By Health Need works correctly \", priority = 181)\r\n    public void verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getBrainSupportCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getBrainSupportCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Brain Support category page \", priority = 182)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Brain Support category page \", priority = 183)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Featured option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Brain Support Category Page \", priority = 184)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the BrainSupport category page  \", priority = 185)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInBrainSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Brain Support Category Page \", priority = 186)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInBrainSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Brain Support Category page \", priority = 187)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Brain Support, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Brain Support  footer appears correctly  \", priority = 188)\r\n    public void verifyBrainSupportFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Brain Support category page\", priority = 189)\r\n    public void verifySearchBtnWorksCorrectlyFromBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the BrainSupport category page is disable when the current page is page 1 \", priority = 190)\r\n    public void verifyThePreviousBtnInBrainSupportCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Brain Support category page works correctly\", priority = 191)\r\n    public void verifyThePaginationControlInBrainSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Brain Support Category Page works correctly\", priority = 192)\r\n    public void verifyPreviousPageBtnInBrainSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Brain Support Category Page works correctly\", priority = 193)\r\n    public void verifyNextPageBtnInBrainSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Brain Support category page\", priority = 194)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the BrainSupport category page\", priority = 195)\r\n    public void verifyFiltrationSectionIsDisplayedInBrainSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Detox & Liver Support Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Detox & Liver Support category inside Shop By Health Need works correctly \", priority = 196)\r\n    public void verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getDetoxAndLiverSupportCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getDetoxAndLiverSupportCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Detox & Liver Support category page \", priority = 197)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Detox & Liver Support category page \", priority = 198)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Detox & Liver Support Category Page \", priority = 199)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Detox & Liver Support category page  \", priority = 200)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInDetoxAndLiverSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Detox & Liver Support Category Page \", priority = 201)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInDetoxAndLiverSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Detox & Liver Support  footer appears correctly  \", priority = 203)\r\n    public void verifyDetoxAndLiverSupportFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Detox & Liver Support category page\", priority = 204)\r\n    public void verifySearchBtnWorksCorrectlyFromDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Detox & Liver Support category page is disable when the current page is page 1 \", priority = 205)\r\n    public void verifyThePreviousBtnInDetoxAndLiverSupportCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Detox & Liver Support category page works correctly\", priority = 206)\r\n    public void verifyThePaginationControlInDetoxAndLiverSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Detox & Liver Support Category Page works correctly\", priority = 207)\r\n    public void verifyPreviousPageBtnInDetoxAndLiverCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Detox & Liver Support Category Page works correctly\", priority = 208)\r\n    public void verifyNextPageBtnInDetoxAndLiverSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Detox & Liver Support category page\", priority = 209)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Detox & Liver Support category page\", priority = 210)\r\n    public void verifyFiltrationSectionIsDisplayedInDetoxAndLiverSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Digestive Support Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Digestive Support category inside Shop By Health Need works correctly \", priority = 211)\r\n    public void verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getDigestiveSupportCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getDigestiveSupportCategory().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Digestive Support category page \", priority = 212)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Digestive Support category page \", priority = 213)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Digestive Support Category Page \", priority = 214)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Detox & Liver Support category page  \", priority = 215)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInDigestiveSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Digestive Support Category Page \", priority = 216)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInDigestiveSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Digestive Support Category page \", priority = 217)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Digestive Support, Digestion\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Digestive Support category page\", priority = 219)\r\n    public void verifySearchBtnWorksCorrectlyFromDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Digestive Support category page is disable when the current page is page 1 \", priority = 220)\r\n    public void verifyThePreviousBtnInDigestiveSupportCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Digestive Support category page works correctly\", priority = 221)\r\n    public void verifyThePaginationControlInDigestiveSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Digestive Support Category Page works correctly\", priority = 222)\r\n    public void verifyPreviousPageBtnInDigestiveSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Digestive Support Category Page works correctly\", priority = 223)\r\n    public void verifyNextPageBtnInDigestiveSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Digestive Support category page\", priority = 224)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Digestive Support category page\", priority = 225)\r\n    public void verifyFiltrationSectionIsDisplayedInDigestiveSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Energy Formulas Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Energy Formulas category inside Shop By Health Need works correctly \", priority = 226)\r\n    public void verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInShopByHealthNeedSection().click();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getEnergyFormulasCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getEnergyFormulasCategory().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Energy Formulas category page \", priority = 227)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Energy Formulas category page \", priority = 228)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Energy Formulas Category Page \", priority = 229)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Energy Formulas Category Page  \", priority = 230)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInEnergyFormulasCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Energy Formulas Category Page \", priority = 231)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInEnergyFormulasCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Energy Formulas Category page \", priority = 232)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Energy Formulas, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Energy Formulas category page\", priority = 234)\r\n    public void verifySearchBtnWorksCorrectlyFromEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Energy Formulas category page is disable when the current page is page 1 \", priority = 235)\r\n    public void verifyThePreviousBtnInEnergyFormulasCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Energy Formulas category page works correctly\", priority = 236)\r\n    public void verifyThePaginationControlInEnergyFormulasCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Energy Formulas Category Page works correctly\", priority = 237)\r\n    public void verifyPreviousPageBtnInEnergyFormulasCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Energy Formulas Category Page works correctly\", priority = 238)\r\n    public void verifyNextPageBtnInEnergyFormulasCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Energy Formulas category page\", priority = 239)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Energy Formulas category page\", priority = 240)\r\n    public void verifyFiltrationSectionIsDisplayedInEnergyFormulasCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Hair, Skin & Nails, Beauty Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Hair, Skin & Nails, Beauty category inside Shop By Health Need works correctly \", priority = 241)\r\n    public void verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.clickOnHairSkinAndNails();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Hair, Skin & Nails, Beauty category page \", priority = 242)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Hair, Skin & Nails, Beauty category page \", priority = 243)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Hair, Skin & Nails, Beauty Category Page \", priority = 244)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Hair, Skin & Nails, Beauty Category Page  \", priority = 245)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInHairAndSkinAndNailsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Hair, Skin & Nails, Beauty Category Page \", priority = 246)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInHairAndSkinAndNailsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Hair, Skin & Nails, Beauty category page\", priority = 249)\r\n    public void verifySearchBtnWorksCorrectlyFromHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Hair, Skin & Nails, Beauty category page is disable when the current page is page 1 \", priority = 250)\r\n    public void verifyThePreviousBtnInHairAndSkinAndNailsCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Hair, Skin & Nails, Beauty category page works correctly\", priority = 251)\r\n    public void verifyThePaginationControlInHairAndSkinAndNailsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Hair, Skin & Nails, Beauty Category Page works correctly\", priority = 252)\r\n    public void verifyPreviousPageBtnInHairAndSkinAndNailsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Hair, Skin & Nails, Beauty Category Page works correctly\", priority = 253)\r\n    public void verifyNextPageBtnInHairAndSkinAndNailsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Hair, Skin & Nails, Beauty category page\", priority = 254)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Hair, Skin & Nails, Beauty category page\", priority = 255)\r\n    public void verifyFiltrationSectionIsDisplayedInHairAndSkinAndNailsCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Heart Health Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Heart Health category inside Shop By Health Need works correctly \", priority = 256)\r\n    public void verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.clickOnHeartHealthCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Heart Health category page \", priority = 257)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Heart Health category page \", priority = 258)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Heart Health Category Page \", priority = 259)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Heart Health Category Page  \", priority = 260)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInHeartHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Heart Health Category Page \", priority = 261)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInHeartHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Heart Health Category page \", priority = 262)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Heart Health, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Heart Health  footer appears correctly  \", priority = 263)\r\n    public void verifyHeartHealthFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Heart Health category page\", priority = 264)\r\n    public void verifySearchBtnWorksCorrectlyFromHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Heart Health category page is disable when the current page is page 1 \", priority = 265)\r\n    public void verifyThePreviousBtnInHeartHealthCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Heart Health category page works correctly\", priority = 266)\r\n    public void verifyThePaginationControlInHeartHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Heart Health Category Page works correctly\", priority = 267)\r\n    public void verifyPreviousPageBtnInHeartHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInHeartHealthCategoryPageWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Heart Health Category Page works correctly\", priority = 268)\r\n    public void verifyNextPageBtnInHeartHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Heart Health category page\", priority = 269)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Heart Health category page\", priority = 270)\r\n    public void verifyFiltrationSectionIsDisplayedInHeartHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Immunity Support Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Immunity Support category inside Shop By Health Need works correctly \", priority = 271)\r\n    public void verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getImmunitySupportCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.clickOnImmunitySupportCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Immunity Support category page \", priority = 272)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Immunity Support category page \", priority = 273)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Immunity Support Category Page \", priority = 274)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Immunity Support Category Page  \", priority = 275)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInImmunitySupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Immunity Support Category Page \", priority = 276)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInImmunitySupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Immunity Support Category page \", priority = 277)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.navigate();\r\n        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Immune Support, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Immunity Support category page\", priority = 279)\r\n    public void verifySearchBtnWorksCorrectlyFromImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);;\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Immunity Support category page is disable when the current page is page 1 \", priority = 280)\r\n    public void verifyThePreviousBtnInImmunitySupportCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Immunity Support category page works correctly\", priority = 281)\r\n    public void verifyThePaginationControlInImmunitySupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Immunity Support Category Page works correctly\", priority = 282)\r\n    public void verifyPreviousPageBtnInImmunitySupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Immunity Support Category Page works correctly\", priority = 283)\r\n    public void verifyNextPageBtnInImmunitySupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Immunity Support category page\", priority = 284)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Immunity Support category page\", priority = 285)\r\n    public void verifyFiltrationSectionIsDisplayedInImmunitySupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Kid's Health Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Kids Health category inside Shop By Health Need works correctly \", priority = 286)\r\n    public void verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n                aeVitaminsAndHealthCategoryPage.clickOnKidsHealthCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Kids Health category page \", priority = 287)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Kids Health category page \", priority = 288)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Kids Health Category Page \", priority = 289)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Kids Health Category Page  \", priority = 290)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInKidsHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Kids Health Category Page \", priority = 291)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInKidsHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Kids Health Category page \", priority = 292)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Vitamins For Kids, Multivitamins\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure  the Kids Health footer appears correctly  \", priority = 293)\r\n    public void verifyKidsHealthFooterSectionAppearsCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().isDisplayed());\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasFooterSection().getCssValue(\"background\"), \"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Kids Health category page\", priority = 294)\r\n    public void verifySearchBtnWorksCorrectlyFromKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Kids Health category page is disable when the current page is page 1 \", priority = 295)\r\n    public void verifyThePreviousBtnInKidsHealthCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Kids Health category page works correctly\", priority = 296)\r\n    public void verifyThePaginationControlInKidsHealthategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Kids Health Category Page works correctly\", priority = 297)\r\n    public void verifyPreviousPageBtnInKidsHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Kids Health Category Page works correctly\", priority = 298)\r\n    public void verifyNextPageBtnInKidsHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Kids Health category page\", priority = 299)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Kids Health category page\", priority = 300)\r\n    public void verifyFiltrationSectionIsDisplayedInKidsHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n//    Men's Health Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Mens Health category inside Shop By Health Need works correctly \", priority = 301)\r\n    public void verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.clickOnMensHealthCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Mens Health category page \", priority = 302)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Mens Health category page \", priority = 303)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Mens Health Category Page \", priority = 304)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Mens Health Category Page  \", priority = 305)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMensHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Mens Health Category Page \", priority = 306)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMensHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Mens Health Category page \", priority = 307)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Mens Health, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Mens Health category page\", priority = 309)\r\n    public void verifySearchBtnWorksCorrectlyFromMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Mens Health category page is disable when the current page is page 1 \", priority = 310)\r\n    public void verifyThePreviousBtnInMensHealthCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Mens Health category page works correctly\", priority = 311)\r\n    public void verifyThePaginationControlInMensHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Mens Health Category Page works correctly\", priority = 312)\r\n    public void verifyPreviousPageBtnInMensHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Mens Health Category Page works correctly\", priority = 313)\r\n    public void verifyNextPageBtnInMensHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Mens Health category page\", priority = 314)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Mens Health category page\", priority = 315)\r\n    public void verifyFiltrationSectionIsDisplayedInMensHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Sexual Health Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Sexual Health category inside Shop By Health Need works correctly \", priority = 316)\r\n    public void verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getSexualHealthCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.clickOnSexualHealthCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"sexual-health\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Sexual Health category page \", priority = 317)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Sexual Health category page \", priority = 318)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Sexual Health Category Page \", priority = 319)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Sexual Health Category Page  \", priority = 320)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSexualHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Sexual Health Category Page \", priority = 321)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSexualHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Sexual Health Category page \", priority = 322)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Sexual Health, Featured\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Sexual Health category page\", priority = 324)\r\n    public void verifySearchBtnWorksCorrectlyFromSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Sexual Health category page is disable when the current page is page 1 \", priority = 325)\r\n    public void verifyThePreviousBtnInSexualHealthCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n        @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Sexual Health category page works correctly\", priority = 326)\r\n    public void verifyThePaginationControlInSexualHealthCategoryPageWorksCorrectly() {\r\n            AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n            aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n            DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Sexual Health Category Page works correctly\", priority = 327)\r\n    public void verifyPreviousPageBtnInSexualHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Sexual Health Category Page works correctly\", priority = 328)\r\n    public void verifyNextPageBtnInSexualHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Sexual Health category page\", priority = 329)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    //There's a bug here, due to the filtration section is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Sexual Health category page\", priority = 330)\r\n    public void verifyFiltrationSectionIsDisplayedInSexualHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Sleep Support Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Sleep Support category inside Shop By Health Need works correctly \", priority = 331)\r\n    public void verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getSexualHealthCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.clickOnSleepSupportCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"sleep-support\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Sleep Support category page \", priority = 332)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Sleep Support category page \", priority = 333)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Sleep Support Category Page \", priority = 334)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Sleep Support Category Page  \", priority = 335)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSleepSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Sleep Support Category Page \", priority = 336)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSleepSupportCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Sleep Support category page\", priority = 339)\r\n    public void verifySearchBtnWorksCorrectlyFromSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Sleep Support category page is disable when the current page is page 1 \", priority = 340)\r\n    public void verifyThePreviousBtnInSleepSupportCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Sleep Support category page works correctly\", priority = 341)\r\n    public void verifyThePaginationControlInSleepSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Sleep Support Category Page works correctly\", priority = 342)\r\n    public void verifyPreviousPageBtnInSleepSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Sleep Support Category Page works correctly\", priority = 343)\r\n    public void verifyNextPageBtnInSleepSupportCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Sleep Support category page\", priority = 344)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    //There's a bug here, due to the filtration section is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Sleep Support category page\", priority = 345)\r\n    public void verifyFiltrationSectionIsDisplayedInSleepSupportCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Diet Weight Management Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Diet Weight Management category inside Shop By Health Need works correctly \", priority = 346)\r\n    public void verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getSexualHealthCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.clickOnDietWeightManagementCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"weight-management\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Diet Weight Management category page \", priority = 347)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Diet Weight Management category page \", priority = 348)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n        @Test(description = \"Vitamins & Health Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Diet Weight Management Category Page \", priority = 349)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForDietWeightManagementCategoryPage () {\r\n            AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Diet Weight Management Category Page  \", priority = 350)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInDietWeightManagementCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Diet Weight Management Category Page \", priority = 351)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInDietWeightManagementCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Diet Weight Management Category page \", priority = 352)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Weight Management , Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Diet Weight Management category page\", priority = 354)\r\n    public void verifySearchBtnWorksCorrectlyFromDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Diet Weight Management category page is disable when the current page is page 1 \", priority = 355)\r\n    public void verifyThePreviousBtnInDietWeightManagementCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Diet Weight Management category page works correctly\", priority = 356)\r\n    public void verifyThePaginationControlInDietWeightManagementCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Diet Weight Management Category Page works correctly\", priority = 357)\r\n    public void verifyPreviousPageBtnInDietWeightManagementCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Diet Weight Management Category Page works correctly\", priority = 358)\r\n    public void verifyNextPageBtnInDietWeightManagementCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Diet Weight Management category page\", priority = 359)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    //There's a bug here, due to the filtration section is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Diet Weight Management category page\", priority = 360)\r\n    public void verifyFiltrationSectionIsDisplayedInDietWeightManagementCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Women Health Category Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Vitamins & Health Category- Make sure clicking on the Women Health category inside Shop By Health Need works correctly \", priority = 361)\r\n    public void verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n//        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getSexualHealthCategory().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.clickOnWomenHealthCategory();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"women-s-health/\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Result label and its value appear correctly in the Women Health category page \", priority = 362)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that Sort By menu and its options appear correctly in the Women Health category page \", priority = 363)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here due to the Best Selling option is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the Featured option is selected by default in the Sort By menu for Women Health Category Page \", priority = 364)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Horizontal Category Image appears correctly in the Women Health Category Page  \", priority = 365)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWomenHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women Health Category Page \", priority = 366)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInDietWomenHealthCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);\r\n    }\r\n    //There's a bug here due to the description is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Women Health Category page \", priority = 367)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Womens Health, Healthy Lifestyle\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the search button works correctly from the Women Health category page\", priority = 369)\r\n    public void verifySearchBtnWorksCorrectlyFromDietWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Verify that the previous page button in the Women Health category page is disable when the current page is page 1 \", priority = 370)\r\n    public void verifyThePreviousBtnInWomenHealthCategoryPageIsDisableWhenDisplayPage1 () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the Pagination control in the Women Health category page works correctly\", priority = 371)\r\n    public void verifyThePaginationControlInWomenHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the previous page button In Women Health Category Page works correctly\", priority = 372)\r\n    public void verifyPreviousPageBtnInWomenHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousPage();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the next page button In Women Health Category Page works correctly\", priority = 373)\r\n    public void verifyNextPageBtnInWomenHealthCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Women Health category page\", priority = 374)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n    //There's a bug here, due to the filtration section is missing\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Filtration Section is displayed in the Women Health category page\", priority = 375)\r\n    public void verifyFiltrationSectionIsDisplayedInWomenHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Fish Oil And Omegas Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Fish Oil And Omegas section is displayed \", priority = 376)\r\n    public void verifyFishOilAndOmegasSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionTitle().getText(),\"Fish Oil & Omegas\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Fish Oil And Omegas section \", priority = 377)\r\n    public void verifyPreviousArrowButtonInFishOilAndOmegasSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInFishOilAndOmegasSection().isDisplayed());}\r\n        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");\r\n        }\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Fish Oil And Omegas section works correctly\", priority = 378)\r\n    public void verifyClickingOnNextIconInFishOilAndOmegasSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInFishOilAndOmegasSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Fish Oil And Omegas section works correctly\", priority = 379)\r\n        public void verifyClickingOnPreviousIconInFishOilAndOmegasSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInFishOilAndOmegasSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInFishOilAndOmegasSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Fish Oil And Omegas section works correctly \", priority = 380)\r\n    public void verifyClickingOnViewAllBtnInsideFishOilAndOmegasSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInFishOilAndOmegasSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInFishOilAndOmegasSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Fish Oil And Omegas section works correctly \", priority = 381)\r\n    public void verifyClickingOnProductCardInsideFishOilAndOmegasSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInFishOilAndOmegasSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Multi Vitamins Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the MultiVitamins section is displayed \", priority = 382)\r\n    public void verifyMultiVitaminsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionTitle().getText(),\"Multivitamins\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the MultiVitamins section \", priority = 383)\r\n    public void verifyPreviousArrowButtonInMultiVitaminsSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.VitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInMultiVitaminsSection().isDisplayed());}\r\n                catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the MultiVitamins section works correctly\", priority = 384)\r\n    public void verifyClickingOnNextIconInMultiVitaminsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInMultiVitaminsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the MultiVitamins section works correctly\", priority = 385)\r\n    public void verifyClickingOnPreviousIconInMultiVitaminsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInMultiVitaminsSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInMultiVitaminsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the MultiVitamins section works correctly \", priority = 386)\r\n    public void verifyClickingOnViewAllBtnInsideMultiVitaminsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInMultiVitaminsSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInMultiVitaminsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the MultiVitamins section works correctly \", priority = 387)\r\n    public void verifyClickingOnProductCardInsideMultiVitaminsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInMultiVitaminsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Vitamins A-Z Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Vitamins A-Z section is displayed \", priority = 388)\r\n    public void verifyVitaminsAZSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getVitaminsAZSectionTitle().getText(),\"Vitamins A-Z\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getVitaminsAZSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Vitamins A-Z section \", priority = 389)\r\n    public void verifyPreviousArrowButtonInVitaminsAZSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInVitaminsAZSection().isDisplayed());}\r\n                        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Vitamins A-Z section works correctly\", priority = 390)\r\n    public void verifyClickingOnNextIconInVitaminsAZSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInVitaminsAZSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Vitamins A-Z section works correctly\", priority = 391)\r\n    public void verifyClickingOnPreviousIconInVitaminsAZSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInVitaminsAZSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInVitaminsAZSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Vitamins A-Z section works correctly \", priority = 392)\r\n    public void verifyClickingOnViewAllBtnInsideVitaminsAZSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInVitaminsAZSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInVitaminsAZSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Vitamins A-Z section works correctly \", priority = 393)\r\n    public void verifyClickingOnProductCardInsideVitaminsAZSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardIVitaminsAZSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Minerals Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Minerals section is displayed \", priority = 394)\r\n    public void verifyMineralsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getMineralsSectionTitle().getText(),\"Minerals\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMineralsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Minerals section \", priority = 395)\r\n    public void verifyPreviousArrowButtonInMineralsSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInMineralsSection().isDisplayed());}\r\n                        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Minerals section works correctly\", priority = 396)\r\n    public void verifyClickingOnNextIconInMineralsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInMineralsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Minerals section works correctly\", priority = 397)\r\n    public void verifyClickingOnPreviousIconInMineralsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInMineralsSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInMineralsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Minerals section works correctly \", priority = 398)\r\n    public void verifyClickingOnViewAllBtnInsideMineralsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInMineralsSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInMineralsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Minerals section works correctly \", priority = 399)\r\n    public void verifyClickingOnProductCardInsideMineralsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInMineralsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Antioxidants Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Antioxidants section is displayed \", priority = 400)\r\n    public void verifyAntioxidantsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getAntioxidantsSectionTitle().getText(),\"Antioxidants\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getAntioxidantsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Antioxidants section \", priority = 401)\r\n    public void verifyPreviousArrowButtonInAntioxidantsSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInAntioxidantsSection().isDisplayed());}\r\n                        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Antioxidants section works correctly\", priority = 402)\r\n    public void verifyClickingOnNextIconInAntioxidantsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInAntioxidantsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Antioxidants section works correctly\", priority = 403)\r\n    public void verifyClickingOnPreviousIconInAntioxidantsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInAntioxidantsSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInAntioxidantsSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Antioxidants section works correctly \", priority = 404)\r\n    public void verifyClickingOnViewAllBtnInsideAntioxidantsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInAntioxidantsSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInAntioxidantsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Antioxidants section works correctly \", priority = 405)\r\n    public void verifyClickingOnProductCardInsideAntioxidantsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInAntioxidantsSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Superfoods Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Superfoods section is displayed \", priority = 406)\r\n    public void verifySuperfoodsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getSuperFoodSectionTitle().getText(),\"Superfoods\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getSuperFoodSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Superfoods section \", priority = 407)\r\n    public void verifyPreviousArrowButtonInSuperfoodsSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInSuperFoodSection().isDisplayed());}\r\n                        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Superfoods section works correctly\", priority = 408)\r\n    public void verifyClickingOnNextIconInSuperfoodsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInSuperFoodSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Superfoods section works correctly\", priority = 409)\r\n    public void verifyClickingOnPreviousIconInSuperfoodsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInSuperFoodSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInSuperFoodSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Superfoods section works correctly \", priority = 410)\r\n    public void verifyClickingOnViewAllBtnInsideSuperfoodsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInSuperFoodSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInSuperFoodSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Superfoods section works correctly \", priority = 411)\r\n    public void verifyClickingOnProductCardInsideSuperfoodsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInSuperFoodSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Melatonin Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Melatonin section is displayed \", priority = 412)\r\n    public void verifyMelatoninSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getMelatoninSectionTitle().getText(),\"Melatonin\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMelatoninSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Melatonin section \", priority = 413)\r\n    public void verifyPreviousArrowButtonInMelatoninSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInMelatoninSection().isDisplayed());}\r\n                        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Melatonin section works correctly\", priority = 414)\r\n    public void verifyClickingOnNextIconInMelatoninSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInMelatoninSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Melatonin section works correctly\", priority = 415)\r\n    public void verifyClickingOnPreviousIconInMelatoninSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInMelatoninSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInMelatoninSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Melatonin section works correctly \", priority = 416)\r\n    public void verifyClickingOnViewAllBtnInsideMelatoninSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInMelatoninSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInMelatoninSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Melatonin section works correctly \", priority = 417)\r\n    public void verifyClickingOnProductCardInsideMelatoninSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInMelatoninSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Collagen Section Test Cases\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make sure the Collagen section is displayed \", priority = 418)\r\n    public void verifyCollagenSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getCollagenSectionTitle().getText(),\"Collagen\",\"The Shop By Health Need Category has incorrect title\");\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getCollagenSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the previous arrow icon is not appear by default in the Collagen section \", priority = 419)\r\n    public void verifyPreviousArrowButtonInCollagenSectionIsNotDisplayedByDefault() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        try{\r\n        Assert.assertFalse(aeVitaminsAndHealthCategoryPage.getPreviousIconInCollagenSection().isDisplayed());}\r\n        catch (Exception e){\r\n            System.out.println(\"the previous arrow icon is not appear by default in the Fish Oil And Omegas section\");}\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Next Button in the Collagen section works correctly\", priority = 420)\r\n    public void verifyClickingOnNextIconInCollagenSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.getNextIconInCollagenSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFishOilAndOmegasSectionPositionAfterClickingOnNextIcon().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on Previous Button in the Collagen section works correctly\", priority = 421)\r\n    public void verifyClickingOnPreviousIconInCollagenSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeVitaminsAndHealthCategoryPage.getNextIconInCollagenSection().click();\r\n        aeVitaminsAndHealthCategoryPage.getPreviousIconInCollagenSection().click();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getMultiVitaminsSectionDefaultPosition().isDisplayed());\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the View All button in the Collagen section works correctly \", priority = 422)\r\n    public void verifyClickingOnViewAllBtnInsideCollagenSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl=aeVitaminsAndHealthCategoryPage.getViewAllInCollagenSection().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getViewAllInCollagenSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure clicking on the product card in the Collagen section works correctly \", priority = 423)\r\n    public void verifyClickingOnProductCardInsideCollagenSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeVitaminsAndHealthCategoryPage.getProductCardInCollagenSection().click();\r\naeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Vitamins & Health category page\", priority = 424)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n\r\n    @Test(description = \"Vitamins & Health Category- Make sure the Footer section appears correctly in the Vitamins & Health category page\", priority = 425)\r\n    public void verifyFooterSectionAppearsCorrectlyInVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeFooterPage= new AEFooterPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n    //Pagination control for all pages in the Vitamins & Health category page\r\n\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Fish Oil And Omegas Category From Vitamins & Health Category Page  \", priority = 426)\r\n    public void verifyAbilityToAccessAllPagesInsideFishOilAndOmegasCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //There's a bug here\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Multivitamins Category From Vitamins & Health Category Page  \", priority = 427)\r\n    public void verifyAbilityToAccessAllPagesInsideMultivitaminsCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(groups = {\"Vitamins & Health Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside VitaminsA_Z Category From Vitamins & Health Category Page  \", priority = 428)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminsA_ZCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Minerals Category From Vitamins & Health Category Page  \", priority = 429)\r\n    public void verifyAbilityToAccessAllPagesInsideMineralsCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Antioxidants Category From Vitamins & Health Category Page  \", priority = 430)\r\n    public void verifyAbilityToAccessAllPagesInsideAntioxidantsCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Superfoods Category From Vitamins & Health Category Page  \", priority = 431)\r\n    public void verifyAbilityToAccessAllPagesInsideSuperfoodsCategoryFromVitaminsAndHealthCategoryPage () {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //There's a bug here\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Collagen Category From Vitamins & Health Category Page  \", priority = 432)\r\n    public void verifyAbilityToAccessAllPagesInsideCollagenCategoryFromVitaminsAndHealthCategoryPage () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Melatonin Category From Vitamins & Health Category Page  \", priority = 433)\r\n    public void verifyAbilityToAccessAllPagesInsideMelatoninCategoryFromVitaminsAndHealthCategoryPage () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //There's a bug here\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Beauty Category Inside The Shop By Health Need  \", priority = 434)\r\n    public void verifyAbilityToAccessAllPagesInsideBeautyCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Bone And Joint Category Inside The Shop By Health Need  \", priority = 435)\r\n    public void verifyAbilityToAccessAllPagesInsideBoneAndJointCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Brain Support Category Inside The Shop By Health Need  \", priority = 436)\r\n    public void verifyAbilityToAccessAllPagesInsideBrainSupportCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Detox And Liver Support Inside The Shop By Health Need  \", priority = 437)\r\n    public void verifyAbilityToAccessAllPagesInsideDetoxAndLiverSupportCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Digestive Support Inside The Shop By Health Need  \", priority = 438)\r\n    public void verifyAbilityToAccessAllPagesInsideDigestiveSupportCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //There's a bug here\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Energy Formulas Inside The Shop By Health Need  \", priority = 439)\r\n    public void verifyAbilityToAccessAllPagesInsideEnergyFormulasCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Hair And Skin And Nails Inside The Shop By Health Need  \", priority = 440)\r\n    public void verifyAbilityToAccessAllPagesInsideHairAndSkinAndNailsCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Heart Health Inside The Shop By Health Need  \", priority = 441)\r\n    public void verifyAbilityToAccessAllPagesInsideHeartHealthCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Immunity Support Inside The Shop By Health Need  \", priority = 442)\r\n    public void verifyAbilityToAccessAllPagesInsideImmunitySupportCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Kid's Health Inside The Shop By Health Need  \", priority = 443)\r\n    public void verifyAbilityToAccessAllPagesInsideKidsHealthCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Men's Health Inside The Shop By Health Need  \", priority = 444)\r\n    public void verifyAbilityToAccessAllPagesInsideMensHealthCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Sexual Health Inside The Shop By Health Need  \", priority = 445)\r\n    public void verifyAbilityToAccessAllPagesInsideSexualHealthCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Sleep Support The Shop By Health Need  \", priority = 446)\r\n    public void verifyAbilityToAccessAllPagesInsideSleepSupportCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Diet Weight Management The Shop By Health Need  \", priority = 447)\r\n    public void verifyAbilityToAccessAllPagesInsideDietWeightManagementCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"Vitamins & Health Category- Make Sure the ability to access all pages inside Women Health The Shop By Health Need  \", priority = 448)\r\n    public void verifyAbilityToAccessAllPagesInsideWomenHealthCategoryInsideTheShopByHealthNeed () {\r\n       AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"Vitamins & Health Category- Make sure ability to navigate to the home page by clicking on the sporter logo  \", priority = 449)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n//        this.verifyClickingOnVitaminsAndHealthCategoryFromHomePageRedirectUserToCorrectURL();\r\n        aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL,\" The Current URL is not matched with the Cart URL\" );\r\n    }\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java b/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java
--- a/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeVitaminsAndHealthCategoryTestCases.java	(date 1673265422923)
@@ -39,7 +39,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Critical Severity"},description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category Appears In MegaMenu works correctly", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category Appears In MegaMenu works correctly", priority = 2)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -49,7 +53,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Critical Severity"},description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from ShopBy Menu works correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from ShopBy Menu works correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsAndHealthCategoryFromShopByMenuRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -61,7 +69,11 @@
         aeMegamenuPage.getVitaminsAndHealthOption().click();
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Critical Severity"},description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from HomePage works correctly", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the Vitamins & Health Category from HomePage works correctly", priority = 4)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsAndHealthCategoryFromHomePageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -123,7 +135,11 @@
            Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).getAttribute("class"),"flex-active");
         }
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Verify clicking on the banners appear in rotating slider section works correctly", priority = 10)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the banners appear in rotating slider section works correctly", priority = 10)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
 //        this.verifyClickingOnVitaminsAndHealthCategoryAppearsInMegaMenuRedirectUserToCorrectURL();
@@ -133,7 +149,11 @@
             aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
         }
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure the clicking on the first side banner works correctly in Vitamins & Health Category Page", priority = 11)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the clicking on the first side banner works correctly in Vitamins & Health Category Page", priority = 11)
+>>>>>>> origin/master
     public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -143,7 +163,11 @@
         aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
         assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl);
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Verify clicking on the second side banner works correctly", priority = 12)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the second side banner works correctly", priority = 12)
+>>>>>>> origin/master
     public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -153,7 +177,11 @@
         aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
         assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl);
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Low Severity"},description = "Vitamins & Health Category- Verify that the customer can navigate to the home page using the BreadCrumb appearing in the Vitamins AndHealth Category Page ", priority = 13)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify that the customer can navigate to the home page using the BreadCrumb appearing in the Vitamins AndHealth Category Page ", priority = 13)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumb() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -172,7 +200,11 @@
         Assert.assertTrue(ksaHomePage.getShopByCategoryHeader().isDisplayed());
         Assert.assertTrue(ksaHomePage.getShopByCategorySections().isDisplayed());    }
     //Fish Oil & Omegas Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Verify clicking on the Fish Oil & Omegas category inside Shop By Category section works correctly ", priority = 15)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Verify clicking on the Fish Oil & Omegas category inside Shop By Category section works correctly ", priority = 15)
+>>>>>>> origin/master
     public void verifyClickingOnFishOilAndOmegasCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -320,7 +352,11 @@
         }
     }
 //    Multivitamins Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Multivitamins category inside Shop By Category section works correctly ", priority = 30)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Multivitamins category inside Shop By Category section works correctly ", priority = 30)
+>>>>>>> origin/master
     public void verifyClickingOnMultivitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -470,7 +506,11 @@
         }
     }
     //Vitamins A-Z Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Vitamins A-Z category inside Shop By Category section works correctly ", priority = 44)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Vitamins A-Z category inside Shop By Category section works correctly ", priority = 44)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsA_ZCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
 aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -621,7 +661,11 @@
         }
     }
 //    Minerals Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Minerals category inside Shop By Category section works correctly ", priority = 58)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Minerals category inside Shop By Category section works correctly ", priority = 58)
+>>>>>>> origin/master
     public void verifyClickingOnMineralsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -773,7 +817,11 @@
     }
 
     //Antioxidants Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Antioxidants category inside Shop By Category section works correctly ", priority = 72)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Antioxidants category inside Shop By Category section works correctly ", priority = 72)
+>>>>>>> origin/master
     public void verifyClickingOnAntioxidantsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -916,7 +964,11 @@
     }
 
     //Superfoods Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Superfoods category inside Shop By Category section works correctly ", priority = 86)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Superfoods category inside Shop By Category section works correctly ", priority = 86)
+>>>>>>> origin/master
     public void verifyClickingOnSuperfoodsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1060,7 +1112,11 @@
         }
     }
 //    Collagen Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Collagen category inside Shop By Category section works correctly ", priority = 99)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Collagen category inside Shop By Category section works correctly ", priority = 99)
+>>>>>>> origin/master
     public void verifyClickingOnCollagenCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1211,7 +1267,11 @@
         }
     }
     //Melatonin Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Melatonin category inside Shop By Category section works correctly ", priority = 113)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Melatonin category inside Shop By Category section works correctly ", priority = 113)
+>>>>>>> origin/master
     public void verifyClickingOnMelatoninCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1376,7 +1436,11 @@
         }
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure clicking on the Tumeric icon Redirect User To CorrectURL", priority = 128)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Tumeric icon Redirect User To CorrectURL", priority = 128)
+>>>>>>> origin/master
     public void verifyClickingOnTumericPageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1415,7 +1479,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure clicking on the Dandelion icon Redirect User To CorrectURL", priority = 129)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Dandelion icon Redirect User To CorrectURL", priority = 129)
+>>>>>>> origin/master
     public void verifyClickingOnDandelionPageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1455,7 +1523,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure clicking on the Ginseng icon Redirect User To CorrectURL", priority = 130)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Ginseng icon Redirect User To CorrectURL", priority = 130)
+>>>>>>> origin/master
     public void verifyClickingOnGinsengPageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1495,7 +1567,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"}, description = "Vitamins & Health Category- Make sure clicking on the Milk Thistle icon Redirect User To CorrectURL", priority = 131)
+=======
+    @Test(groups = "Smoke Testing Result", description = "Vitamins & Health Category- Make sure clicking on the Milk Thistle icon Redirect User To CorrectURL", priority = 131)
+>>>>>>> origin/master
     public void verifyClickingOnMilkThistlePageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1535,7 +1611,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSiteURL);
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure clicking on the Alfalfa icon Redirect User To CorrectURL", priority = 132)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Alfalfa icon Redirect User To CorrectURL", priority = 132)
+>>>>>>> origin/master
     public void verifyClickingOnAlfalfaPageRedirectUserToCorrectURL() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1662,7 +1742,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getBeautyCategory().isDisplayed());
     }
     //Beauty Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Beauty category inside Shop By Health Need works correctly ", priority = 151)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Beauty category inside Shop By Health Need works correctly ", priority = 151)
+>>>>>>> origin/master
     public void verifyClickingOnBeautyCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1818,7 +1902,11 @@
      Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
     //Bone & Joint Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Bone And Joint category inside Shop By Health Need works correctly ", priority = 166)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Bone And Joint category inside Shop By Health Need works correctly ", priority = 166)
+>>>>>>> origin/master
     public void verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -1971,7 +2059,11 @@
 //        this.verifyClickingOnBoneAndJointCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Brain Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Brain Support category inside Shop By Health Need works correctly ", priority = 181)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Brain Support category inside Shop By Health Need works correctly ", priority = 181)
+>>>>>>> origin/master
     public void verifyClickingOnBrainSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2124,7 +2216,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
     //Detox & Liver Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Detox & Liver Support category inside Shop By Health Need works correctly ", priority = 196)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Detox & Liver Support category inside Shop By Health Need works correctly ", priority = 196)
+>>>>>>> origin/master
     public void verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2266,7 +2362,11 @@
 //        this.verifyClickingOnDetoxAndLiverSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Digestive Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Digestive Support category inside Shop By Health Need works correctly ", priority = 211)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Digestive Support category inside Shop By Health Need works correctly ", priority = 211)
+>>>>>>> origin/master
     public void verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2413,7 +2513,11 @@
 //        this.verifyClickingOnDigestiveSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Energy Formulas Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Energy Formulas category inside Shop By Health Need works correctly ", priority = 226)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Energy Formulas category inside Shop By Health Need works correctly ", priority = 226)
+>>>>>>> origin/master
     public void verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2558,7 +2662,11 @@
 //        this.verifyClickingOnEnergyFormulasCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Hair, Skin & Nails, Beauty Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Hair, Skin & Nails, Beauty category inside Shop By Health Need works correctly ", priority = 241)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Hair, Skin & Nails, Beauty category inside Shop By Health Need works correctly ", priority = 241)
+>>>>>>> origin/master
     public void verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2691,7 +2799,11 @@
 //        this.verifyClickingOnHairAndSkinAndNailsCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Heart Health Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Heart Health category inside Shop By Health Need works correctly ", priority = 256)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Heart Health category inside Shop By Health Need works correctly ", priority = 256)
+>>>>>>> origin/master
     public void verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2839,7 +2951,11 @@
 //        this.verifyClickingOnHeartHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Immunity Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Immunity Support category inside Shop By Health Need works correctly ", priority = 271)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Immunity Support category inside Shop By Health Need works correctly ", priority = 271)
+>>>>>>> origin/master
     public void verifyClickingOnImmunitySupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -2983,7 +3099,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
     //Kid's Health Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Kids Health category inside Shop By Health Need works correctly ", priority = 286)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Kids Health category inside Shop By Health Need works correctly ", priority = 286)
+>>>>>>> origin/master
     public void verifyClickingOnKidsHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3131,7 +3251,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
 //    Men's Health Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Mens Health category inside Shop By Health Need works correctly ", priority = 301)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Mens Health category inside Shop By Health Need works correctly ", priority = 301)
+>>>>>>> origin/master
     public void verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3272,7 +3396,11 @@
 //        this.verifyClickingOnMensHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Sexual Health Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Sexual Health category inside Shop By Health Need works correctly ", priority = 316)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Sexual Health category inside Shop By Health Need works correctly ", priority = 316)
+>>>>>>> origin/master
     public void verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3416,7 +3544,11 @@
 //        this.verifyClickingOnSexualHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Sleep Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Sleep Support category inside Shop By Health Need works correctly ", priority = 331)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Sleep Support category inside Shop By Health Need works correctly ", priority = 331)
+>>>>>>> origin/master
     public void verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3554,7 +3686,11 @@
 //        this.verifyClickingOnSleepSupportCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Diet Weight Management Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Diet Weight Management category inside Shop By Health Need works correctly ", priority = 346)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Diet Weight Management category inside Shop By Health Need works correctly ", priority = 346)
+>>>>>>> origin/master
     public void verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3698,7 +3834,11 @@
 //        this.verifyClickingOnDietWeightManagementCategoryInsideTheShopByHealthNeedSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Women Health Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","High Severity"},description = "Vitamins & Health Category- Make sure clicking on the Women Health category inside Shop By Health Need works correctly ", priority = 361)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure clicking on the Women Health category inside Shop By Health Need works correctly ", priority = 361)
+>>>>>>> origin/master
     public void verifyClickingOnWomenHealthCategoryInsideTheShopByHealthNeedSectionWorksCorrectly()  {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3842,7 +3982,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
     //Fish Oil And Omegas Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Fish Oil And Omegas section is displayed ", priority = 376)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Fish Oil And Omegas section is displayed ", priority = 376)
+>>>>>>> origin/master
     public void verifyFishOilAndOmegasSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3891,7 +4035,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Multi Vitamins Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the MultiVitamins section is displayed ", priority = 382)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the MultiVitamins section is displayed ", priority = 382)
+>>>>>>> origin/master
     public void verifyMultiVitaminsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3939,7 +4087,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Vitamins A-Z Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Vitamins A-Z section is displayed ", priority = 388)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Vitamins A-Z section is displayed ", priority = 388)
+>>>>>>> origin/master
     public void verifyVitaminsAZSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -3987,7 +4139,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Minerals Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Minerals section is displayed ", priority = 394)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Minerals section is displayed ", priority = 394)
+>>>>>>> origin/master
     public void verifyMineralsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -4035,7 +4191,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Antioxidants Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Antioxidants section is displayed ", priority = 400)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Antioxidants section is displayed ", priority = 400)
+>>>>>>> origin/master
     public void verifyAntioxidantsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -4083,7 +4243,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Superfoods Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Superfoods section is displayed ", priority = 406)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Superfoods section is displayed ", priority = 406)
+>>>>>>> origin/master
     public void verifySuperfoodsSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -4131,7 +4295,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Melatonin Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Melatonin section is displayed ", priority = 412)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Melatonin section is displayed ", priority = 412)
+>>>>>>> origin/master
     public void verifyMelatoninSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage.navigateToVitaminsAndHealthPage();
@@ -4179,7 +4347,11 @@
 aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Collagen Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make sure the Collagen section is displayed ", priority = 418)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make sure the Collagen section is displayed ", priority = 418)
+>>>>>>> origin/master
     public void verifyCollagenSectionInTheVitaminsAndHealthCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
 //        aeVitaminsAndHealthCategoryPage.navigateToHomePage();
@@ -4259,7 +4431,11 @@
     }
     //Pagination control for all pages in the Vitamins & Health category page
 
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make Sure the ability to access all pages inside Fish Oil And Omegas Category From Vitamins & Health Category Page  ", priority = 426)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make Sure the ability to access all pages inside Fish Oil And Omegas Category From Vitamins & Health Category Page  ", priority = 426)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideFishOilAndOmegasCategoryFromVitaminsAndHealthCategoryPage () {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -4268,7 +4444,11 @@
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
     //There's a bug here
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make Sure the ability to access all pages inside Multivitamins Category From Vitamins & Health Category Page  ", priority = 427)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make Sure the ability to access all pages inside Multivitamins Category From Vitamins & Health Category Page  ", priority = 427)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideMultivitaminsCategoryFromVitaminsAndHealthCategoryPage () {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -4276,7 +4456,11 @@
         String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
+<<<<<<< HEAD
     @Test(groups = {"Vitamins & Health Category","Smoke Testing Result","Medium Severity"},description = "Vitamins & Health Category- Make Sure the ability to access all pages inside VitaminsA_Z Category From Vitamins & Health Category Page  ", priority = 428)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Vitamins & Health Category- Make Sure the ability to access all pages inside VitaminsA_Z Category From Vitamins & Health Category Page  ", priority = 428)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideVitaminsA_ZCategoryFromVitaminsAndHealthCategoryPage () {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
Index: src/test/java/sporter_test/AeRecommendedProductsTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AeProductDetailsPage;\r\nimport sporter_pages.AeRecommendedProductsPage;\r\n\r\n\r\npublic class AeRecommendedProductsTestCases extends BaseTest {\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Recommended Products Pop-up- Switching to the UAE Store\", priority = 1)\r\n    public void switchToAeStore() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeProductDetailsPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Recommended Products Pop-up- Make sure the keep shopping button appearing the Recommended products works correctly \", priority = 2)\r\n    public void verifyKeepShoppingBtnWorksCorrectly() {\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        String currentURL = webDriver.getCurrentUrl() + \"#\";\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), currentURL);\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Recommended Products Pop-up- Make sure the view Cart button appearing the Recommended products works correctly \", priority =3)\r\n    public void verifyViewCartWorksBtnCorrectly() {\r\n        AeRecommendedProductsPage  aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure to close the Recommended products pop up correctly\", priority = 4)\r\n    public void verifyCloseRecommendedPopupCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeRecommendedProductsPage  aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeRecommendedProductspage.clickOnRecommendedProductsCloseIcon();\r\n        Assert.assertTrue(aeProductDetailsPage.getAddToCartBtn().isDisplayed());\r\n\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure to close the Recommended products pop up when clicking outside the pop-up\", priority = 5)\r\n    public void verifyCloseRecommendedPopupCorrectlyWhenClickingOutsideThePopup() {\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeRecommendedProductsPage  aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        Actions act = new Actions(webDriver);\r\n        act.moveByOffset(913, 477).contextClick().build().perform();\r\n        Assert.assertTrue(aeProductDetailsPage.getAddToCartBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure all components appear correctly in  Recommended products like keep shopping and view cart and products list and titles\", priority = 6)\r\n    public void verifyAllRecommendedPopupComponentsIsExist() {\r\n        AeRecommendedProductsPage aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        //Make sure the check circle icon is displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getCircleIcon().isDisplayed());\r\n        //Make sure the Thumbs Up title is displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getThumbsUpTitle().isDisplayed());\r\n        //Make sure the added product message is displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getAddedProductToCartMsg().isDisplayed());\r\n        //Make sure the Recommended products title is displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getRecommendedProductsTitle().isDisplayed());\r\n        //Make sure the products images are displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getProductImages().isDisplayed());\r\n        //Make sure the products prices are displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getProductPrice().isDisplayed());\r\n        //Make sure the add to cart buttons are displayed\r\n        Assert.assertTrue(aeRecommendedProductspage.getAddToCartBtn().isDisplayed());\r\n        //Make sure the keep shopping button is displayed\r\n        Assert.assertTrue(aeProductDetailsPage.getKeepShippingBtn().isDisplayed());\r\n        //Make sure the view cart button is displayed\r\n        Assert.assertTrue(aeProductDetailsPage.getViewCartBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Product Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Recommended Products Pop-up- Make sure ability to add Recommended product to the cart\", priority = 7)\r\n    public void verifyAbilityToAddRecommendedProductToCart() {\r\n        AeRecommendedProductsPage aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeRecommendedProductspage.clickOnAddToCart();\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure the name of product added to the Cart displayed correctly in the Recommended product pop-up\", priority = 8)\r\n    public void verifyTheNameOfProductAddedToCatDisplayedInTheRecommendedPopup() {\r\n        AeRecommendedProductsPage aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        Assert.assertTrue(aeRecommendedProductspage.getAddedProductToCartMsg().getText().contains(aeProductDetailsPage.getProductName().getText()));\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure the product price displayed in the Recommended product pop-up matches with the product price displayed in PDP\", priority = 9)\r\n    public void verifyTheProductPriceInTheRecommendedPopupMatchesWithThePriceDisplaysInPdp() {\r\n        AeRecommendedProductsPage  aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        String productPriceInRecommendedPopup = aeRecommendedProductspage.getProductPriceForFirstProduct().getText();\r\n        aeRecommendedProductspage.clickOnAddToCartBtnForFirstProduct();\r\n        String productPriceInPdp = aeProductDetailsPage.getFinalProductPrice().getText();\r\n        Assert.assertEquals(productPriceInPdp, productPriceInRecommendedPopup, \"The product Price displayed in the Recommended pop-up is not match with the price in PDP\"+ productPriceInPdp +\" VS.\"+ productPriceInRecommendedPopup);\r\n    }\r\n\r\n    @Test(description = \"Recommended Products Pop-up- Make sure the clicking on the product card appears in the Recommended product pop-up will display the Product Details Page correctly\", priority = 10)\r\n    public void verifyClickingOnProductCardInTheRecommendedPopupWillDisplayThePdp() {\r\n        AeRecommendedProductsPage aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);\r\n        AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        String productNameInRecommendedPopup = aeRecommendedProductspage.getFirstProductName().getText();\r\n        aeRecommendedProductspage.clickOnFirstProductCard();\r\n        Assert.assertEquals(productNameInRecommendedPopup, aeProductDetailsPage.getProductName().getText(), \"The product name displayed in the Recommended pop-up is not match with the name in PDP \");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeRecommendedProductsTestCases.java b/src/test/java/sporter_test/AeRecommendedProductsTestCases.java
--- a/src/test/java/sporter_test/AeRecommendedProductsTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeRecommendedProductsTestCases.java	(date 1673265422776)
@@ -22,7 +22,11 @@
             CloseInitialDialog();          }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","Critical Severity"},description = "Recommended Products Pop-up- Make sure the keep shopping button appearing the Recommended products works correctly ", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Recommended Products Pop-up- Make sure the keep shopping button appearing the Recommended products works correctly ", priority = 2)
+>>>>>>> origin/master
     public void verifyKeepShoppingBtnWorksCorrectly() {
         AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         aeProductDetailsPage.displayTheProduct();
@@ -32,7 +36,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), currentURL);
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","Critical Severity"},description = "Recommended Products Pop-up- Make sure the view Cart button appearing the Recommended products works correctly ", priority =3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Recommended Products Pop-up- Make sure the view Cart button appearing the Recommended products works correctly ", priority =3)
+>>>>>>> origin/master
     public void verifyViewCartWorksBtnCorrectly() {
         AeRecommendedProductsPage  aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);
         AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -90,7 +98,11 @@
         Assert.assertTrue(aeProductDetailsPage.getViewCartBtn().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Product Page","Smoke Testing Result","High Severity"},description = "Recommended Products Pop-up- Make sure ability to add Recommended product to the cart", priority = 7)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Recommended Products Pop-up- Make sure ability to add Recommended product to the cart", priority = 7)
+>>>>>>> origin/master
     public void verifyAbilityToAddRecommendedProductToCart() {
         AeRecommendedProductsPage aeRecommendedProductspage = new AeRecommendedProductsPage(webDriver);
         AeProductDetailsPage  aeProductDetailsPage = new AeProductDetailsPage(webDriver);
Index: src/test/java/sporter_test/AEMegaMenuTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AEMegaMenuTestCases.java b/src/test/java/sporter_test/AEMegaMenuTestCases.java
--- a/src/test/java/sporter_test/AEMegaMenuTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AEMegaMenuTestCases.java	(date 1673265422535)
@@ -88,7 +88,11 @@
         Assert.assertEquals(aeMegamenuPage.getShopByList().getCssValue("background-color"), "rgba(236, 236, 236, 1)", "The ShopBy Menu does not appears in the gray color");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Low Severity"},description = "MegaMenu- Make sure the Category sub menu will appear once hovering on any option appearing in the ShopBy Menu", priority = 7)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure the Category sub menu will appear once hovering on any option appearing in the ShopBy Menu", priority = 7)
+>>>>>>> origin/master
     public void verifyTheCategorySubMenuAppearsWhenHoveringOnAnyOptionInsideShopByMenu() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
 //                //aeMegamenuPage.navigateToHomePage();
@@ -208,7 +212,11 @@
     }
 
     //There's a bug here, clicking on the By Brand Menu wil redirect the user to the homePage
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the By Brand menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 18)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the By Brand menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 18)
+>>>>>>> origin/master
     public void verifyClickingOnByBrandOptionInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -222,7 +230,11 @@
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the By Goal menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 19)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the By Goal menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 19)
+>>>>>>> origin/master
     public void verifyClickingOnByGoalOptionInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -241,7 +253,11 @@
     {        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         aeMegamenuPage.verifyTheMegaMenuExistsInThePage();
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Sales And Offers menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 21)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Sales And Offers menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 21)
+>>>>>>> origin/master
     public void verifyClickingOnSalesAndOffersOptionInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -260,7 +276,11 @@
     {        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         aeMegamenuPage.verifyTheMegaMenuExistsInThePage();
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Sport Stacks menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 23)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Sport Stacks menu appearing in the ShopBy Menu will redirect the User to the correct URL", priority = 23)
+>>>>>>> origin/master
     public void verifyClickingOnSportsStacksOptionInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -330,7 +350,11 @@
         Assert.assertEquals(aeMegamenuPage.getEnergyAndEnduranceOptionInSportSupplementsMenu().getCssValue("text-transform"), "uppercase");
         Assert.assertEquals(aeMegamenuPage.getGamingAndFocusOptionInSportSupplementsMenu().getCssValue("text-transform"), "uppercase");
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","High Severity"},description = "MegaMenu- Make sure clicking on the Protein option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 28)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Protein option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 28)
+>>>>>>> origin/master
     public void verifyClickingOnProteinOptionInSportsSupplementsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -345,7 +369,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Creatine option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 29)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Creatine option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 29)
+>>>>>>> origin/master
     public void verifyClickingOnCreatineOptionInSportsSupplementsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -359,7 +387,11 @@
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Amino Acids appearing in the Sports Supplements inside menu ShopBy Menu will redirect the User to the correct URL", priority = 30)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Amino Acids appearing in the Sports Supplements inside menu ShopBy Menu will redirect the User to the correct URL", priority = 30)
+>>>>>>> origin/master
     public void verifyClickingOnAminoAcidsOptionInSportsSupplementsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -373,7 +405,11 @@
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Muscle Boosters option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 31)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Muscle Boosters option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 31)
+>>>>>>> origin/master
     public void verifyClickingOnMuscleBoostersOptionInSportsSupplementsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -665,7 +701,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the HMB Option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 50)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the HMB Option appearing in the Sports Supplements menu inside ShopBy Menu will redirect the User to the correct URL", priority = 50)
+>>>>>>> origin/master
     public void verifyClickingOnHMbOptionInSportsSupplementsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1045,7 +1085,11 @@
         Assert.assertEquals(aeMegamenuPage.getPetsOptionInVitaminsAndHealthMenu().getCssValue("text-transform"), "uppercase");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Featured Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 73)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Featured Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 73)
+>>>>>>> origin/master
     public void verifyClickingOnFeaturedOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1061,7 +1105,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Alive Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 74)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Alive Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 74)
+>>>>>>> origin/master
     public void verifyClickingOnAliveVitaminsOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1078,7 +1126,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Sexual Health Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 75)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Sexual Health Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 75)
+>>>>>>> origin/master
     public void verifyClickingOnSexualHealthOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1096,7 +1148,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Essential Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 76)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Essential Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 76)
+>>>>>>> origin/master
     public void verifyClickingOnEssentialVitaminsOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1113,7 +1169,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Folic Acid Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 77)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Folic Acid Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 77)
+>>>>>>> origin/master
     public void verifyClickingOnFolicAcidOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1130,7 +1190,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin A Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 78)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin A Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 78)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminAOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1147,7 +1211,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin B Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 79)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin B Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 79)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminBOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1164,7 +1232,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin C Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 80)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin C Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 80)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminCOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1181,7 +1253,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin D Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 81)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin D Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 81)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminDOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1198,7 +1274,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin E Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 82)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin E Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 82)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminEOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1215,7 +1295,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamin K Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 83)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamin K Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 83)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminKOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1232,7 +1316,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Multi Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 84)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Multi Vitamins Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 84)
+>>>>>>> origin/master
     public void verifyClickingOnMultiVitaminsOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1249,7 +1337,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamins For Kids Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 85)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamins For Kids Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 85)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsForKidsOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1266,7 +1358,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamins For Men Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 86)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamins For Men Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 86)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsForMenOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -1283,7 +1379,11 @@
           
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Vitamins For Women Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 87)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Vitamins For Women Option appearing in the Vitamins & Health menu inside ShopBy Menu will redirect the User to the correct URL", priority = 87)
+>>>>>>> origin/master
     public void verifyClickingOnVitaminsForWomenOptionInVitaminsAndHealthMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2076,7 +2176,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Condiments Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 135)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Condiments Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 135)
+>>>>>>> origin/master
     public void verifyClickingOnCondimentsOptionInHealthyFoodMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2236,7 +2340,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Superfoods Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 145)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Superfoods Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 145)
+>>>>>>> origin/master
     public void verifyClickingOnSuperfoodsOptionInHealthyFoodMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2252,7 +2360,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Ready Mixes Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 146)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Ready Mixes Option appearing in the Healthy Food menu inside ShopBy Menu will redirect the User to the correct URL", priority = 146)
+>>>>>>> origin/master
     public void verifyClickingOnReadyMixesOptionInHealthyFoodMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2767,7 +2879,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Pants Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 177)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Pants Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 177)
+>>>>>>> origin/master
     public void verifyClickingOnPantsOptionInSportsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2783,7 +2899,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Shorts Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 178)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Shorts Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 178)
+>>>>>>> origin/master
     public void verifyClickingOnShortsOptionInSportsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2815,7 +2935,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Safety Masks Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 180)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Safety Masks Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 180)
+>>>>>>> origin/master
     public void verifyClickingOnSafetyMasksOptionInSportsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -2831,7 +2955,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Footwear Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 181)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Footwear Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 181)
+>>>>>>> origin/master
     public void verifyClickingOnFootwearOptionInSportsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -3152,7 +3280,11 @@
 Assert.assertTrue(aeMegamenuPage.verifyTheMegaMenuAppearsInThePage()," The MegaMenu is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"MegaMenu","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make sure clicking on the Wearable Tech Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 201)
+=======
+    @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make sure clicking on the Wearable Tech Option appearing in the Sports menu inside ShopBy Menu will redirect the User to the correct URL", priority = 201)
+>>>>>>> origin/master
     public void verifyClickingOnWearableTechOptionInSportsMenuInsideShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
Index: src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * @author w.jumaa\r\n * @projectName sporter-web-automation\r\n * @classDescription This class contains all test cases that verifying ability to access all pages inside all categories listed in the MegaMenu\r\n */\r\n\r\npackage sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.AEMegaMenuPage;\r\nimport sporter_pages.AeHealthyFoodCategoryPage;\r\nimport sporter_pages.AeSportSupplementsCategoryPage;\r\nimport sporter_pages.AeWomenOnlyCategoryPage;\r\n\r\n\r\npublic class AeAllPagesInsideCategoriesInMegaMenuTestCases  extends BaseTest {\r\n    private Actions action;\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();        }\r\n    }\r\n    //Sport Supplements Category Pages\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sport Supplements Category Page\", priority = 1)\r\n    public void verifyAbilityToAccessAllPagesInsideSportSupplementsCategoryPageFromMegaMenu(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeSportSupplementsCategoryPage.getSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeSportSupplementsCategoryPage.getSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeSportSupplementsCategoryPage.getSportSupplementsMainMenu().click();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Protein Sub-Category related to the Sport Supplements Category \", priority = 2)\r\n    public void verifyAbilityToAccessAllPagesInsideProteinCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getProteinOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getProteinOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getProteinOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), proteinOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Whey Protein Sub-Category related to the Sport Supplements Category \", priority = 3)\r\n    public void verifyAbilityToAccessAllPagesInsideWheyProteinCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getWheyProteinOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getWheyProteinOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getWheyProteinOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), wheyProteinOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Whey Protein Isolate Sub-Category related to the Sport Supplements Category \", priority = 4)\r\n    public void verifyAbilityToAccessAllPagesInsideWheyProteinIsolateCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getWheyProteinIsolateOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getWheyProteinIsolateOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getWheyProteinIsolateOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), WheyProteinIsolateOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Protein Blends Sub-Category related to the Sport Supplements Category \", priority = 5)\r\n    public void verifyAbilityToAccessAllPagesInsideProteinBlendsCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getProteinBlendsOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getProteinBlendsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getProteinBlendsOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), proteinBlendsOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Non Dairy Protein Sub-Category related to the Sport Supplements Category \", priority = 6)\r\n    public void verifyAbilityToAccessAllPagesInsideNonDairyProteinCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getNonDairyProteinOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getNonDairyProteinOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getNonDairyProteinOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), nonDairyProteinOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Casein Protein Sub-Category related to the Sport Supplements Category \", priority = 7)\r\n    public void verifyAbilityToAccessAllPagesInsideCaseinProteinCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getCaseinProteinOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getCaseinProteinOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getCaseinProteinOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), caseinProteinOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Diet Protein Sub-Category related to the Sport Supplements Category \", priority = 8)\r\n    public void verifyAbilityToAccessAllPagesInsideDietProteinCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getDietProteinOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getDietProteinOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getDietProteinOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), dietProteinOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Mass Gainers Sub-Category related to the Sport Supplements Category \", priority = 9)\r\n    public void verifyAbilityToAccessAllPagesInsideMassGainersCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getMassGainersOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getMassGainersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getMassGainersOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), massGainersOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Creatine Sub-Category related to the Sport Supplements Category \", priority = 10)\r\n    public void verifyAbilityToAccessAllPagesInsideCreatineCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getCreatineOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getCreatineOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getCreatineOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), creatineOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Creatine Monohydrate Sub-Category related to the Sport Supplements Category \", priority = 11)\r\n    public void verifyAbilityToAccessAllPagesInsideCreatineMonohydrateCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage  aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getCreatineMonohydrateOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getCreatineMonohydrateOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getCreatineMonohydrateOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), creatineMonohydrateOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Creatine Blends Sub-Category related to the Sport Supplements Category \", priority = 12)\r\n    public void verifyAbilityToAccessAllPagesInsideCreatineBlendsCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getCreatineBlendsOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getCreatineBlendsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getCreatineBlendsOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), creatineBlendsOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino Acids Sub-Category related to the Sport Supplements Category \", priority = 13)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAcidsCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getAminoAcidsOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getAminoAcidsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getAminoAcidsOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoAcidsOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside BCAA Sub-Category related to the Sport Supplements Category \", priority = 14)\r\n    public void verifyAbilityToAccessAllPagesInsideBCAACategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getbCAAOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getbCAAOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getbCAAOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bCAAOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside EAA Sub-Category related to the Sport Supplements Category \", priority = 15)\r\n    public void verifyAbilityToAccessAllPagesInsideEAACategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.geteAAOptionInSportSupplementsMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.geteAAOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.geteAAOptionInSportSupplementsMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), eAAOptionInSportSupplementsMenuUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Arginine Sub-Category related to the Sport Supplements Category \", priority = 16)\r\n    public void verifyAbilityToAccessAllPagesInsideArginineCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getArginineOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getArginineOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getArginineOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), arginineOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Beta Alanine Sub-Category related to the Sport Supplements Category \", priority = 17)\r\n    public void verifyAbilityToAccessAllPagesInsideBetaAlanineCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBetaAlanineOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBetaAlanineOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBetaAlanineOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), betaAlanineOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside HMb Sub-Category related to the Sport Supplements Category \", priority = 18)\r\n    public void verifyAbilityToAccessAllPagesInsideHMbCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.gethMBOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.gethMBOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.gethMBOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), hMBOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino Acid Powders Sub-Category related to the Sport Supplements Category \", priority = 19)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAcidPowdersCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getAminoAcidPowdersOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getAminoAcidPowdersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getAminoAcidPowdersOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoAcidPowdersOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino Acid Pills Sub-Category related to the Sport Supplements Category \", priority = 20)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAcidPillsCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getAminoAcidPillsOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getAminoAcidPillsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getAminoAcidPillsOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoAcidPillsOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Citrulline Sub-Category related to the Sport Supplements Category \", priority = 21)\r\n    public void verifyAbilityToAccessAllPagesInsideCitrullineCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCitrullineOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCitrullineOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCitrullineOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), citrullineOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino Acid Liquids Sub-Category related to the Sport Supplements Category \", priority = 22)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAcidLiquidsCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getAminoAcidLiquidsOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getAminoAcidLiquidsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getAminoAcidLiquidsOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoAcidLiquidsOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Muscle Boosters Sub-Category related to the Sport Supplements Category \", priority = 23)\r\n    public void verifyAbilityToAccessAllPagesInsideMuscleBoostersCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getMuscleBoostersOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getMuscleBoostersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getMuscleBoostersOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), muscleBoostersOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Testosterone Boosters Sub-Category related to the Sport Supplements Category \", priority = 24)\r\n    public void verifyAbilityToAccessAllPagesInsideTestosteroneBoostersCategoryRelatedToSportSupplementsCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getTestosteroneBoostersOptionInSportSupplementsMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getTestosteroneBoostersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getTestosteroneBoostersOptionInSportSupplementsMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), testosteroneBoostersOptionInSportSupplementsMenuUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Gh Booster Sub-Category related to the Sport Supplements Category \", priority = 25)\r\n    public void verifyAbilityToAccessAllPagesInsideGhBoosterCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getGhBoostersOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getGhBoostersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getGhBoostersOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), ghBoostersOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Weight Management Sub-Category related to the Sport Supplements Category \", priority = 26)\r\n    public void verifyAbilityToAccessAllPagesInsideWeightManagementCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getWeightManagementOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getWeightManagementOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getWeightManagementOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), weightManagementOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Stimulant Weight Loss Sub-Category related to the Sport Supplements Category \", priority = 27)\r\n    public void verifyAbilityToAccessAllPagesInsideStimulantWeightLossCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getStimulantWeightLossOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getStimulantWeightLossOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getStimulantWeightLossOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), stimulantWeightLossOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Non Stimulant Weight Loss Sub-Category related to the Sport Supplements Category \", priority = 28)\r\n    public void verifyAbilityToAccessAllPagesInsideNonStimulantWeightLossCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getNonStimulantWeightLossOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getNonStimulantWeightLossOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getNonStimulantWeightLossOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), nonStimulantWeightLossOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Meal Replacements Sub-Category related to the Sport Supplements Category \", priority = 29)\r\n    public void verifyAbilityToAccessAllPagesInsideMealReplacementsCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getMealReplacementsOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getMealReplacementsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getMealReplacementsOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mealReplacementsOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Metabolism Support Sub-Category related to the Sport Supplements Category \", priority = 30)\r\n    public void verifyAbilityToAccessAllPagesInsideMetabolismSupportCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getMetabolismSupportOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getMetabolismSupportOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getMetabolismSupportOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), metabolismSupportOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Toning Creams Sub-Category related to the Sport Supplements Category \", priority = 31)\r\n    public void verifyAbilityToAccessAllPagesInsideToningCreamsCategoryRelatedToSportSupplementsCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getToningCreamsOptionInSportSupplementsMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getToningCreamsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getToningCreamsOptionInSportSupplementsMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), toningCreamsOptionInSportSupplementsMenuUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Mct Sub-Category related to the Sport Supplements Category \", priority = 32)\r\n    public void verifyAbilityToAccessAllPagesInsideMctCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getMctOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getMctOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getMctOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mctOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Recovery Sub-Category related to the Sport Supplements Category \", priority = 33)\r\n    public void verifyAbilityToAccessAllPagesInsideRecoveryCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getRecoveryOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getRecoveryOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getRecoveryOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), recoveryOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Glutamine Sub-Category related to the Sport Supplements Category \", priority = 34)\r\n    public void verifyAbilityToAccessAllPagesInsideGlutamineCategoryRelatedToSportSupplementsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getGlutamineOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getGlutamineOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getGlutamineOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), glutamineOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Recovery Blend Sub-Category related to the Sport Supplements Category \", priority = 35)\r\n    public void verifyAbilityToAccessAllPagesInsideRecoveryBlendCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getRecoveryBlendOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getRecoveryBlendOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getRecoveryBlendOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), recoveryBlendOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Electrolytes And Hydration Sub-Category related to the Sport Supplements Category \", priority = 36)\r\n    public void verifyAbilityToAccessAllPagesInsideElectrolytesAndHydrationCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getElectrolytesAndHydrationOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getElectrolytesAndHydrationOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getElectrolytesAndHydrationOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), electrolytesAndHydrationOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Carbohydrates Sub-Category related to the Sport Supplements Category \", priority = 37)\r\n    public void verifyAbilityToAccessAllPagesInsideCarbohydratesCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getCarbohydratesOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getCarbohydratesOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getCarbohydratesOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), carbohydratesOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Carbohydrate Powders Sub-Category related to the Sport Supplements Category \", priority = 38)\r\n    public void verifyAbilityToAccessAllPagesInsideCarbohydratePowdersCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getCarbohydratePowdersOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getCarbohydratePowdersOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getCarbohydratePowdersOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), carbohydratePowdersOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Energy And Endurance Sub-Category related to the Sport Supplements Category \", priority = 39)\r\n    public void verifyAbilityToAccessAllPagesInsideEnergyAndEnduranceCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getEnergyAndEnduranceOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getEnergyAndEnduranceOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getEnergyAndEnduranceOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), energyAndEnduranceOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Stimulant Energy Sub-Category related to the Sport Supplements Category \", priority = 40)\r\n    public void verifyAbilityToAccessAllPagesInsideStimulantEnergyCategoryRelatedToSportSupplementsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getStimulantEnergyOptionInSportSupplementsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getStimulantEnergyOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getStimulantEnergyOptionInSportSupplementsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), stimulantEnergyOptionInSportSupplementsMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Non Stimulant Energy Sub-Category related to the Sport Supplements Category \", priority = 41)\r\n    public void verifyAbilityToAccessAllPagesInsideNonStimulantEnergyCategoryRelatedToSportSupplementsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getNonStimulantEnergyOptionInSportSupplementsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getNonStimulantEnergyOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getNonStimulantEnergyOptionInSportSupplementsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), nonStimulantEnergyOptionInSportSupplementsMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Gaming And Focus Sub-Category related to the Sport Supplements Category \", priority = 42)\r\n    public void verifyAbilityToAccessAllPagesInsideGamingAndFocusCategoryRelatedToSportSupplementsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getGamingAndFocusOptionInSportSupplementsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getGamingAndFocusOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getGamingAndFocusOptionInSportSupplementsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), gamingAndFocusOptionInSportSupplementsMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Gaming Essentials Sub-Category related to the Sport Supplements Category \", priority = 43)\r\n    public void verifyAbilityToAccessAllPagesInsideGamingEssentialsCategoryRelatedToSportSupplementsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getGamingEssentialsOptionInSportSupplementsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getGamingEssentialsOptionInSportSupplementsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getGamingEssentialsOptionInSportSupplementsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), gamingEssentialsOptionInSportSupplementsMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //Vitamins & Health Category Pages\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Featured Sub-Category related to the Vitamins & Health Category \", priority = 44)\r\n    public void verifyAbilityToAccessAllPagesInsideFeaturedCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getFeaturedOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getFeaturedOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getFeaturedOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), featuredOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Best Sellers Sub-Category related to the Vitamins & Health Category \", priority = 45)\r\n    public void verifyAbilityToAccessAllPagesInsideBestSellersCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getAliveVitaminsOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getAliveVitaminsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getAliveVitaminsOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aliveVitaminsOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sexual Health Sub-Category related to the Vitamins & Health Category \", priority = 46)\r\n    public void verifyAbilityToAccessAllPagesInsideSexualHealthCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getSexualHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getSexualHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getSexualHealthOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sexualHealthOptionInVitaminsAndHealthUrl);\r\n        System.out.println(webDriver.getCurrentUrl());\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Essential Vitamins Sub-Category related to the Vitamins & Health Category \", priority = 47)\r\n    public void verifyAbilityToAccessAllPagesInsideEssentialVitaminsCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getEssentialVitaminsOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getEssentialVitaminsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getEssentialVitaminsOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), essentialVitaminsOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Folic Acid Sub-Category related to the Vitamins & Health Category \", priority = 48)\r\n    public void verifyAbilityToAccessAllPagesInsideFolicAcidCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getFolicAcidOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getFolicAcidOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getFolicAcidOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), folicAcidOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin A Sub-Category related to the Vitamins & Health Category \", priority = 49)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminACategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminAOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminAOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminAOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminAOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin B Sub-Category related to the Vitamins & Health Category \", priority = 50)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminBCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminBOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminBOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminBOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminBOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin C Sub-Category related to the Vitamins & Health Category \", priority = 51)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminCCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminCOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminCOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminCOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminCOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin D Sub-Category related to the Vitamins & Health Category \", priority = 52)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminDCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminDOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminDOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminDOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminDOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin E Sub-Category related to the Vitamins & Health Category \", priority = 53)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminECategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminEOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminEOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminEOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminEOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamin K Sub-Category related to the Vitamins & Health Category \", priority = 54)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminKCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminKOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminKOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminKOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminKOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Multi Vitamins Sub-Category related to the Vitamins & Health Category \", priority = 55)\r\n    public void verifyAbilityToAccessAllPagesInsideMultiVitaminsCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getMultiVitaminsOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getMultiVitaminsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getMultiVitaminsOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), multiVitaminsOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamins For Kids Sub-Category related to the Vitamins & Health Category \", priority = 56)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminsForKidsCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsForKidsOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminsForKidsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminsForKidsOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminsForKidsOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamins For Men Sub-Category related to the Vitamins & Health Category \", priority = 57)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminsForMenCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsForMenOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminsForMenOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminsForMenOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminsForMenOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Vitamins For Women Sub-Category related to the Vitamins & Health Category \", priority = 58)\r\n    public void verifyAbilityToAccessAllPagesInsideVitaminsForWomenCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsForWomenOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getVitaminsForWomenOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getVitaminsForWomenOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), vitaminsForWomenOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Bone And Joint Sub-Category related to the Vitamins & Health Category \", priority = 59)\r\n    public void verifyAbilityToAccessAllPagesInsideBoneAndJointCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getBoneAndJointOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getBoneAndJointOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getBoneAndJointOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), boneJointOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Bone Health Sub-Category related to the Vitamins & Health Category \", priority = 60)\r\n    public void verifyAbilityToAccessAllPagesInsideBoneHealthCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getBoneHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getBoneHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getBoneHealthOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), boneHealthOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Joint Health Sub-Category related to the Vitamins & Health Category \", priority = 61)\r\n    public void verifyAbilityToAccessAllPagesInsideJointHealthCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getJointHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getJointHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getJointHealthOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), jointHealthOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Beauty Sub-Category related to the Vitamins & Health Category \", priority = 62)\r\n    public void verifyAbilityToAccessAllPagesInsideBeautyCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getBeautyOptionInVitaminsAndHealthMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getBeautyOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getBeautyOptionInVitaminsAndHealthMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), beautyOptionInVitaminsAndHealthUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Collagen Sub-Category related to the Vitamins & Health Category \", priority = 63)\r\n    public void verifyAbilityToAccessAllPagesInsideCollagenCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCollagenOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCollagenOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCollagenOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), collagenOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Hair Skin And Nails Sub-Category related to the Vitamins & Health Category \", priority = 64)\r\n    public void verifyAbilityToAccessAllPagesInsideHairSkinAndNailsCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHairSkinAndNailsOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHairSkinAndNailsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHairSkinAndNailsOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), hairSkinAndNailsOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Fish Oil Omegas Sub-Category related to the Vitamins & Health Category \", priority = 65)\r\n    public void verifyAbilityToAccessAllPagesInsideFishOilOmegasCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getFishOilOmegasOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getFishOilOmegasOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getFishOilOmegasOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), fishOilAndOmegasOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Fish Oil Sub-Category related to the Vitamins & Health Category \", priority = 66)\r\n    public void verifyAbilityToAccessAllPagesInsideFishOilCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getFishOilOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getFishOilOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getFishOilOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), fishOilOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Omega369 Sub-Category related to the Vitamins & Health Category \", priority = 67)\r\n    public void verifyAbilityToAccessAllPagesInsideOmega369CategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getOmega369OptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getOmega369OptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getOmega369OptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), omegaMixOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Health Life style Sub-Category related to the Vitamins & Health Category \", priority = 68)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthLifestyleCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHealthLifestyleOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHealthLifestyleOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHealthLifestyleOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), healthyLifestyleOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Antioxidants Sub-Category related to the Vitamins & Health Category \", priority = 69)\r\n    public void verifyAbilityToAccessAllPagesInsideAntioxidantsCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getAntioxidantsOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getAntioxidantsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getAntioxidantsOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), antioxidantOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Blood Sugar Support Sub-Category related to the Vitamins & Health Category \", priority = 70)\r\n    public void verifyAbilityToAccessAllPagesInsideBloodSugarSupportCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBloodSugarSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBloodSugarSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBloodSugarSupportOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bloodSugarSupportOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Brain Support Sub-Category related to the Vitamins & Health Category \", priority = 71)\r\n    public void verifyAbilityToAccessAllPagesInsideBrainSupportCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBrainSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBrainSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBrainSupportOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), brainSupportOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Detox And Cleans Sub-Category related to the Vitamins & Health Category \", priority = 72)\r\n    public void verifyAbilityToAccessAllPagesInsideDetoxAndCleansCategoryCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getDetoxAndCleanseOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getDetoxAndCleanseOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getDetoxAndCleanseOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), detoxCleanseOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Energy Formulas Sub-Category related to the Vitamins & Health Category \", priority = 74)\r\n    public void verifyAbilityToAccessAllPagesInsideEnergyFormulasCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getEnergyFormulasOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getEnergyFormulasOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getEnergyFormulasOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), energyFormulasOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Eye Health Sub-Category related to the Vitamins & Health Category \", priority = 75)\r\n    public void verifyAbilityToAccessAllPagesInsideEyeHealthCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getEyeHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getEyeHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getEyeHealthOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), eyeHealthOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Herbs Option Sub-Category related to the Vitamins & Health Category \", priority = 76)\r\n    public void verifyAbilityToAccessAllPagesInsideHerbsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHerbsOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHerbsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHerbsOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), herbsOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Hormones Balance Option Sub-Category related to the Vitamins & Health Category \", priority = 77)\r\n    public void verifyAbilityToAccessAllPagesInsideHormonesBalanceOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHormonesBalanceOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHormonesBalanceOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHormonesBalanceOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), hormonesBalanceOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Immune Support Option Sub-Category related to the Vitamins & Health Category \", priority = 78)\r\n    public void verifyAbilityToAccessAllPagesInsideImmuneSupportOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getImmuneSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getImmuneSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getImmuneSupportOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), immuneSupportOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Mens Health Option Sub-Category related to the Vitamins & Health Category \", priority = 79)\r\n    public void verifyAbilityToAccessAllPagesInsideMensHealthOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getMensHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getMensHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getMensHealthOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mensHealthOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Stress Relief Option Sub-Category related to the Vitamins & Health Category \", priority = 80)\r\n    public void verifyAbilityToAccessAllPagesInsideStressReliefOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getStressReliefOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getStressReliefOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getStressReliefOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), stressReliefOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sleep Support Option Sub-Category related to the Vitamins & Health Category \", priority = 81)\r\n    public void verifyAbilityToAccessAllPagesInsideSleepSupportOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSleepSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSleepSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSleepSupportOptionInVitaminsAndHealthMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sleepSupportOptionInVitaminsAndHealthUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Super Foods Option Sub-Category related to the Vitamins & Health Category \", priority = 82)\r\n    public void verifyAbilityToAccessAllPagesInsideSuperFoodsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getSuperFoodsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getSuperFoodsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getSuperFoodsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), superFoodsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Urinary Tract Support Option Sub-Category related to the Vitamins & Health Category \", priority = 83)\r\n    public void verifyAbilityToAccessAllPagesInsideUrinaryTractSupportOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getUrinaryTractSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getUrinaryTractSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getUrinaryTractSupportOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), urinaryTractSupportOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Weight Management Option Sub-Category related to the Vitamins & Health Category \", priority = 84)\r\n    public void verifyAbilityToAccessAllPagesInsideWeightManagementSupportOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getWeightManagementOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getWeightManagementOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getWeightManagementOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), weightManagementOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Womens Health  Option Sub-Category related to the Vitamins & Health Category \", priority = 85)\r\n    public void verifyAbilityToAccessAllPagesInsideWomensHealthOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getWomensHealthOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getWomensHealthOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getWomensHealthOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenesHealthOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Digestion Option Sub-Category related to the Vitamins & Health Category \", priority = 86)\r\n    public void verifyAbilityToAccessAllPagesInsideDigestionOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getDigestionOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getDigestionOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getDigestionOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), digestionOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Digestion Support Option Sub-Category related to the Vitamins & Health Category \", priority = 87)\r\n    public void verifyAbilityToAccessAllPagesInsideDigestionSupportOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getDigestiveSupportOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getDigestiveSupportOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getDigestiveSupportOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), digestionSupportOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Probiotics Option Sub-Category related to the Vitamins & Health Category \", priority = 88)\r\n    public void verifyAbilityToAccessAllPagesInsideProbioticsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getProbioticsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getProbioticsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getProbioticsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), probioticsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sport Vitamins Option Sub-Category related to the Vitamins & Health Category \", priority = 89)\r\n    public void verifyAbilityToAccessAllPagesInsideSportVitaminsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getSportVitaminsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getSportVitaminsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getSportVitaminsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sportVitaminsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino Acid Option Sub-Category related to the Vitamins & Health Category \", priority = 90)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAcidOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getAminoAcidOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getAminoAcidOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getAminoAcidOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoAcidOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Minerals Option Sub-Category related to the Vitamins & Health Category \", priority = 91)\r\n    public void verifyAbilityToAccessAllPagesInsideMineralsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getMineralsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getMineralsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getMineralsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mineralsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Calcium Option Sub-Category related to the Vitamins & Health Category \", priority = 92)\r\n    public void verifyAbilityToAccessAllPagesInsideCalciumOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getCalciumOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getCalciumOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getCalciumOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), calciumOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Iron Option Sub-Category related to the Vitamins & Health Category \", priority = 93)\r\n    public void verifyAbilityToAccessAllPagesInsideIronOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getIronOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getIronOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getIronOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), ironOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Magnesium Option Sub-Category related to the Vitamins & Health Category \", priority = 94)\r\n    public void verifyAbilityToAccessAllPagesInsideMagnesiumOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getMagnesiumOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getMagnesiumOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getMagnesiumOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), magnesiumOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Multi mineral Formulas Option Sub-Category related to the Vitamins & Health Category \", priority = 95)\r\n    public void verifyAbilityToAccessAllPagesInsideMultiMineralFormulasOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getMultimineralFormulasOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getMultimineralFormulasOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getMultimineralFormulasOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), multimineralFormulasOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Zinc Option Sub-Category related to the Vitamins & Health Category \", priority = 96)\r\n    public void verifyAbilityToAccessAllPagesInsideZincOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getZincOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getZincOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getZincOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), zincOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Potassium Option Sub-Category related to the Vitamins & Health Category \", priority = 97)\r\n    public void verifyAbilityToAccessAllPagesInsidePotassiumOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getPotassiumOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getPotassiumOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getPotassiumOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), potassiumOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Drinks Option Sub-Category related to the Vitamins & Health Category \", priority = 98)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthyDrinksOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getHealthyDrinksOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getHealthyDrinksOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getHealthyDrinksOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), healthyDrinksOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Drinkable Vitamins Option Sub-Category related to the Vitamins & Health Category \", priority = 99)\r\n    public void verifyAbilityToAccessAllPagesInsideDrinkableVitaminsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getDrinkableVitaminsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getDrinkableVitaminsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getDrinkableVitaminsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), drinkableVitaminsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Pets Option Sub-Category related to the Vitamins & Health Category \", priority = 100)\r\n    public void verifyAbilityToAccessAllPagesInsidePetsOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getPetsOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getPetsOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getPetsOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), petsOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n  @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Supplements More Option Sub-Category related to the Vitamins & Health Category \", priority = 101)\r\n    public void verifyAbilityToAccessAllPagesInsideSupplementsMoreOptionCategoryRelatedTVitaminsAndHealthCategoryPage(){\r\n      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n      action = new Actions(webDriver);\r\n//      //aeMegamenuPage.navigateToHomePage();\r\n      action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n      action.moveToElement(aeMegamenuPage.getSupplementsMoreOptionInVitaminsAndHealthMainMenu()).perform();\r\n      String expectedUrl=aeMegamenuPage.getSupplementsMoreOptionInVitaminsAndHealthMainMenu().getAttribute(\"href\");\r\n      aeMegamenuPage.getSupplementsMoreOptionInVitaminsAndHealthMainMenu().click();\r\n      Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), supplementsMoreOptionInVitaminsAndHealthUrl);\r\n      aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n      String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n//Healthy Food Category Pages\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Food Category Page\", priority = 102)\r\npublic void verifyAbilityToAccessAllPagesInsideHealthyFoodCategoryPageFromMegaMenu(){\r\n    AeHealthyFoodCategoryPage aeHealthyFoodCategoryPage = new AeHealthyFoodCategoryPage(webDriver);\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n    aeHealthyFoodCategoryPage.navigate();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n    @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Grocery Option Sub-Category related to the Healthy Food Category \", priority = 103)\r\n    public void verifyAbilityToAccessAllPagesInsideGroceryOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n//        //aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getGroceryOptionInHealthyFoodMainMenu()).perform();\r\n        String expectedUrl=aeMegamenuPage.getGroceryOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n        aeMegamenuPage.getGroceryOptionInHealthyFoodMainMenu().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), groceryOptionInHealthyFoodUrl);\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Baking And Cooking Option Sub-Category related to the Healthy Food Category \", priority = 104)\r\n    public void verifyAbilityToAccessAllPagesInsideBakingAndCookingOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBakingAndCookingOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBakingAndCookingOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBakingAndCookingOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bakingAndCookingOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Canned Option Sub-Category related to the Healthy Food Category \", priority = 105)\r\n    public void verifyAbilityToAccessAllPagesInsideCannedOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCannedOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCannedOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCannedOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), cannedOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Coffee Option Sub-Category related to the Healthy Food Category \", priority = 106)\r\n    public void verifyAbilityToAccessAllPagesInsideCoffeeOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCoffeeOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCoffeeOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCoffeeOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), coffeeOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Condiments Option Sub-Category related to the Healthy Food Category \", priority = 107)\r\n    public void verifyAbilityToAccessAllPagesInsideCondimentsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCondimentsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCondimentsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCondimentsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), condimentsOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Milk And Cream Option Sub-Category related to the Healthy Food Category \", priority = 108)\r\n    public void verifyAbilityToAccessAllPagesInsideMilkAndCreamOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getMilkAndCreamOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getMilkAndCreamOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getMilkAndCreamOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), milkAndCreamOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Nuts And Oats Option Sub-Category related to the Healthy Food Category \", priority = 109)\r\n    public void verifyAbilityToAccessAllPagesInsideNutsAndOatsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getNutsAndOatsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getNutsAndOatsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getNutsAndOatsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), nutsAndOatsOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Oils Option Sub-Category related to the Healthy Food Category \", priority = 110)\r\n    public void verifyAbilityToAccessAllPagesInsideOilsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getOilsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getOilsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getOilsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), oilsOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Pasta Option Sub-Category related to the Healthy Food Category \", priority = 111)\r\n    public void verifyAbilityToAccessAllPagesInsidePastaOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getPastaOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getPastaOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getPastaOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), pastaOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Rice And Grains Option Sub-Category related to the Healthy Food Category \", priority = 112)\r\n    public void verifyAbilityToAccessAllPagesInsideRiceAndGrainsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getRiceAndGrainsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getRiceAndGrainsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getRiceAndGrainsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), riceAndGrainsOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Seasonings Option Sub-Category related to the Healthy Food Category \", priority = 113)\r\n    public void verifyAbilityToAccessAllPagesInsideSeasoningsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSeasoningsAndSpicesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSeasoningsAndSpicesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSeasoningsAndSpicesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), seasoningsAndSpicessOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sugar Sweeteners Option Sub-Category related to the Healthy Food Category \", priority = 114)\r\n    public void verifyAbilityToAccessAllPagesInsideSugarSweetenersOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSugarSweetenersOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSugarSweetenersOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSugarSweetenersOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sugarAndSweetenersOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Syrups Option Sub-Category related to the Healthy Food Category \", priority = 115)\r\n    public void verifyAbilityToAccessAllPagesInsideSyrupsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSyrupsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSyrupsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSyrupsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), syrupsOptionInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Tea And Herbs Option Sub-Category related to the Healthy Food Category \", priority = 116)\r\n    public void verifyAbilityToAccessAllPagesInsideTeaAndHerbsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getTeaAndHerbsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getTeaAndHerbsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getTeaAndHerbsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), teaAndHerbsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Superfoods Option Sub-Category related to the Healthy Food Category \", priority = 117)\r\n    public void verifyAbilityToAccessAllPagesInsideSuperfoodsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSuperfoodsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSuperfoodsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSuperfoodsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), superFoodsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Ready Mixes Option Sub-Category related to the Healthy Food Category \", priority = 118)\r\n    public void verifyAbilityToAccessAllPagesInsideReadyMixesOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getReadyMixesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getReadyMixesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getReadyMixesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), readyMixInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Breakfast And Cereal Option Sub-Category related to the Healthy Food Category \", priority = 119)\r\n    public void verifyAbilityToAccessAllPagesInsideBreakfastAndCerealOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBreakfastAndCerealOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBreakfastAndCerealOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBreakfastAndCerealOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), breakfastAndCerealInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Ready To Drink Option Sub-Category related to the Healthy Food Category \", priority = 120)\r\n    public void verifyAbilityToAccessAllPagesInsideReadyToDrinkOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getReadyToDrinkOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getReadyToDrinkOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getReadyToDrinkOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), readyToDrinkInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Amino And Bcaas Option Sub-Category related to the Healthy Food Category \", priority = 121)\r\n    public void verifyAbilityToAccessAllPagesInsideAminoAndBcaasOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getAminoAndBcaasOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getAminoAndBcaasOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getAminoAndBcaasOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), aminoBcaasInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Energy Drinks Option Sub-Category related to the Healthy Food Category \", priority = 122)\r\n    public void verifyAbilityToAccessAllPagesInsideEnergyDrinksOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getEnergyDrinksOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getEnergyDrinksOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getEnergyDrinksOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), energyDrinksInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Protein Shakes Option Sub-Category related to the Healthy Food Category \", priority = 123)\r\n    public void verifyAbilityToAccessAllPagesInsideProteinShakesOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getProteinShakesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getProteinShakesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getProteinShakesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), proteinShakesInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Electrolytes And Hydration Option Sub-Category related to the Healthy Food Category \", priority = 124)\r\n    public void verifyAbilityToAccessAllPagesInsideElectrolytesAndHydrationOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getElectrolytesAndHydrationOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getElectrolytesAndHydrationOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getElectrolytesAndHydrationOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), electrolytesAndHydrationInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Snacks Option Sub-Category related to the Healthy Food Category \", priority = 125)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthySnacksOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHealthySnacksOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHealthySnacksOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHealthySnacksOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), healthySnacksInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Protein Bars Option Sub-Category related to the Healthy Food Category \", priority = 126)\r\n    public void verifyAbilityToAccessAllPagesInsideProteinBarsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getProteinBarsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getProteinBarsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getProteinBarsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), proteinBarsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Cookies Option Sub-Category related to the Healthy Food Category \", priority = 127)\r\n    public void verifyAbilityToAccessAllPagesInsideCookiesOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCookiesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCookiesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCookiesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), cookiesInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Chips Option Sub-Category related to the Healthy Food Category \", priority = 128)\r\n    public void verifyAbilityToAccessAllPagesInsideChipsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getChipsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getChipsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getChipsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), chipsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Brownies And Pancakes Option Sub-Category related to the Healthy Food Category \", priority = 129)\r\n    public void verifyAbilityToAccessAllPagesInsideBrowniesAndPancakesOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getBrowniesAndPancakesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getBrowniesAndPancakesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getBrowniesAndPancakesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), browniesAndPancakesInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Snack Bars Option Sub-Category related to the Healthy Food Category \", priority = 130)\r\n    public void verifyAbilityToAccessAllPagesInsideSnackBarsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSnackBarsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSnackBarsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSnackBarsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), snackBarsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Spreads Option Sub-Category related to the Healthy Food Category \", priority = 131)\r\n    public void verifyAbilityToAccessAllPagesInsideSpreadsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getSpreadsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getSpreadsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getSpreadsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), spreadsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Other Healthy Snacks Option Sub-Category related to the Healthy Food Category \", priority = 132)\r\n    public void verifyAbilityToAccessAllPagesInsideOtherHealthySnacksOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getOtherHealthySnacksOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getOtherHealthySnacksOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getOtherHealthySnacksOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), otherHealthySnacksInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Ready To Eat Option Sub-Category related to the Healthy Food Category \", priority = 133)\r\n    public void verifyAbilityToAccessAllPagesInsideReadyToEatOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getReadyToEatOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getReadyToEatOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getReadyToEatOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), readyToEatInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Meals Option Sub-Category related to the Healthy Food Category \", priority = 134)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthyMealsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHealthyMealsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHealthyMealsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHealthyMealsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), healthyMealsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        System.out.println(numberOfProductInTheList);\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Featured Option Sub-Category related to the Healthy Food Category \", priority = 135)\r\n    public void verifyAbilityToAccessAllPagesInsideFeaturedOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getFeaturedOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getFeaturedOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getFeaturedOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), featuredInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Healthy Meal Replacement Option Sub-Category related to the Healthy Food Category \", priority = 136)\r\n    public void verifyAbilityToAccessAllPagesInsideHealthyMealReplacementOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getHealthyMealReplacementOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getHealthyMealReplacementOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getHealthyMealReplacementOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), healthyMealReplacementInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Protein Option Sub-Category related to the Healthy Food Category \", priority = 137)\r\n    public void verifyAbilityToAccessAllPagesInsideProteinOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getProteinCoffeeOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getProteinCoffeeOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getProteinCoffeeOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), proteinCoffeeInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Candies Option Sub-Category related to the Healthy Food Category \", priority = 138)\r\n    public void verifyAbilityToAccessAllPagesInsideCandiesOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getCandiesOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getCandiesOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getCandiesOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), candiesInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Flavoring Agents Option Sub-Category related to the Healthy Food Category \", priority = 139)\r\n    public void verifyAbilityToAccessAllPagesInsideFlavoringAgentsOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getFlavoringAgentsOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getFlavoringAgentsOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getFlavoringAgentsOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), flavoringAgentsInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Keto Option Sub-Category related to the Healthy Food Category \", priority = 140)\r\n    public void verifyAbilityToAccessAllPagesInsideKetoOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getKetoSnacksOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getKetoSnacksOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getKetoSnacksOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), ketoSnacksInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Manuka Honey Option Sub-Category related to the Healthy Food Category \", priority = 141)\r\n    public void verifyAbilityToAccessAllPagesInsideManukaHoneyOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getManukaHoneyOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getManukaHoneyOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getManukaHoneyOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), manukaHoneyInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n   @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Meat Snacks Option Sub-Category related to the Healthy Food Category \", priority = 142)\r\n    public void verifyAbilityToAccessAllPagesInsideMeatSnacksOptionCategoryRelatedToHealthyFoodCategoryPage(){\r\n       AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n       AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n       action = new Actions(webDriver);\r\n//       //aeMegamenuPage.navigateToHomePage();\r\n       action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n       action.moveToElement(aeMegamenuPage.getMeatSnacksOptionInHealthyFoodMainMenu()).perform();\r\n       String expectedUrl=aeMegamenuPage.getMeatSnacksOptionInHealthyFoodMainMenu().getAttribute(\"href\");\r\n       aeMegamenuPage.getMeatSnacksOptionInHealthyFoodMainMenu().click();\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), meatSnacksInHealthyFoodUrl);\r\n       aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n       String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n//Sports Category Pages\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Men Option Sub-Category related to the Sports Category \", priority = 143)\r\npublic void verifyAbilityToAccessAllPagesInsideMenOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getMenOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getMenOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getMenOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), menInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sport Option Sub-Category related to the Sports Category \", priority = 144)\r\npublic void verifyAbilityToAccessAllPagesInsideSportOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getSportOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getSportOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getSportOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sportInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Football Option Sub-Category related to the Sports Category \", priority = 145)\r\npublic void verifyAbilityToAccessAllPagesInsideFootballOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getFootballOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getFootballOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getFootballOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), footballInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Basketball Option Sub-Category related to the Sports Category \", priority = 146)\r\npublic void verifyAbilityToAccessAllPagesInsideBasketballOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getBasketballOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getBasketballOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getBasketballOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), basketballInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Baseball Option Sub-Category related to the Sports Category \", priority = 147)\r\npublic void verifyAbilityToAccessAllPagesInsideBaseballOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getBaseballOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getBaseballOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getBaseballOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), baseballInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Running Option Sub-Category related to the Sports Category \", priority = 148)\r\npublic void verifyAbilityToAccessAllPagesInsideRunningOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getRunningOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getRunningOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getRunningOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), runningInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Safety Swimming Option Sub-Category related to the Sports Category \", priority = 149)\r\npublic void verifyAbilityToAccessAllPagesInsideSafetySwimmingOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getSwimmingOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getSwimmingOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getSwimmingOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), swimmingInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Yoga Option Sub-Category related to the Sports Category \", priority = 150)\r\npublic void verifyAbilityToAccessAllPagesInsideYogaOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getYogaOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getYogaOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getYogaOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), yogaInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Fitness And Training1 Option related to the Sports Category \", priority = 151)\r\npublic void verifyAbilityToAccessAllPagesInsideFitnessAndTraining1OptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getFitnessAndTrainingOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getFitnessAndTrainingOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getFitnessAndTrainingOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), fitnessAndTrainingInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Mma Option Sub-Category related to the Sports Category \", priority = 152)\r\npublic void verifyAbilityToAccessAllPagesInsideMmaOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getMmaOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getMmaOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getMmaOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mmaInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside JiuJitsu Option Sub-Category related to the Sports Category \", priority = 153)\r\npublic void verifyAbilityToAccessAllPagesInsideJiuJitsuOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getJiuJitsuOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getJiuJitsuOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getJiuJitsuOptionInSportsMainMenu().click();\r\n     Assert.assertEquals(webDriver.getCurrentUrl(),expectedUrl);\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), jiuJitsuInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Board Games Option Sub-Category related to the Sports Category \", priority = 154)\r\npublic void verifyAbilityToAccessAllPagesInsideBoardGamesOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getBoardGamesOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getBoardGamesOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getBoardGamesOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), boardGamesInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sports Tech Option Sub-Category related to the Sports Category \", priority = 155)\r\npublic void verifyAbilityToAccessAllPagesInsideSportsTechOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getSportsTechOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getSportsTechOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getSportsTechOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sportsTechInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Wearable Tech Option Sub-Category related to the Sports Category \", priority = 156)\r\npublic void verifyAbilityToAccessAllPagesInsideWearableTechOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getWearableTechOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getWearableTechOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getWearableTechOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), wearableTechInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Cameras Option Sub-Category related to the Sports Category \", priority = 157)\r\npublic void verifyAbilityToAccessAllPagesInsideCamerasOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getCamerasOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getCamerasOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getCamerasOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), camerasInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Phone Accessories Option Sub-Category related to the Sports Category \", priority = 158)\r\npublic void verifyAbilityToAccessAllPagesInsidePhoneAccessoriesOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getPhoneAccessoriesOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getPhoneAccessoriesOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getPhoneAccessoriesOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), phoneAccessoriesInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Personal Care Option Sub-Category related to the Sports Category \", priority = 159)\r\npublic void verifyAbilityToAccessAllPagesInsidePersonalCareOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getPersonalCareOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getPersonalCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getPersonalCareOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), personalCareInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(groups = {\"Brands Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"MegaMenu- Make Sure the ability to access all pages inside Showering Option Sub-Category related to the Sports Category \", priority = 160)\r\npublic void verifyAbilityToAccessAllPagesInsideShoweringOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getShoweringOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getShoweringOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getShoweringOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), showeringInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(groups = {\"Brands Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"MegaMenu- Make Sure the ability to access all pages inside Shaving Option Sub-Category related to the Sports Category \", priority = 161)\r\npublic void verifyAbilityToAccessAllPagesInsideShavingOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getShavingOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getShavingOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getShavingOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), shavingInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    //There's a bug here due to the option is duplicated\r\n @Test(groups = {\"Brands Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"MegaMenu- Make Sure the ability to access all pages inside Skin Care Option Sub-Category related to the Sports Category \", priority = 162)\r\npublic void verifyAbilityToAccessAllPagesInsideSkinCareOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getSkinCareOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getSkinCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getSkinCareOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), skinCareInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Body Care Option Sub-Category related to the Sports Category \", priority = 163)\r\npublic void verifyAbilityToAccessAllPagesInsideBodyCareOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getBodyCareOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getBodyCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getBodyCareOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bodyCareInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Oral Care Option Sub-Category related to the Sports Category \", priority = 164)\r\npublic void verifyAbilityToAccessAllPagesInsideOralCareOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getOralCareOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getOralCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getOralCareOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), oralCareInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Therapy Option Sub-Category related to the Sports Category \", priority = 165)\r\npublic void verifyAbilityToAccessAllPagesInsideTherapyOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getTherapyOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getTherapyOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getTherapyOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), therapyInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Masks Option Sub-Category related to the Sports Category \", priority = 166)\r\npublic void verifyAbilityToAccessAllPagesInsideMasksOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getMasksOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getMasksOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getMasksOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), masksInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Fitness And Training Option Sub-Category related to the Sports Category \", priority = 167)\r\npublic void verifyAbilityToAccessAllPagesInsideFitnessAndTrainingOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getFitnessAndTrainingCategoryOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getFitnessAndTrainingCategoryOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getFitnessAndTrainingCategoryOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), fitnessAndTrainingCategoryInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Fitness Equipment Option Sub-Category related to the Sports Category \", priority = 168)\r\npublic void verifyAbilityToAccessAllPagesInsideFitnessEquipmentOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getFitnessEquipmentOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getFitnessEquipmentOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getFitnessEquipmentOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), fitnessEquipmentInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Skipping Ropes Option Sub-Category related to the Sports Category \", priority = 169)\r\npublic void verifyAbilityToAccessAllPagesInsideSkippingRopesOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getSkippingRopesOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getSkippingRopesOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getSkippingRopesOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), skippingRopesInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the \" +\r\n         \"ability to access all pages inside Weigh tBelts Tech Option Sub-Category related to the Sports Category \", priority = 170)\r\npublic void verifyAbilityToAccessAllPagesInsideWeightBeltsOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getWeightBeltsOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getWeightBeltsOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getWeightBeltsOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), weightBeltsInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Scooters Option Sub-Category related to the Sports Category \", priority = 171)\r\npublic void verifyAbilityToAccessAllPagesInsideScootersOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getScootersOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getScootersOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getScootersOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), scootersInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n @Test(description = \"MegaMenu- Make Sure the ability to access all pages inside  Training Accessories Option Sub-Category related to the Sports Category \", priority = 172)\r\npublic void verifyAbilityToAccessAllPagesInsideTrainingAccessoriesOptionCategoryRelatedToSportsCategoryPage(){\r\n     AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n     AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n     action = new Actions(webDriver);\r\n//     //aeMegamenuPage.navigateToHomePage();\r\n     action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n     action.moveToElement(aeMegamenuPage.getTrainingAccessoriesOptionInSportsMainMenu()).perform();\r\n     String expectedUrl=aeMegamenuPage.getTrainingAccessoriesOptionInSportsMainMenu().getAttribute(\"href\");\r\n     aeMegamenuPage.getTrainingAccessoriesOptionInSportsMainMenu().click();\r\n     Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), trainingAccessoriesInSportsMainMenuUrl);\r\n     aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n     String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Shakers And Bottles Option Sub-Category related to the Sports Category \", priority = 173)\r\npublic void verifyAbilityToAccessAllPagesInsideShakersAndBottlesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getShakersAndBottlesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getShakersAndBottlesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getShakersAndBottlesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), shakersBottlesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Bags Option Sub-Category related to the Sports Category \", priority = 174)\r\npublic void verifyAbilityToAccessAllPagesInsideBagsOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getBagsOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getBagsOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getBagsOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bagsInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Gloves Option Sub-Category related to the Sports Category \", priority = 175)\r\npublic void verifyAbilityToAccessAllPagesInsideGlovesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getGlovesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getGlovesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getGlovesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), glovesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Braces And Sleeves Option Sub-Category related to the Sports Category \", priority = 176)\r\npublic void verifyAbilityToAccessAllPagesInsideBracesAndSleevesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getBracesAndSleevesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getBracesAndSleevesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getBracesAndSleevesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), bracesSleevesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Mouthguard Option Sub-Category related to the Sports Category \", priority = 177)\r\npublic void verifyAbilityToAccessAllPagesInsideMouthguardOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getMouthguardOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getMouthguardOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getMouthguardOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), mouthguardInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Appeal Option Sub-Category related to the Sports Category \", priority = 178)\r\npublic void verifyAbilityToAccessAllPagesInsideAppealOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getApparelOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getApparelOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getApparelOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), apparelInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sportswear Option Sub-Category related to the Sports Category \", priority = 179)\r\npublic void verifyAbilityToAccessAllPagesInsideSportswearOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getSportswearOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getSportswearOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getSportswearOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sportsWearInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Pants Option Sub-Category related to the Sports Category \", priority = 180)\r\npublic void verifyAbilityToAccessAllPagesInsidePantsOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getPantsOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getPantsOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getPantsOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), pantsInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Shorts Option Sub-Category related to the Sports Category \", priority = 181)\r\npublic void verifyAbilityToAccessAllPagesInsideShortsOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getShortsOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getShortsOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getShortsOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), shortsInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Hoodies Option Sub-Category related to the Sports Category \", priority = 182)\r\npublic void verifyAbilityToAccessAllPagesInsideHoodiesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getHoodiesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getHoodiesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getHoodiesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), hoodiesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside TShirts Option Sub-Category related to the Sports Category \", priority = 183)\r\npublic void verifyAbilityToAccessAllPagesInsideTShirtsOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.gettShirtsOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.gettShirtsOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.gettShirtsOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), tShirtsInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Tanks Option Sub-Category related to the Sports Category \", priority = 184)\r\npublic void verifyAbilityToAccessAllPagesInsideTanksOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getTanksOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getTanksOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getTanksOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), tanksInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Footwear Option Sub-Category related to the Sports Category \", priority = 185)\r\npublic void verifyAbilityToAccessAllPagesInsideFootwearOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getFootwearOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getFootwearOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getFootwearOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), footwearInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Sneakers Option Sub-Category related to the Sports Category \", priority = 186)\r\npublic void verifyAbilityToAccessAllPagesInsideSneakersOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getSneakersOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getSneakersOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getSneakersOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), sneakersInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Training Shoes Option Sub-Category related to the Sports Category \", priority = 187)\r\npublic void verifyAbilityToAccessAllPagesInsideTrainingShoesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getTrainingShoesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getTrainingShoesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getTrainingShoesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), trainingShoesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Running Shoes Option Sub-Category related to the Sports Category \", priority = 188)\r\npublic void verifyAbilityToAccessAllPagesInsideRunningShoesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getRunnigShoesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getRunnigShoesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getRunnigShoesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), runningShoesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Option Sub-Category related to the Sports Category \", priority = 189)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Sports Tech Option Sub-Category related to the Sports Category \", priority = 190)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenSportsTechOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenSportsTechOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenSportsTechOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenSportsTechOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenSportsTechInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Wearable Tech Option Sub-Category related to the Sports Category \", priority = 191)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenWearableTechOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenWearableTechOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenWearableTechOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenWearableTechOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenWearableTechInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Cameras Option Sub-Category related to the Sports Category \", priority = 192)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenCamerasOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenCamerasOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenCamerasOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenCamerasOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenCamerasInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Phone Accessories Option Sub-Category related to the Sports Category \", priority = 193)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenPhoneAccessoriesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenPhoneAccessoriesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenPhoneAccessoriesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenPhoneAccessoriesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenPhoneAccessoriesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Personal Care Option Sub-Category related to the Sports Category \", priority = 194)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenPersonalCareOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenPersonalCareOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenPersonalCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenPersonalCareOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenPersonalCareInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Showering Option Sub-Category related to the Sports Category \", priority = 195)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenShoweringOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenShoweringOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenShoweringOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenShoweringOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenShoweringInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Skin Care Option Sub-Category related to the Sports Category \", priority = 196)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenSkinCareOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenSkinCareOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenSkinCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenSkinCareOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenSkinCareInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Body Care Option Sub-Category related to the Sports Category \", priority = 197)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenBodyCareOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenBodyCareOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenBodyCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenBodyCareOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenBodyCareInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Oral Care Option Sub-Category related to the Sports Category \", priority = 198)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenOralCareOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenOralCareOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenOralCareOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenOralCareOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenOralCareInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Therapy Option Sub-Category related to the Sports Category \", priority = 199)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenTherapyOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenTherapyOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenTherapyOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenTherapyOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenTherapyInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Masks Option Sub-Category related to the Sports Category \", priority = 200)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenMasksOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenMasksOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenMasksOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenMasksOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenMasksInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Fitness And Training Option Sub-Category related to the Sports Category \", priority = 201)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenFitnessAndTrainingOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenFitnessAndTrainingOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenFitnessAndTrainingOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenFitnessAndTrainingOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenFitnessAndTrainingInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n@Test(description = \"MegaMenu- Make Sure the ability to access all pages inside Women Training Accessories Option Sub-Category related to the Sports Category \", priority = 202)\r\npublic void verifyAbilityToAccessAllPagesInsideWomenTrainingAccessoriesOptionCategoryRelatedToSportsCategoryPage(){\r\n    AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);\r\n    AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n    action = new Actions(webDriver);\r\n//    //aeMegamenuPage.navigateToHomePage();\r\n    action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n    action.moveToElement(aeMegamenuPage.getWomenTrainingAccessoriesOptionInSportsMainMenu()).perform();\r\n    String expectedUrl=aeMegamenuPage.getWomenTrainingAccessoriesOptionInSportsMainMenu().getAttribute(\"href\");\r\n    aeMegamenuPage.getWomenTrainingAccessoriesOptionInSportsMainMenu().click();\r\n    Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(), womenTrainingAccessoriesInSportsMainMenuUrl);\r\n    aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n            if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n}\r\n//Banners inside the MegaMenu lists\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java b/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java
--- a/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeAllPagesInsideCategoriesInMegaMenuTestCases.java	(date 1673265422602)
@@ -3029,7 +3029,11 @@
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
+<<<<<<< HEAD
  @Test(groups = {"Brands Page","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make Sure the ability to access all pages inside Showering Option Sub-Category related to the Sports Category ", priority = 160)
+=======
+ @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make Sure the ability to access all pages inside Showering Option Sub-Category related to the Sports Category ", priority = 160)
+>>>>>>> origin/master
 public void verifyAbilityToAccessAllPagesInsideShoweringOptionCategoryRelatedToSportsCategoryPage(){
      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);
      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -3048,7 +3052,11 @@
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
+<<<<<<< HEAD
  @Test(groups = {"Brands Page","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make Sure the ability to access all pages inside Shaving Option Sub-Category related to the Sports Category ", priority = 161)
+=======
+ @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make Sure the ability to access all pages inside Shaving Option Sub-Category related to the Sports Category ", priority = 161)
+>>>>>>> origin/master
 public void verifyAbilityToAccessAllPagesInsideShavingOptionCategoryRelatedToSportsCategoryPage(){
      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);
      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -3068,7 +3076,11 @@
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
     //There's a bug here due to the option is duplicated
+<<<<<<< HEAD
  @Test(groups = {"Brands Page","Smoke Testing Result","Medium Severity"},description = "MegaMenu- Make Sure the ability to access all pages inside Skin Care Option Sub-Category related to the Sports Category ", priority = 162)
+=======
+ @Test(groups = "Smoke Testing Result",description = "MegaMenu- Make Sure the ability to access all pages inside Skin Care Option Sub-Category related to the Sports Category ", priority = 162)
+>>>>>>> origin/master
 public void verifyAbilityToAccessAllPagesInsideSkinCareOptionCategoryRelatedToSportsCategoryPage(){
      AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage= new AeSportSupplementsCategoryPage(webDriver);
      AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
Index: src/test/java/sporter_test/AeSearchPageTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.*;\r\n\r\nimport static org.testng.Assert.*;\r\n\r\npublic class AeSearchPageTestCases extends BaseTest {\r\n    Actions action;\r\n    \r\n    @Test(groups = \"Smoke Testing Result\",description = \"Search Page- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n\r\n    @Test(groups = {\"Search\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Verify clicking on the search button will redirect the user to the search screen\", priority = 1)\r\n    public void verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.searchUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.searchUrl));\r\n    }\r\n    @Test(description = \"Make sure all search tabs(All, Products, Articles, Brands) tabs appearing correctly in the search screen\", priority = 2)\r\n    public void verifyAllSearchTabsLikeAll_Products_Articles_AndBrandsTabsAppearCorrectlyInTheSearchScreen() {\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        Assert.assertTrue(aeSearchPage.getAllTab().isDisplayed(),\"All tab is missing\");\r\n        Assert.assertEquals(aeSearchPage.getAllTab().getText(), \"ALL \",\"The All tab have incorrect name\");\r\n        Assert.assertTrue(aeSearchPage.getProductsTab().isDisplayed(),\"Products tab is missing\");\r\n        Assert.assertEquals(aeSearchPage.getProductsTab().getText(), \"PRODUCTS \",\"Products tab have incorrect name\");\r\n        Assert.assertTrue(aeSearchPage.getArticlesTab().isDisplayed(),\"Articles tab is missing\");\r\n        Assert.assertEquals(aeSearchPage.getArticlesTab().getText(), \"ARTICLES \",\"Articles tab have incorrect name\");\r\n       Assert.assertTrue(aeSearchPage.getBrandsTab().isDisplayed(),\"Brands tab is missing\");\r\n       Assert.assertEquals(aeSearchPage.getBrandsTab().getText(), \"BRANDS \",\"Brands tab have incorrect name\");\r\n    }\r\n    @Test(description = \"Search Page-Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Search Page\", priority = 3)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSearchPage(){\r\n        AEFooterPage aeFooterPage = new AEFooterPage(webDriver);\r\n        Assert.assertTrue(aeFooterPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeFooterPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeFooterPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeFooterPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeFooterPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeFooterPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeFooterPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeFooterPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeFooterPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    //      The following Test Cases handle displaying the Mega Menu from search Page\r\n    @Test(groups = {\"Search\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Search Page- Make sure all menus appearing in the Mega Menu are displayed correctly when hovering on them from Search page\", priority = 4)\r\n    public void verifyAllMenusInMegaMenuAreDisplayedCorrectlyWhenHoveringOnItFromSearchPage() {\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        action.moveToElement(aeMegamenuPage.getShopeByMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getSubMenuSection().isDisplayed());\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getMegaMenuSection().isDisplayed());\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getMegaMenuSection().isDisplayed());\r\n        action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getMegaMenuSection().isDisplayed());\r\n        action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getMegaMenuSection().isDisplayed());\r\n    }\r\n    //All Tab\r\n    @Test(description = \"Search Page- Make sure clicking on the All tab will redirect the user to the correct page\", priority = 5)\r\n    public void verifyClickingOnAllTabRedirectUserToCorrectPage(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        aeSearchPage.getAllTab().click();\r\n        assertTrue(aeSearchPage.getProductsSectionInAllPage().isDisplayed(),\"Products Section in All tab is missing\");\r\n        assertTrue(aeSearchPage.getBrandsSectionInAllPage().isDisplayed(),\"Brands Section in All tab is missing\");\r\n        assertTrue(aeSearchPage.getArticlesSectionInAllPage().isDisplayed(),\"Articles Section in All tab is missing\");\r\n    }\r\n    //There's a bug here due to the products list is not appear after visit the PDP then go to All search page\r\n    @Test(groups = {\"Search\",\"Smoke Testing Result\",\"High Severity\"},description = \"Search Page- Make sure the ability to access all products appearing below the products section in the All Page\", priority = 6)\r\n    public void verifyAbilityToAccessAllProductsListedBelowTheProductsSectionInTheAllTabCorrectly(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n        String expectedProductURL;\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        aeSearchPage.getAllTab().click();\r\n        for(int i=0; i<aeSearchPage.getProductCardInProductsSection().size();i++){\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getProductCardInProductsSection().get(i),5,webDriver);\r\n            expectedProductURL=aeSearchPage.getProductCardInProductsSection().get(i).getAttribute(\"href\");\r\n            aeSearchPage.getProductCardInProductsSection().get(i).click();\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedProductURL));\r\n            aeProductDetailsPage.getSearchBtn().click();\r\n            aeSearchPage.getAllTab().click();\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getProductsListInAllTab(),5,webDriver);\r\n\r\n        }\r\n    }\r\n    //Brands Tab\r\n\r\n    @Test(description = \"Search Page- Make sure the ability to access all brands appearing in the Brands Page\", priority = 7)\r\n    public void verifyAbilityToAccessAllBrandsListedInBrandsPageCorrectly(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n        String expectedProductURL;\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        aeSearchPage.getBrandsTab().click();\r\n        for(int i=0; i<aeSearchPage.getBrandsListInBrandPage().size();i++){\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getBrandsListInBrandPage().get(i),5,webDriver);\r\n//            expectedProductURL=aeSearchPage.getBrandsListInBrandPage().get(i).getAttribute(\"href\");\r\n            aeSearchPage.getBrandsListInBrandPage().get(i).click();\r\n            aeSearchPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//            DataHelperAndWait.waitForUrlContains(expectedProductURL,webDriver,5);\r\n//            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedProductURL));\r\n            aeProductDetailsPage.getSearchBtn().click();\r\n            aeSearchPage.getBrandsTab().click();\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getBrandsListInBrandPage().get(i),3,webDriver);\r\n            aeSearchPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n        }\r\n    }\r\n    @Test(description = \"Search Page- Make sure the the number of Brands Result retrieve a correct number\", priority = 8)\r\n    public void verifyAbilityNumberOfBrandsResultRetrieveCorrectValue(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        aeSearchPage.getBrandsTab().click();\r\n        String numberOfProductInTheList=aeSearchPage.getNumberOfSearchResultInBrandsTab().getText();\r\n        String numberOfProductWithOutItemLabel= numberOfProductInTheList.replace(\") Items\",\"\");\r\n        String numberOfProductWithOutResultLabel= numberOfProductWithOutItemLabel.replace(\"Results: (\",\"\");\r\n        int numberOfProductInTheListInInt=Integer.parseInt(numberOfProductWithOutResultLabel);\r\n        Assert.assertEquals(numberOfProductInTheListInInt, aeSearchPage.getBrandsListInBrandPage().size(),\"The number of Brands Result retrieve incorrect number\");\r\n    }\r\n    @Test(description = \"Search Page- Make sure the ability to access all brands appearing below the Brands section in the All Page\", priority = 9)\r\n    public void verifyAbilityToAccessAllBrandsListedBelowTheBrandsSectionInTheAllTabCorrectly(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n        String expectedProductURL;\r\n        this.verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen();\r\n        aeSearchPage.getAllTab().click();\r\n        for(int i=0; i<aeSearchPage.getBrandCardInProductsSection().size();i++){\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getBrandCardInProductsSection().get(i),5,webDriver);\r\n            expectedProductURL=aeSearchPage.getBrandCardInProductsSection().get(i).getAttribute(\"href\");\r\n            aeSearchPage.getBrandCardInProductsSection().get(i).click();\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedProductURL));\r\n            aeProductDetailsPage.getSearchBtn().click();\r\n            aeSearchPage.getAllTab().click();\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getBrandCardInProductsSection().get(i),3,webDriver);\r\n\r\n        }\r\n    }\r\n// Search Result\r\n    @Test(description = \"Search Page- Make sure the search result matched with what the user search for\", priority = 10)\r\n    public void verifyTheSearchResultMatchedWithWhatTheUserSearch(){\r\n        AeSearchPage aeSearchPage=new AeSearchPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.getSearchField().sendKeys(\"Basixs \");\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        for(int i=0; i<aeSearchPage.getProductsResult().size();i++){\r\n            DataHelperAndWait.waitToBeVisible(aeSearchPage.getProductsResult().get(i),3,webDriver);\r\n            aeSearchPage.getProductsResult().get(i).click();\r\n            Assert.assertTrue(aeSearchPage.getProductNameInThePDP().getText().contains(\"Basix \"),\" The product \"+ aeSearchPage.getProductNameInThePDP().getText() +\" does not contains Basixs word\");\r\n            boolean verifyTitle = webDriver.getTitle().equalsIgnoreCase(\"Sporter.com - Page Not Found\");\r\n            assertFalse(verifyTitle, \"Page Not Found Is Displayed and the URL is \"+webDriver.getCurrentUrl());\r\n            boolean isTheElementPresent = webDriver.getPageSource().contains(\"We can't find products matching the selection.\");\r\n            assertFalse(isTheElementPresent, \"The page is empty and the URL is \"+webDriver.getCurrentUrl());\r\n            boolean isExceptionPagePresent = webDriver.getPageSource().contains(\"An error has happened during application run. See exception log for details.\");\r\n            boolean isTheElementPresent2 = webDriver.getPageSource().contains(\"this offer is not available in your country\");\r\n            assertTrue(isTheElementPresent2, \"The  offer is not available in your country page is displayed \"+webDriver.getCurrentUrl());\r\n            assertFalse(isExceptionPagePresent, \"An error has happened during application run. See exception log for details in page \"+ \"The URL is\"+webDriver.getCurrentUrl());\r\n            aeProductDetailsPage.getSearchField().sendKeys(\"Basixs \");\r\n            aeProductDetailsPage.getSearchBtn().click();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeSearchPageTestCases.java b/src/test/java/sporter_test/AeSearchPageTestCases.java
--- a/src/test/java/sporter_test/AeSearchPageTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeSearchPageTestCases.java	(date 1673265422812)
@@ -25,7 +25,11 @@
             CloseInitialDialog();          }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Search","Smoke Testing Result","Critical Severity"},description = "Verify clicking on the search button will redirect the user to the search screen", priority = 1)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Verify clicking on the search icon will redirect the user to the search screen", priority = 1)
+>>>>>>> origin/master
     public void verifyClickingOnSearchIconWillRedirectUserTOTheSearchScreen() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -66,7 +70,11 @@
         }
     }
     //      The following Test Cases handle displaying the Mega Menu from search Page
+<<<<<<< HEAD
     @Test(groups = {"Search","Smoke Testing Result","Medium Severity"},description = "Search Page- Make sure all menus appearing in the Mega Menu are displayed correctly when hovering on them from Search page", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Search Page- Make sure all menus appearing in the Mega Menu are displayed correctly when hovering on them from Search page", priority = 4)
+>>>>>>> origin/master
     public void verifyAllMenusInMegaMenuAreDisplayedCorrectlyWhenHoveringOnItFromSearchPage() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -93,7 +101,11 @@
         assertTrue(aeSearchPage.getArticlesSectionInAllPage().isDisplayed(),"Articles Section in All tab is missing");
     }
     //There's a bug here due to the products list is not appear after visit the PDP then go to All search page
+<<<<<<< HEAD
     @Test(groups = {"Search","Smoke Testing Result","High Severity"},description = "Search Page- Make sure the ability to access all products appearing below the products section in the All Page", priority = 6)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Search Page- Make sure the ability to access all products appearing below the products section in the All Page", priority = 6)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllProductsListedBelowTheProductsSectionInTheAllTabCorrectly(){
         AeSearchPage aeSearchPage=new AeSearchPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage=new AeProductDetailsPage(webDriver);
Index: src/test/java/sporter_test/AeCartTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.*;\r\nimport sporter_pages.*;\r\n\r\nimport java.text.DecimalFormat;\r\nimport java.util.List;\r\nimport static org.testng.Assert.assertFalse;\r\nimport static org.testng.Assert.assertTrue;\r\n\r\npublic class AeCartTestCases extends BaseTest {\r\n\r\n    Actions action;\r\n    @Test(groups = \"Smoke Testing Result\",description = \" Cart Page- Sports Category- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure to view the cart from PDP after adding  product to it\", priority = 2)\r\n    public void viewCartFromPDP() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure that the product counter that appears in the cart page works correctly\", priority = 3)\r\n    public void verifyProductCounterAppearsInTheCartPageWorksCorrectly() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        String itemsCounter = \"(2 Items)\";\r\n        Assert.assertEquals(aeCartPage.getItemsCounterInCartPage().getText(), itemsCounter);\r\n        aeCartPage.clickOnRemoveItem();\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that the Free Gift is removed from the cart when you remove the product\", priority = 4)\r\n    public void verifyTheFreeGiftIsRemovedWhenRemovingTheProduct() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getFirstProductInTheCategoryList(), 5,webDriver);\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(aeCartPage.getFreePrice().isDisplayed());\r\n        aeCartPage.clickOnRemoveItem();\r\n        aeCartPage.clickOnRemoveItem();\r\n        Assert.assertTrue(aeCartPage.getNoItemInCartLabel().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Verify ability to remove the product from the cart successfully\", priority = 5)\r\n    public void verifyAbilityToRemoveProductFromCart() {\r\n        AeCartPage aeCartPage=new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n        aeCartPage.clickOnRemoveItem();\r\n        Assert.assertTrue(aeCartPage.getNoItemInCartLabel().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that Here Link appear after clearing the items from the Cart works successfully\", priority = 6)\r\n    public void verifyHereLinkInCartPageWorking() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n//        this.verifyAbilityToRemoveProductFromCart();\r\n        DataHelperAndWait.isDisplayed(aeCartPage.getHereLink(), 5,webDriver);\r\n        aeCartPage.clickOnHereLink();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeCartPage.aeDomain+\"/\", \"The Current URL is not matched with the AE Site URL\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure that the product counter that appears in the cart page counts the free gift correctly\", priority = 7)\r\n    public void verifyProductCounterAppearsInTheCartPageCountsFreeGifts() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.increaseTheQuantity();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n//        this.viewCartFromPDP();\r\n//        this.viewCartFromPDP();\r\n        String itemsCounter = \"(4 Items)\";\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getItemsCounterInCartPage(), 5,webDriver);\r\n        Assert.assertEquals(aeCartPage.getItemsCounterInCartPage().getText(), itemsCounter);\r\n        aeCartPage.clickOnRemoveItem();\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure to view the cart after adding more than quantity for the same product\", priority = 8)\r\n    public void verifyAbilityToViewTheCartAfterAddingMoreThanQtyOfProduct() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeCartPage.removeProductFromCart();\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.increaseTheQuantity();\r\n        Assert.assertEquals(aeProductDetailsPage.getQuantityField().getAttribute(\"value\"), \"2\");\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n    aeCartPage.clickOnRemoveItem();}\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure to view the cart after adding more than products to it\", priority = 9)\r\n    public void verifyAbilityToViewTheCartAfterAddingMoreThanProducts() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getFirstProductInTheCategoryList(), 5,webDriver);\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n    aeCartPage.clickOnRemoveItem();\r\n    aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Adding a config to the cart more than one with different simple in each time\", priority = 10)\r\n    public void verifyAbilityToViewTheCartAfterAddingMoreThanSimpleOfTheSameConfig() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.clickOnFirstsimple();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        aeProductDetailsPage.clickOnSecondimple();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        String itemsCounter = \"(2 Items)\";\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n        aeCartPage.clickOnRemoveItem();\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure ability to add bundle to the Cart\", priority = 11)\r\n    public void verifyAbilityToAddBundleToCart() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage=new AeCartPage(webDriver);\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.clickOnSearchBtn();\r\n        aeProductDetailsPage.clickOnTheProductCard();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getBundleMenu(), 5,webDriver);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the The requested qty is not available message appear when the product becomes OOS\", priority = 12)\r\n    public void verifyToDisplayRequestedQtyIsNotAvailableMsg() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.fillInQtyField(\"10000\");\r\n        aeProductDetailsPage.addToCart();\r\n        Assert.assertTrue(aeCartPage.getContinueShoppingBtn().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Verify that the ContinueShoppingBtn works correctly when displaying The requested qty is not available message\", priority = 13)\r\n    public void verifyContinueShoppingBtnWorksCorrectlyWhenTheProductBecomeOOS() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n//        aeProductDetailsPage.clickOnProductInHomePage();\r\n//        aeProductDetailsPage.fillInQtyField(\"500\");\r\n        String currentURL = webDriver.getCurrentUrl();\r\n//        aeProductDetailsPage.addToCart();\r\n        aeCartPage.clickOnTheContinueShoppingBtn();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), currentURL,\"The Current URL is not matched with the Cart URL\");\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Verify ability to increase the product quantity from Cart page from the Cart Page works successfully\", priority = 14)\r\n    public void verifyIncreaseQtyBtnInCartPageWorking() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        DataHelperAndWait.waitToBeClickable(aeCartPage.getIncreaseQtyBtn(), 5,webDriver);\r\n        aeCartPage.clickOnIncreaseQtyBtn();\r\n        Assert.assertEquals(aeCartPage.getQtyField().getAttribute(\"value\"), \"2\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Verify ability to Decrease the product quantity from Cart page from the Cart Page works successfully\", priority = 15)\r\n    public void verifyDecreaseQtyBtnInCartPageWorking() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n//        this.viewCartFromPDP();\r\n//        DataHelperAndWait.waitToBeClickable(aeCartPage.getIncreaseQtyBtn(), 5,webDriver);\r\n//        aeCartPage.clickOnIncreaseQtyBtn();\r\n        DataHelperAndWait.waitToBeClickable(aeCartPage.getDecreaseQtyBtn(), 5,webDriver);\r\n        aeCartPage.clickOnDecreaseQtyBtn();\r\n        Assert.assertEquals(aeCartPage.getQtyField().getAttribute(\"value\"), \"1\");\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Verify ability to display the product from the Cart Page works successfully\", priority = 16)\r\n    public void verifyAbilityToDisplayTheProductFromTheCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeCartPage.clickOnProductCartInCartPage();\r\n        Assert.assertNotEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeCartPage.aeDomain, \"The Current URL is not matched with the AE Site URL\");\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that the Free Gift is added correctly to the Cart\", priority = 17)\r\n    public void verifyTheFreeGiftIsAddedCorrectlyToTheCart() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(aeCartPage.getFreeFromSporterSection().isDisplayed());\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that the Free Gift does not have a price\", priority = 18)\r\n    public void verifyTheFreeGiftIsDoesNotHavePrice() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(aeCartPage.getFreePrice().isDisplayed());\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that all payment methods are appear correctly in the Cart page\", priority = 19)\r\n    public void verifyAllPaymentMethodAppearingTheCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        Assert.assertTrue(aeCartPage.getWeAcceptLabel().isDisplayed());\r\n        Assert.assertTrue(aeCartPage.getCodOption().isDisplayed());\r\n        Assert.assertTrue(aeCartPage.getCreditCardOption().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure that the Proceed to checkout button appears in the cart page works correctly\", priority = 20)\r\n    public void verifyProceedCheckoutBtnAppearsCorrectlyInCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        Assert.assertTrue(aeCartPage.getProceedCheckoutBtn().isDisplayed());\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \" Cart Page- Make sure that the order total calculation in the cart page works correctly\", priority = 21)\r\n    public void verifyOrderTotalCalculationInCartPageWorksCorrectly() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        float subTotal = DataHelperAndWait.convertTheStringToFloat(aeCartPage.getSubTotalValue());\r\n        float tax = DataHelperAndWait.convertTheStringToFloat(aeCartPage.getTaxValue());\r\n        float orderTotal = DataHelperAndWait.convertTheStringToFloat(aeCartPage.getOrderTotalValue());\r\n        float cartTotal = subTotal + tax;\r\n        Assert.assertEquals(orderTotal, cartTotal);\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Make sure that the customer can view the cart using Cart Icon\", priority = 22)\r\n    public void verifyAbilityToViewCartFromCartIcon() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        String currentURL = webDriver.getCurrentUrl() + \"#\";\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.keepShopping();\r\n        aeCartPage.clickOnCartIcon();\r\n        aeCartPage.clickOnViewCartInCartPopUp();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(cartURL),\"The Current URL is not matched with the Cart URL\");\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure that the counter-number appears in the cart pop up works correctly\", priority = 23)\r\n    public void verifyTheCounterInCartIconWorksCorrectly() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(aeCartPage.getCartCounter().getText(), \"2\");\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure that the  close icon appears in the cart pop-up works correctly\", priority = 24)\r\n    public void verifyTheCloseIconInCartPopupWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        aeCartPage.clickOnCartIcon();\r\n        aeCartPage.clickOnCartCloseIcon();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that the system does not apply invalid coupon code\", priority = 25)\r\n    public void verifyInabilityToApplyInvalidCouponCode() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeCartPage.FillInCouponCode(\"test\");\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getNotExistCouponMsg(), 5,webDriver);\r\n        Assert.assertTrue(aeCartPage.getNotExistCouponMsg().isDisplayed());\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure inability to apply coupon code without filling the code\", priority = 26)\r\n    public void verifyInabilityToApplyCouponCodeWithoutFillingTheCode() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeCartPage.FillInCouponCode(\" \");\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getRequiredCouponMsg(), 5,webDriver);\r\n        Assert.assertTrue(aeCartPage.getRequiredCouponMsg().isDisplayed());\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Make sure that the free gift is not calculated in the cart price\", priority = 27)\r\n    public void verifyTheFreeGiftIsNotCalculatedInTheCartPrice() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(aeCartPage.getFreeFromSporterSection().isDisplayed());\r\n        Assert.assertEquals(aeCartPage.getPriceInCartPage().getText(), aeCartPage.getSubTotalValue().getText());\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Make sure the tax calculate correctly\", priority = 28)\r\n    public void verifyTheTaxCalculatedCorrectly() {\r\n        DecimalFormat df = new DecimalFormat(\"0.00\");\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        float subTotal = DataHelperAndWait.convertTheStringToFloat(aeCartPage.getSubTotalValue());\r\n        float tax = subTotal * (float) (0.05);\r\n        float expectedCartTotal = subTotal + tax;\r\n        float actualCartTotal = DataHelperAndWait.convertTheStringToFloat(aeCartPage.getOrderTotalValue());\r\n        Assert.assertEquals(df.format(actualCartTotal), df.format(expectedCartTotal));\r\n        aeCartPage.clickOnRemoveItem();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Verify that the search button works correctly from the Cart Page\", priority = 29)\r\n    public void verifySearchBtnWorksCorrectlyFromCartPage() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage=new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeGuestUserPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the product price is changed when you change the quantity from the Cart Page\", priority = 30)\r\n    public void verifyProductPriceChangesWhenChangingTheProductQtyFromTheCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        String currentProductPrice = aeCartPage.getPriceInCartPage().getText();\r\n        aeCartPage.clickOnIncreaseQtyBtn();\r\n        DataHelperAndWait.refreshPage(webDriver);\r\n        String newProductPrice = aeCartPage.getPriceInCartPage().getText();\r\n        Assert.assertNotEquals(currentProductPrice, newProductPrice);\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that Make sure that complete your order, to get 100% GENUINE PRODUCTS and SUPER DELIVERY WITHIN 2 WORKING DAYS label appears in the Cart Page\", priority = 31)\r\n    public void verifyTheFreeShippingLabelAppearCorrectlyInTheCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        Assert.assertTrue(aeCartPage.getFreeShippingLabel().isDisplayed());\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the Expected delivery date field in the cart page retrieves data\", priority = 32)\r\n    public void verifyExpectedDeliveryDateRetrievesData() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        Assert.assertTrue(aeCartPage.getExpectedDeliveryDateLabel().isDisplayed());\r\n        String expectedDeliveryDate = aeCartPage.getExpectedDeliveryDateValue().getText();\r\n        Assert.assertNotNull(expectedDeliveryDate);\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure that the item-count appears in the cart pop up works correctly\", priority = 33)\r\n    public void verifyTheItemsCounterInCartPopupWorksCorrectly() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSalesAndOffersMenu();\r\n        aeProductDetailsPage.clickOnBuy1Get1Card();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertTrue(aeCartPage.getFreeFromSporterSection().isDisplayed());\r\n        aeCartPage.clickOnCartIcon();\r\n        Assert.assertEquals(aeCartPage.getItemCounterInCartPopUp().getText(), \"(2 of 2 Items )\");\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that My Shopping Cart title appears in the Cart Page\", priority = 34)\r\n    public void verifyMyShoppingCartTitleAppearCorrectlyInTheCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        Assert.assertTrue(aeCartPage.getMyShoppingCartMsg().getText().contains(\"My Shopping Cart\"));\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the system cancel the coupon code correctly\", priority = 35,enabled = false)\r\n    public void verifyAbilityToCancelTheCouponCode() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeCartPage.FillInCouponCode(freeCouponeCode);\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getUsedFreeCouponMsg(), 5,webDriver);\r\n        aeCartPage.clickOnCancelCouponCodeBtn();\r\n        Assert.assertFalse(aeCartPage.getFreeFromSporterSection().isDisplayed());\r\n        Assert.assertTrue(aeCartPage.getApplyCouponCode().isDisplayed());\r\n        aeCartPage.removeProductFromCart();\r\n    }\r\n    @Test(description = \" Cart Page- Verify that The requested qty is not available message appear when the product becomes OOS in Cart Page successfully\", priority = 36,enabled = false)\r\n    public void verifyToDisplayRequestedQtyIsNotAvailableMsgWhenProductOOSinCartPage() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n//        this.viewCartFromPDP();\r\n        aeCartPage.FillInQtyField(\"10000\");\r\n        aeCartPage.clickOnIncreaseQtyBtn();\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getQtyUnavailableMsgInCartPage(), 5,webDriver);\r\n        Assert.assertTrue(aeCartPage.getQtyUnavailableMsgInCartPage().isDisplayed());\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the customer can't add more than 2 Qty of the same product when switching to Jordan Store from Cart Page\", priority = 37,enabled = false)\r\n    public void verifyInabilityToAddMoreThan2QtyOfSameProductFromTheCartPageForJordanStore() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        WebDriverWait wait = new WebDriverWait(webDriver, 30);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.switchToJOCountry();\r\n        aeProductDetailsPage.clickOnShopeByMenu();\r\n        aeProductDetailsPage.clickOnSportsSupplementsMenu();\r\n        aeProductDetailsPage.DisplayProductInTheList(0);\r\n        aeProductDetailsPage.clickOnFirstProductFlavor();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        aeCartPage.clickOnIncreaseQtyBtn();\r\n        if (wait.until(ExpectedConditions.alertIsPresent()) != null)\r\n            webDriver.switchTo().alert().dismiss();\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the system will empty the cart after switching the country\", priority = 38,enabled = false)\r\n    public void verifyTheCartWillRemoveAllProductsAfterSwitchingTheCountry() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        aeProductDetailsPage.switchToAECountry();\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        aeProductDetailsPage.switchToJOCountry();\r\n        Assert.assertTrue(aeCartPage.getNoItemInCartLabel().isDisplayed());\r\n    }\r\n    @Test(description = \" Cart Page- Make sure that the free coupon code working fine\", priority = 39,enabled = false)\r\n    public void verifyFreeCouponCodeFunctionWorksCorrectly() {\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        this.viewCartFromPDP();\r\n        aeCartPage.FillInCouponCode(freeCouponeCode);\r\n        DataHelperAndWait.waitToBeVisible(aeCartPage.getUsedFreeCouponMsg(), 5,webDriver);\r\n        Assert.assertTrue(aeCartPage.getFreeFromSporterSection().isDisplayed());\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Make sure ability to add a bundle to the cart with all bundle options\", priority = 40)\r\n    public void verifyAbilityToAddBundleWithAllItsOptionsToCart() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.navigateToHomePage();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.clickOnSearchBtn();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getProductCard(), 5,webDriver);\r\n        aeProductDetailsPage.clickOnTheProductCard();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getBundleMenu(), 5,webDriver);\r\n        Select select = new Select(aeProductDetailsPage.getBundleMenu());\r\n        List<WebElement> elementCount = select.getOptions();\r\n        int menuSize = elementCount.size();\r\n        for (int i = 0; i < menuSize; i++) {\r\n            try {\r\n                select.selectByIndex(i);\r\n                aeProductDetailsPage.addToCart();\r\n                aeProductDetailsPage.keepShopping();\r\n            } catch (Exception e) {\r\n                aeCartPage.clickOnTheContinueShoppingBtn();\r\n            }\r\n        }\r\n        aeCartPage.clickOnCartIcon();\r\n        aeCartPage.clickOnViewCartInCartPopUp();\r\n        DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );    }\r\n\r\n    //      The following Test Cases handle displaying the Mega Menu from Product Page\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the ShopBy Menu Is Displayed When Hovering On It From Cart Page\", priority = 41)\r\n    public void verifyShopByMenuIsDisplayedWhenHoveringOnItFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        action.moveToElement(aeMegamenuPage.getShopeByMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getShopeByMenu().isDisplayed(), \"The Shope By menu is not displayed when Hovering on it from Product Page\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the Sport Supplements Menu Is Displayed When Hovering On It From Cart Page\", priority = 42)\r\n    public void verifySportSupplementsMenuIsDisplayedWhenHoveringOnItFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        action.moveToElement(aeMegamenuPage.getSportSupplementsMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getSportsSupplementsSubMenuSection().isDisplayed(), \"The Sport Supplements menu is not displayed when Hovering on it from Product Page\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the Vitamins And Health Menu Is Displayed When Hovering On It From Cart Page\", priority = 43)\r\n    public void verifyVitaminsAndHealthMenuIsDisplayedWhenHoveringOnItFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        action.moveToElement(aeMegamenuPage.getVitaminsAndHealthMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getVitaminsAndHealthSubMenuSection().isDisplayed(), \"The Vitamins And Health menu is not displayed when Hovering on it from Product Page\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the Healthy Food Menu Is Displayed When Hovering On It From Cart Page\", priority = 44)\r\n    public void verifyHealthyFoodMenuIsDisplayedWhenHoveringOnItFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        action.moveToElement(aeMegamenuPage.getHealthyFoodMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getHealthyFoodSubMenuSection().isDisplayed(), \"The Healthy Food menu is not displayed when Hovering on it from Product Page\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Verify that the Sports Menu Is Displayed When Hovering On It From Cart Page\", priority = 45)\r\n    public void verifySportsMenuIsDisplayedWhenHoveringOnItFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n        Assert.assertTrue(aeMegamenuPage.getSportsSubMenuSection().isDisplayed(), \"The Sport menu is not displayed when Hovering on it from Product Page\");\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \" Cart Page- Verify that the account Profile icon works correctly in the Cart Page\", priority = 46)\r\n    public void verifyAccountProfileIconWorksCorrectlyInCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        aeProductDetailsPage.clickOnAccountProfileIcon();\r\n        assertTrue(aeProductDetailsPage.getAccountProfileOptions().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \" Cart Page- Make sure ability to navigate to the home page by clicking on the Sporter logo from the Cart Page \", priority = 47)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeGuestUserPage.aeDomain+\"/\",\" The Current URL is not matched with the Cart URL\" );\r\n    }\r\n    @Test(groups = {\"Cart Page\",\"Smoke Testing Result\",\"High Severity\"},description = \" Cart Page- Make sure that the ability to switch to Arabic version from the cart page correctly\", priority = 48)\r\n    public void verifyAbilityToSwitchToArabicVersionFromCartPage() {\r\n        AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        AeCartPage aeCartPage = new AeCartPage(webDriver);\r\n        aeProductDetailsPage.displayTheProduct();\r\n        aeProductDetailsPage.addToCart();\r\n        aeProductDetailsPage.viewCart();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL );\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getLanguageSwitcher(), 5,webDriver);\r\n        aeProductDetailsPage.switchToArabicVersion();\r\n        DataHelperAndWait.waitToBeVisible(aeProductDetailsPage.getEnglishLangBtn(), 5,webDriver);\r\n        Assert.assertTrue(aeProductDetailsPage.getEnglishLangBtn().isDisplayed());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeCartTestCases.java b/src/test/java/sporter_test/AeCartTestCases.java
--- a/src/test/java/sporter_test/AeCartTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeCartTestCases.java	(date 1673265422641)
@@ -31,7 +31,11 @@
             webDriver.navigate().to(BasePage.BaseURL+aeDomain);
             CloseInitialDialog();          }
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure to view the cart from PDP after adding  product to it", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure to view the cart from PDP after adding  product to it", priority = 2)
+>>>>>>> origin/master
     public void viewCartFromPDP() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -41,7 +45,11 @@
         DataHelperAndWait.waitForUrlContains(aeProductDetailsPage.cartURL,webDriver,5);
         Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure that the product counter that appears in the cart page works correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the product counter that appears in the cart page works correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyProductCounterAppearsInTheCartPageWorksCorrectly() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         String itemsCounter = "(2 Items)";
@@ -49,7 +57,11 @@
         aeCartPage.clickOnRemoveItem();
         aeCartPage.clickOnRemoveItem();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that the Free Gift is removed from the cart when you remove the product", priority = 4)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the Free Gift is removed from the cart when you remove the product", priority = 4)
+>>>>>>> origin/master
     public void verifyTheFreeGiftIsRemovedWhenRemovingTheProduct() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -65,7 +77,11 @@
         aeCartPage.clickOnRemoveItem();
         Assert.assertTrue(aeCartPage.getNoItemInCartLabel().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Verify ability to remove the product from the cart successfully", priority = 5)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify ability to remove the product from the cart successfully", priority = 5)
+>>>>>>> origin/master
     public void verifyAbilityToRemoveProductFromCart() {
         AeCartPage aeCartPage=new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -76,7 +92,11 @@
         aeCartPage.clickOnRemoveItem();
         Assert.assertTrue(aeCartPage.getNoItemInCartLabel().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that Here Link appear after clearing the items from the Cart works successfully", priority = 6)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that Here Link appear after clearing the items from the Cart works successfully", priority = 6)
+>>>>>>> origin/master
     public void verifyHereLinkInCartPageWorking() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
 //        this.verifyAbilityToRemoveProductFromCart();
@@ -85,7 +105,11 @@
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeCartPage.aeDomain+"/", "The Current URL is not matched with the AE Site URL");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure that the product counter that appears in the cart page counts the free gift correctly", priority = 7)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the product counter that appears in the cart page counts the free gift correctly", priority = 7)
+>>>>>>> origin/master
     public void verifyProductCounterAppearsInTheCartPageCountsFreeGifts() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -102,7 +126,11 @@
         aeCartPage.clickOnRemoveItem();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure to view the cart after adding more than quantity for the same product", priority = 8)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure to view the cart after adding more than quantity for the same product", priority = 8)
+>>>>>>> origin/master
     public void verifyAbilityToViewTheCartAfterAddingMoreThanQtyOfProduct() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -116,7 +144,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );
     aeCartPage.clickOnRemoveItem();}
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure to view the cart after adding more than products to it", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure to view the cart after adding more than products to it", priority = 9)
+>>>>>>> origin/master
     public void verifyAbilityToViewTheCartAfterAddingMoreThanProducts() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -136,7 +168,11 @@
     aeCartPage.clickOnRemoveItem();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Adding a config to the cart more than one with different simple in each time", priority = 10)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Adding a config to the cart more than one with different simple in each time", priority = 10)
+>>>>>>> origin/master
     public void verifyAbilityToViewTheCartAfterAddingMoreThanSimpleOfTheSameConfig() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -155,7 +191,11 @@
     }
 
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure ability to add bundle to the Cart", priority = 11)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure ability to add bundle to the Cart", priority = 11)
+>>>>>>> origin/master
     public void verifyAbilityToAddBundleToCart() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage=new AeCartPage(webDriver);
@@ -169,7 +209,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );
         aeCartPage.clickOnRemoveItem();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the The requested qty is not available message appear when the product becomes OOS", priority = 12)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the The requested qty is not available message appear when the product becomes OOS", priority = 12)
+>>>>>>> origin/master
     public void verifyToDisplayRequestedQtyIsNotAvailableMsg() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -178,7 +222,11 @@
         aeProductDetailsPage.addToCart();
         Assert.assertTrue(aeCartPage.getContinueShoppingBtn().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Verify that the ContinueShoppingBtn works correctly when displaying The requested qty is not available message", priority = 13)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the ContinueShoppingBtn works correctly when displaying The requested qty is not available message", priority = 13)
+>>>>>>> origin/master
     public void verifyContinueShoppingBtnWorksCorrectlyWhenTheProductBecomeOOS() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -189,7 +237,11 @@
         aeCartPage.clickOnTheContinueShoppingBtn();
         Assert.assertEquals(webDriver.getCurrentUrl(), currentURL,"The Current URL is not matched with the Cart URL");
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Verify ability to increase the product quantity from Cart page from the Cart Page works successfully", priority = 14)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify ability to increase the product quantity from Cart page from the Cart Page works successfully", priority = 14)
+>>>>>>> origin/master
     public void verifyIncreaseQtyBtnInCartPageWorking() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         this.viewCartFromPDP();
@@ -198,7 +250,11 @@
         Assert.assertEquals(aeCartPage.getQtyField().getAttribute("value"), "2");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Verify ability to Decrease the product quantity from Cart page from the Cart Page works successfully", priority = 15)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify ability to Decrease the product quantity from Cart page from the Cart Page works successfully", priority = 15)
+>>>>>>> origin/master
     public void verifyDecreaseQtyBtnInCartPageWorking() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
 //        this.viewCartFromPDP();
@@ -208,7 +264,11 @@
         aeCartPage.clickOnDecreaseQtyBtn();
         Assert.assertEquals(aeCartPage.getQtyField().getAttribute("value"), "1");
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Verify ability to display the product from the Cart Page works successfully", priority = 16)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify ability to display the product from the Cart Page works successfully", priority = 16)
+>>>>>>> origin/master
     public void verifyAbilityToDisplayTheProductFromTheCartPage() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         this.viewCartFromPDP();
@@ -216,7 +276,11 @@
         Assert.assertNotEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeCartPage.aeDomain, "The Current URL is not matched with the AE Site URL");
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that the Free Gift is added correctly to the Cart", priority = 17)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the Free Gift is added correctly to the Cart", priority = 17)
+>>>>>>> origin/master
     public void verifyTheFreeGiftIsAddedCorrectlyToTheCart() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -230,7 +294,11 @@
         aeCartPage.clickOnRemoveItem();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that the Free Gift does not have a price", priority = 18)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the Free Gift does not have a price", priority = 18)
+>>>>>>> origin/master
     public void verifyTheFreeGiftIsDoesNotHavePrice() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -244,7 +312,11 @@
         aeCartPage.clickOnRemoveItem();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that all payment methods are appear correctly in the Cart page", priority = 19)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that all payment methods are appear correctly in the Cart page", priority = 19)
+>>>>>>> origin/master
     public void verifyAllPaymentMethodAppearingTheCartPage() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         this.viewCartFromPDP();
@@ -252,7 +324,11 @@
         Assert.assertTrue(aeCartPage.getCodOption().isDisplayed());
         Assert.assertTrue(aeCartPage.getCreditCardOption().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure that the Proceed to checkout button appears in the cart page works correctly", priority = 20)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the Proceed to checkout button appears in the cart page works correctly", priority = 20)
+>>>>>>> origin/master
     public void verifyProceedCheckoutBtnAppearsCorrectlyInCartPage() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -263,7 +339,11 @@
         Assert.assertTrue(aeCartPage.getProceedCheckoutBtn().isDisplayed());
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Critical Severity"},description = " Cart Page- Make sure that the order total calculation in the cart page works correctly", priority = 21)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the order total calculation in the cart page works correctly", priority = 21)
+>>>>>>> origin/master
     public void verifyOrderTotalCalculationInCartPageWorksCorrectly() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -278,7 +358,11 @@
         Assert.assertEquals(orderTotal, cartTotal);
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Make sure that the customer can view the cart using Cart Icon", priority = 22)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the customer can view the cart using Cart Icon", priority = 22)
+>>>>>>> origin/master
     public void verifyAbilityToViewCartFromCartIcon() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -292,7 +376,11 @@
         aeCartPage.removeProductFromCart();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure that the counter-number appears in the cart pop up works correctly", priority = 23)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the counter-number appears in the cart pop up works correctly", priority = 23)
+>>>>>>> origin/master
     public void verifyTheCounterInCartIconWorksCorrectly() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -305,7 +393,11 @@
         Assert.assertEquals(aeCartPage.getCartCounter().getText(), "2");
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure that the  close icon appears in the cart pop-up works correctly", priority = 24)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the  close icon appears in the cart pop-up works correctly", priority = 24)
+>>>>>>> origin/master
     public void verifyTheCloseIconInCartPopupWorksCorrectly() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -318,7 +410,11 @@
         aeCartPage.clickOnCartIcon();
         aeCartPage.clickOnCartCloseIcon();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that the system does not apply invalid coupon code", priority = 25)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the system does not apply invalid coupon code", priority = 25)
+>>>>>>> origin/master
     public void verifyInabilityToApplyInvalidCouponCode() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         this.viewCartFromPDP();
@@ -327,7 +423,11 @@
         Assert.assertTrue(aeCartPage.getNotExistCouponMsg().isDisplayed());
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure inability to apply coupon code without filling the code", priority = 26)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure inability to apply coupon code without filling the code", priority = 26)
+>>>>>>> origin/master
     public void verifyInabilityToApplyCouponCodeWithoutFillingTheCode() {
         AeCartPage aeCartPage = new AeCartPage(webDriver);
         this.viewCartFromPDP();
@@ -336,7 +436,11 @@
         Assert.assertTrue(aeCartPage.getRequiredCouponMsg().isDisplayed());
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Make sure that the free gift is not calculated in the cart price", priority = 27)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the free gift is not calculated in the cart price", priority = 27)
+>>>>>>> origin/master
     public void verifyTheFreeGiftIsNotCalculatedInTheCartPrice() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -351,7 +455,11 @@
         aeCartPage.clickOnRemoveItem();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Make sure the tax calculate correctly", priority = 28)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure the tax calculate correctly", priority = 28)
+>>>>>>> origin/master
     public void verifyTheTaxCalculatedCorrectly() {
         DecimalFormat df = new DecimalFormat("0.00");
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -367,7 +475,11 @@
         Assert.assertEquals(df.format(actualCartTotal), df.format(expectedCartTotal));
         aeCartPage.clickOnRemoveItem();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Verify that the search button works correctly from the Cart Page", priority = 29)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the search button works correctly from the Cart Page", priority = 29)
+>>>>>>> origin/master
     public void verifySearchBtnWorksCorrectlyFromCartPage() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -410,7 +522,11 @@
         Assert.assertNotNull(expectedDeliveryDate);
         aeCartPage.removeProductFromCart();
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure that the item-count appears in the cart pop up works correctly", priority = 33)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the item-count appears in the cart pop up works correctly", priority = 33)
+>>>>>>> origin/master
     public void verifyTheItemsCounterInCartPopupWorksCorrectly() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -487,7 +603,11 @@
         DataHelperAndWait.waitToBeVisible(aeCartPage.getUsedFreeCouponMsg(), 5,webDriver);
         Assert.assertTrue(aeCartPage.getFreeFromSporterSection().isDisplayed());
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Make sure ability to add a bundle to the cart with all bundle options", priority = 40)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure ability to add a bundle to the cart with all bundle options", priority = 40)
+>>>>>>> origin/master
     public void verifyAbilityToAddBundleWithAllItsOptionsToCart() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
@@ -515,7 +635,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(aeProductDetailsPage.cartURL) );    }
 
     //      The following Test Cases handle displaying the Mega Menu from Product Page
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the ShopBy Menu Is Displayed When Hovering On It From Cart Page", priority = 41)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the ShopBy Menu Is Displayed When Hovering On It From Cart Page", priority = 41)
+>>>>>>> origin/master
     public void verifyShopByMenuIsDisplayedWhenHoveringOnItFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -525,7 +649,11 @@
         Assert.assertTrue(aeMegamenuPage.getShopeByMenu().isDisplayed(), "The Shope By menu is not displayed when Hovering on it from Product Page");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the Sport Supplements Menu Is Displayed When Hovering On It From Cart Page", priority = 42)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the Sport Supplements Menu Is Displayed When Hovering On It From Cart Page", priority = 42)
+>>>>>>> origin/master
     public void verifySportSupplementsMenuIsDisplayedWhenHoveringOnItFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -535,7 +663,11 @@
         Assert.assertTrue(aeMegamenuPage.getSportsSupplementsSubMenuSection().isDisplayed(), "The Sport Supplements menu is not displayed when Hovering on it from Product Page");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the Vitamins And Health Menu Is Displayed When Hovering On It From Cart Page", priority = 43)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the Vitamins And Health Menu Is Displayed When Hovering On It From Cart Page", priority = 43)
+>>>>>>> origin/master
     public void verifyVitaminsAndHealthMenuIsDisplayedWhenHoveringOnItFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -545,7 +677,11 @@
         Assert.assertTrue(aeMegamenuPage.getVitaminsAndHealthSubMenuSection().isDisplayed(), "The Vitamins And Health menu is not displayed when Hovering on it from Product Page");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the Healthy Food Menu Is Displayed When Hovering On It From Cart Page", priority = 44)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the Healthy Food Menu Is Displayed When Hovering On It From Cart Page", priority = 44)
+>>>>>>> origin/master
     public void verifyHealthyFoodMenuIsDisplayedWhenHoveringOnItFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -555,7 +691,11 @@
         Assert.assertTrue(aeMegamenuPage.getHealthyFoodSubMenuSection().isDisplayed(), "The Healthy Food menu is not displayed when Hovering on it from Product Page");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Verify that the Sports Menu Is Displayed When Hovering On It From Cart Page", priority = 45)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the Sports Menu Is Displayed When Hovering On It From Cart Page", priority = 45)
+>>>>>>> origin/master
     public void verifySportsMenuIsDisplayedWhenHoveringOnItFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
@@ -565,7 +705,11 @@
         Assert.assertTrue(aeMegamenuPage.getSportsSubMenuSection().isDisplayed(), "The Sport menu is not displayed when Hovering on it from Product Page");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Medium Severity"},description = " Cart Page- Verify that the account Profile icon works correctly in the Cart Page", priority = 46)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Verify that the account Profile icon works correctly in the Cart Page", priority = 46)
+>>>>>>> origin/master
     public void verifyAccountProfileIconWorksCorrectlyInCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         webDriver.navigate().to(BasePage.BaseURL +aeProductDetailsPage.aeDomain+aeProductDetailsPage.cartURL);
@@ -573,7 +717,11 @@
         assertTrue(aeProductDetailsPage.getAccountProfileOptions().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","Low Severity"},description = " Cart Page- Make sure ability to navigate to the home page by clicking on the Sporter logo from the Cart Page ", priority = 47)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure ability to navigate to the home page by clicking on the Sporter logo from the Cart Page ", priority = 47)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {
         AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
@@ -581,7 +729,11 @@
         aeGuestUserPage.clickOnSporterLogo();
         Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeGuestUserPage.aeDomain+"/"," The Current URL is not matched with the Cart URL" );
     }
+<<<<<<< HEAD
     @Test(groups = {"Cart Page","Smoke Testing Result","High Severity"},description = " Cart Page- Make sure that the ability to switch to Arabic version from the cart page correctly", priority = 48)
+=======
+    @Test(groups = "Smoke Testing Result",description = " Cart Page- Make sure that the ability to switch to Arabic version from the cart page correctly", priority = 48)
+>>>>>>> origin/master
     public void verifyAbilityToSwitchToArabicVersionFromCartPage() {
         AeProductDetailsPage aeProductDetailsPage = new AeProductDetailsPage(webDriver);
         AeCartPage aeCartPage = new AeCartPage(webDriver);
Index: src/test/java/sporter_test/AeSportsCategoryTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport org.testng.asserts.SoftAssert;\r\nimport sporter_pages.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static org.testng.Assert.assertEquals;\r\nimport static org.testng.Assert.assertFalse;\r\n\r\npublic class AeSportsCategoryTestCases extends BaseTest {\r\n    Actions action;\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Sports Category- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Sports Category- Make sure clicking on the Sports Category Appears In MegaMenu Redirect User To CorrectURL\", priority = 1)\r\n    public void verifyClickingOnSportsCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        aeMegamenuPage.navigateToHomePage();\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeMegamenuPage.getSportsMainMenu()).perform();\r\n        aeMegamenuPage.getSportsMainMenu().click();\r\n        DataHelperAndWait.waitForUrlContains(aeMegamenuPage.sportsUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeMegamenuPage.sportsUrl));\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Sports Category- Make sure clicking on the Sports Category from ShopBy Menu Redirect User To CorrectURL\", priority = 2)\r\n    public void verifyClickingOnSportsCategoryFromShopByMenuRedirectUserToCorrectURL() {\r\n        AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        aeMegamenuPage.navigateToHomePage();\r\n        action.moveToElement(aeMegamenuPage.getShopeByMenu()).perform();\r\n        action.moveToElement(aeMegamenuPage.getSportsOption()).perform();\r\n        aeMegamenuPage.getSportsOption().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeMegamenuPage.sportsUrl));\r\n//        Assert.assertTrue(webDriver.getCurrentUrl().contains(sportsUrl));\r\n        aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Sports Category- Make sure the Footer section appears correctly in the Sports category page\", priority = 3)\r\n    public void verifyFooterSectionAppearsCorrectlyInSportsCategoryPage() {\r\n         AEFooterPage eFooterPage = new AEFooterPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(eFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Sports category page\", priority = 4)\r\n        public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSportsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Sports Category- Make sure the Got A Question blocks appears correctly in the Sports category page\", priority = 5)\r\n    public void verifyGotAQuestionSectionAppearsCorrectlyInSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(ksaHomePage.getQuestionBlock().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getPhoneBtn().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getEmailBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Sports Category- Make sure the Ability to click on email button that appears in the Got A Question section from Sports Category Page \", priority = 6)\r\n    public void verifyAbilityToClickOnEmailBtnInGotQuestionSectionFromSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        ksaHomePage.clickOnEmailBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"contacts-us\"));\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Sports Category Page \", priority = 8)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInSportsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the rotating slider section is displayed in Sports Category page correctly \", priority = 9)\r\n    public void verifyRotatingSliderIsDisplayedInTheSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(ksaHomePage.getHomePageRotatingSlider().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderList().get(i).isDisplayed());\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the next arrow of the rotating slider section is displayed in the Sports Category Page\", priority = 10)\r\n    public void verifyNextArrowOfRotatingSliderIsDisplayedInTheSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(ksaHomePage.getNextArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n        @Test(description = \"Sports Category- Make sure the previous arrow of the rotating slider section is displayed in the Sports Category Page \", priority = 11)\r\n    public void verifyPreviousArrowOfRotatingSliderIsDisplayedInTheSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n            AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n            aeSportsCategoryPage.navigateToSportsPage();\r\n            Assert.assertTrue(ksaHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the pagination control of rotating slider section is displayed in Sports Category Page\", priority = 12)\r\n    public void verifyPaginationControlOfRotatingSliderSectionIsDisplayedInTheSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingControl().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingList().get(i).isDisplayed());\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the side Banners is displayed in the Sports Category Page \", priority = 13)\r\n    public void verifySideBannersIsDisplayedInTheSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(ksaHomePage.getHomePageSideBanner().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the pagination control of rotating slider section works correctly in Sports Category Page\", priority = 14)\r\n    public void verifyPaginationControlOfRotatingSliderSectionWorksCorrectlyInTheSportsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().size(); i++) {\r\n            aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).click();\r\n            Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).getAttribute(\"class\"),\"flex-active\");\r\n        }\r\n    }\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Sports Category- Make sure the clicking on the banners appear in rotating slider section works correctly in Sports Category Page\", priority = 15)\r\n    public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheSportsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().size(); i++) {\r\n            aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).click();\r\n            aeVitaminsAndHealthCategoryPage.getBannerInRotatingSliderSection().click();\r\n            aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            webDriver.navigate().to(BasePage.BaseURL +aeVitaminsAndHealthCategoryPage.sportsUrl);\r\n        }\r\n    }\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Sports Category- Make sure the clicking on the first side banner works correctly in Sports Category Page\", priority = 16)\r\n    public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheSportsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedBannerUrl=aeVitaminsAndHealthCategoryPage.getFirstSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getFirstSideBanner().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl.substring(0,expectedBannerUrl.length()-1));\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0,expectedBannerUrl.length()-1)));\r\n    }\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"High Severity\"},description = \"Sports Category- Make sure clicking on the second side banner works correctly in Sports Category Page\", priority = 17)\r\n    public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheSportsCategoryPage() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedBannerUrl=aeVitaminsAndHealthCategoryPage.getSecondSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getSecondSideBanner().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0,expectedBannerUrl.length()-1)));\r\n    }\r\n    //Trending in Sports section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure the Trending in Sports section is displayed \", priority = 18)\r\n    public void verifyTrendingInSportsInTheSportsCategoryPageIsDisplayed() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getTrendingInSportsSectionTitle().isDisplayed());\r\n        Assert.assertTrue(aeSportsCategoryPage.getTrendingInSportsSection().isDisplayed());    }\r\n\r\n    @Test(description = \"Sports Category- Make sure the next item button appears in the Trending in Sports section works correctly \", priority = 19)\r\n    public void verifyNextButtonAppearsInTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getMensApparelCategory().isDisplayed());\r\n        Assert.assertTrue(aeSportsCategoryPage.getWomenApparelCategory().isDisplayed());\r\n        Assert.assertTrue(aeSportsCategoryPage.getYogaApparelCategory().isDisplayed());\r\n        Assert.assertTrue(aeSportsCategoryPage.getSwimmingApparelCategory().isDisplayed());\r\n        Assert.assertTrue(aeSportsCategoryPage.getMmaApparelCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        Assert.assertTrue(aeSportsCategoryPage.getCricketApparelCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        Assert.assertTrue(aeSportsCategoryPage.getToysAndGamesCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        Assert.assertTrue(aeSportsCategoryPage.getWearableTechApparelCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        aeVitaminsAndHealthCategoryPage.clickOnNextIconInShopByHealthNeedSection();\r\n        Assert.assertTrue(aeSportsCategoryPage.getPersonalCareApparelCategory().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the previous item button appears in the Trending in Sports section works correctly \", priority = 20)\r\n    public void verifyPreviousButtonAppearsInTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getMensApparelCategory().isDisplayed());\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n        DataHelperAndWait.waitToBeVisible(aeSportsCategoryPage.getPersonalCareApparelCategory(),5,webDriver);\r\n//        Assert.assertTrue(aeSportsCategoryPage.getPersonalCareApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getWearableTechApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getToysAndGamesCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getCricketApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getMmaApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getSwimmingApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getYogaApparelCategory().isDisplayed());\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        aeVitaminsAndHealthCategoryPage.clickOnPreviousIconInShopByHealthNeedSection();\r\n//        Assert.assertTrue(aeSportsCategoryPage.getWomenApparelCategory().isDisplayed());\r\n    }\r\n    //Men's Apparel section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Men's Apparel category inside Trending in Sports section works correctly \", priority = 21)\r\n    public void verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n    aeSportsCategoryPage.getMensApparelCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Men's Apparel category page \", priority = 22)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMensApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        Assert.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Men's Apparel category page \", priority = 23)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMensApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Featured option is selected by default in the Sort By menu for Men's Apparel Category Page \", priority = 24)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMensApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Men's Apparel category page  \", priority = 25)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMensApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Men's Apparel Category Page \", priority = 26)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMensApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Men's Apparel Category page \", priority = 27)\r\n    public void verifyTitleSectionAppearingCorrectlyInMensApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Apparel , Men\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Men's Apparel category page\", priority = 28)\r\n    public void verifySearchBtnWorksCorrectlyFromMensApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Men's Apparel category page is disable when the current page is page 1 \", priority = 29)\r\n    public void verifyThePreviousBtnInMensApparelCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Men's Apparel category page works correctly\", priority = 30)\r\n    public void verifyThePaginationControlInMensApparelCategoryPageWorksCorrectly(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Men's Apparel Category Page works correctly\", priority = 31)\r\n    public void verifyPreviousPageBtnInMensApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMensApparelCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Men's Apparel Category Page works correctly\", priority = 32)\r\n    public void verifyNextPageBtnInMensApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Men's Apparel category page\", priority = 33)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMensApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Men's Apparel category page\", priority = 34)\r\n    public void verifyFiltrationSectionIsDisplayedInMensApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Women's Apparel section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Women's Apparel category inside Trending in Sports section works correctly \", priority = 35)\r\n    public void verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n//        String expectedCategoryUrl=aeSportsCategoryPage.getWomenApparelCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getWomenApparelCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Women's Apparel category page \", priority = 36)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWomenApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Women's Apparel category page \", priority = 37)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWomenApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Women's Apparel Category Page \", priority = 38)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForWomenApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Women's category page  \", priority = 39)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWomenApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women's Apparel Category Page \", priority = 40)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWomenApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Women's Apparel Category page \", priority = 41)\r\n    public void verifyTitleSectionAppearingCorrectlyInWomenApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Apparel , Women\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Women's Apparel category page\", priority = 42)\r\n    public void verifySearchBtnWorksCorrectlyFromWomenApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Women's Apparel category page is disable when the current page is page 1 \", priority = 43)\r\n    public void verifyThePreviousBtnInWomenApparelCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Women's Apparel category page works correctly\", priority = 44)\r\n    public void verifyThePaginationControlInWomenApparelCategoryPageWorksCorrectly(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Women's Apparel Category Page works correctly\", priority = 45)\r\n    public void verifyPreviousPageBtnInWomenApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWomenApparelCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Women's Apparel Category Page works correctly\", priority = 46)\r\n    public void verifyNextPageBtnInWomenApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Women's Apparel category page\", priority = 47)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWomenApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Women's Apparel category page\", priority = 48)\r\n    public void verifyFiltrationSectionIsDisplayedInWomenApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Yoga section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Yoga Apparel category inside Trending in Sports section works correctly \", priority = 49)\r\n    public void verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n//        String expectedCategoryUrl=aeSportsCategoryPage.getYogaApparelCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getYogaApparelCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Yoga Apparel category page \", priority = 50)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheYogaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Yoga Apparel category page \", priority = 51)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheYogaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Yoga Apparel Category Page \", priority = 52)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForYogaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Yoga category page  \", priority = 53)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInYogaApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Yoga Apparel Category Page \", priority = 54)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInYogaApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Yoga Apparel Category page \", priority = 55)\r\n    public void verifyTitleSectionAppearingCorrectlyInYogaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Yoga, Sport\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Yoga Apparel category page\", priority = 56)\r\n    public void verifySearchBtnWorksCorrectlyFromYogaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Yoga Apparel category page is disable when the current page is page 1 \", priority = 57)\r\n    public void verifyThePreviousBtnInYogaApparelCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Yoga Apparel category page works correctly\", priority = 58)\r\n    public void verifyThePaginationControlInYogaApparelCategoryPageWorksCorrectly(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else {\r\n            aeSportSupplementsCategoryPage.navigateToPage2();\r\n            DataHelperAndWait.waitForUrlContains(\"p=2\", webDriver, 5);\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Yoga Apparel Category Page works correctly\", priority = 59)\r\n    public void verifyPreviousPageBtnInYogaApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInYogaApparelCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Yoga Apparel Category Page works correctly\", priority = 60)\r\n    public void verifyNextPageBtnInYogaApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Yoga Apparel category page\", priority = 61)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInYogaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Yoga Apparel category page\", priority = 62)\r\n    public void verifyFiltrationSectionIsDisplayedInYogaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Swimming section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Swimming Apparel category inside Trending in Sports section works correctly \", priority = 63)\r\n    public void verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n//        String expectedCategoryUrl=aeSportsCategoryPage.getSwimmingApparelCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getSwimmingApparelCategory().click();\r\n        aeSportsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Swimming Apparel category page \", priority = 64)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSwimmingApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Swimming Apparel category page \", priority = 65)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSwimmingApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Swimming Apparel Category Page \", priority = 66)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForSwimmingApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Swimming category page  \", priority = 67)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSwimmingApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Swimming Apparel Category Page \", priority = 68)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSwimmingApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Swimming Apparel Category page \", priority = 69)\r\n    public void verifyTitleSectionAppearingCorrectlyInSwimmingApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Swimming, Sport\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Swimming Apparel category page\", priority = 70)\r\n    public void verifySearchBtnWorksCorrectlyFromSwimmingApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Swimming Apparel category page is disable when the current page is page 1 \", priority = 71)\r\n    public void verifyThePreviousBtnInSwimmingApparelCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Swimming Apparel category page works correctly\", priority = 72)\r\n    public void verifyThePaginationControlInSwimmingApparelCategoryPageWorksCorrectly(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Swimming Apparel Category Page works correctly\", priority = 73)\r\n    public void verifyPreviousPageBtnInSwimmingApparelCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInSwimmingApparelCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Swimming Apparel Category Page works correctly\", priority = 74)\r\n    public void verifyNextPageBtnInSwimmingApparelCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Swimming Apparel category page\", priority = 75)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSwimmingApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Swimming Apparel category page\", priority = 76)\r\n    public void verifyFiltrationSectionIsDisplayedInSwimmingApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Mma section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Mma Apparel category inside Trending in Sports section works correctly \", priority = 77)\r\n    public void verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getMmaApparelCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getMmaApparelCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Mma Apparel category page \", priority = 78)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMmaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Mma Apparel category page \", priority = 79)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMmaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Mma Apparel Category Page \", priority = 80)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForMmaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Mma category page  \", priority = 81)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMmaApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Mma Apparel Category Page \", priority = 82)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMmaApparelCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Mma Apparel Category page \", priority = 83)\r\n    public void verifyTitleSectionAppearingCorrectlyInMmaApparelCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Mma, Sport\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Mma Apparel category page\", priority = 84)\r\n    public void verifySearchBtnWorksCorrectlyFromMmaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Mma Apparel category page is disable when the current page is page 1 \", priority = 85)\r\n    public void verifyThePreviousBtnInMmaApparelCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Mma Apparel category page works correctly\", priority = 86)\r\n    public void verifyThePaginationControlInMmaApparelCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Mma Apparel Category Page works correctly\", priority = 87)\r\n    public void verifyPreviousPageBtnInMmaApparelCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInMmaApparelCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Mma Apparel Category Page works correctly\", priority = 88)\r\n    public void verifyNextPageBtnInMmaApparelCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Mma Apparel category page\", priority = 89)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMmaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Mma Apparel category page\", priority = 90)\r\n    public void verifyFiltrationSectionIsDisplayedInMmaApparelCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Cricket section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Cricket category inside Trending in Sports section works correctly \", priority = 91)\r\n    public void verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n//        String expectedCategoryUrl=aeSportsCategoryPage.getCricketApparelCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.clickOnCricketCategory(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl);\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Cricket category page \", priority = 92)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheCricketCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Cricket category page \", priority = 93)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheCricketCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Cricket Category Page \", priority = 94)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForCricketCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Cricket category page  \", priority = 95)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInCricketCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Cricket Category Page \", priority = 96)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInCricketCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Cricket Category page \", priority = 97)\r\n    public void verifyTitleSectionAppearingCorrectlyInCricketCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Cricket, Sport\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Cricket category page\", priority = 98)\r\n    public void verifySearchBtnWorksCorrectlyFromCricketCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Cricket category page is disable when the current page is page 1 \", priority = 99)\r\n    public void verifyThePreviousBtnInCricketCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Cricket category page works correctly\", priority = 100)\r\n    public void verifyThePaginationControlInCricketCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Cricket Category Page works correctly\", priority = 101)\r\n    public void verifyPreviousPageBtnInCricketCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInCricketCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Cricket Category Page works correctly\", priority = 102)\r\n    public void verifyNextPageBtnInCricketCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Cricket category page\", priority = 103)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInCricketCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Cricket category page\", priority = 104)\r\n    public void verifyFiltrationSectionIsDisplayedInCricketCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    //Toys And Games section Test Cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Toys And Games category inside Trending in Sports section works correctly \", priority = 105)\r\n    public void verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.clickOnToysAndGamesCategory(webDriver);\r\n        aeSportsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        DataHelperAndWait.waitForUrlContains(aeSportsCategoryPage.toysAndGamesUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeSportsCategoryPage.toysAndGamesUrl));\r\n        aeSportsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Toys And Games category page \", priority = 106)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheToysAndGamesCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Toys And Games category page \", priority = 107)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheToysAndGamesCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Featured option is selected by default in the Sort By menu for Toys And Games Category Page \", priority = 108)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForToysAndGamesCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Toys And Games category page  \", priority = 109)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInToysAndGamesCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Toys And Games Category Page \", priority = 110)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInToysAndGamesCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Toys And Games Category page \", priority = 111)\r\n    public void verifyTitleSectionAppearingCorrectlyInToysAndGamesCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Toys And Games, Kids\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Toys And Games category page\", priority = 112)\r\n    public void verifySearchBtnWorksCorrectlyFromToysAndGamesCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Toys And Games category page is disable when the current page is page 1 \", priority = 113)\r\n    public void verifyThePreviousBtnInToysAndGamesCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Toys And Games category page works correctly\", priority = 114)\r\n    public void verifyThePaginationControlInToysAndGamesCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Toys And Games Category Page works correctly\", priority = 115)\r\n    public void verifyPreviousPageBtnInToysAndGamesCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInToysAndGamesCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Toys And Games Category Page works correctly\", priority = 116)\r\n    public void verifyNextPageBtnInToysAndGamesCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Toys And Games category page\", priority = 117)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInToysAndGamesCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Toys And Games category page\", priority = 118)\r\n    public void verifyFiltrationSectionIsDisplayedInToysAndGamesCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    // Wearable Tech section test  cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Wearable Tech category inside Trending in Sports section works correctly \", priority = 119)\r\n    public void verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.clickOnWearableTechApparelCategory(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        DataHelperAndWait.waitForUrlContains(aeSportsCategoryPage.wearableTechUrl,webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(aeSportsCategoryPage.wearableTechUrl));\r\n        aeSportsCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Wearable Tech category page \", priority = 120)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWearableTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Wearable Tech category page \", priority = 121)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWearableTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Wearable Tech Category Page \", priority = 122)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForWearableTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Wearable Tech category page  \", priority = 123)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWearableTechCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Wearable Tech Category Page \", priority = 124)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWearableTechCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Wearable Tech Category page \", priority = 125)\r\n    public void verifyTitleSectionAppearingCorrectlyInWearableTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Wearable Tech, Sports Tech\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Wearable Tech category page\", priority = 126)\r\n    public void verifySearchBtnWorksCorrectlyFromWearableTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Wearable Tech category page is disable when the current page is page 1 \", priority = 127)\r\n    public void verifyThePreviousBtnInWearableTechCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Wearable Tech category page works correctly\", priority = 128)\r\n    public void verifyThePaginationControlInWearableTechCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.navigateToPage3();\r\n        DataHelperAndWait.waitForTime(3000);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Wearable Tech Category Page works correctly\", priority = 129)\r\n    public void verifyPreviousPageBtnInWearableTechCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInWearableTechCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Wearable Tech Category Page works correctly\", priority = 130)\r\n    public void verifyNextPageBtnInWearableTechCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Wearable Tech category page\", priority = 131)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWearableTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Wearable Tech category page\", priority = 132)\r\n    public void verifyFiltrationSectionIsDisplayedInWearableTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n    // Personal Care section test  cases\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure clicking on the Personal Care category inside Trending in Sports section works correctly \", priority = 133)\r\n    public void verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.clickOnPersonalCareCategory(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Personal Care category page \", priority = 134)\r\n    public void verifyResultFieldAndItsVaLueAppearInThePersonalCareCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Personal Care category page \", priority = 135)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInThePersonalCareCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Personal Care Category Page \", priority = 136)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForPersonalCareCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Personal Care category page  \", priority = 137)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInPersonalCareCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Personal Care Category Page \", priority = 138)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInPersonalCareCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Personal Care Category page \", priority = 139)\r\n    public void verifyTitleSectionAppearingCorrectlyInPersonalCareCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Personal Care, Men\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Personal Care category page\", priority = 140)\r\n    public void verifySearchBtnWorksCorrectlyFromPersonalCareCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Personal Care category page is disable when the current page is page 1 \", priority = 141)\r\n    public void verifyThePreviousBtnInPersonalCareCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Personal Care category page works correctly\", priority = 142)\r\n    public void verifyThePaginationControlInPersonalCareCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Personal Care Category Page works correctly\", priority = 143)\r\n    public void verifyPreviousPageBtnInPersonalCareCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPersonalCareCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Personal Care Category Page works correctly\", priority = 144)\r\n    public void verifyNextPageBtnInPersonalCareCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Personal Care category page\", priority = 145)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInPersonalCareCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Personal Care category page\", priority = 146)\r\n    public void verifyFiltrationSectionIsDisplayedInPersonalCareCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Men Category Test Cases\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure Men category section is displayed in the Sports Category Page \", priority = 147)\r\n    public void verifyMenCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getMenCategory().isDisplayed());\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the Men category from the Sports category Page works correctly \", priority = 148)\r\n    public void verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getMenCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getMenCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl.toLowerCase());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Men category page \", priority = 149)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Men category page \", priority = 150)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Featured option is selected by default in the Sort By menu for Men Category Page \", priority = 151)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForMenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Men category page  \", priority = 152)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMenCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Men Category Page \", priority = 153)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMenCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Men Category page \", priority = 154)\r\n    public void verifyTitleSectionAppearingCorrectlyInMenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Men, Sports\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Men category page\", priority = 155)\r\n    public void verifySearchBtnWorksCorrectlyFromMenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Men category page is disable when the current page is page 1 \", priority = 156)\r\n    public void verifyThePreviousBtnInMenCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Men category page works correctly\", priority = 157)\r\n    public void verifyThePaginationControlInMenCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Men Category Page works correctly\", priority = 158)\r\n    public void verifyPreviousPageBtnInMenCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMenCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Men Category Page works correctly\", priority = 159)\r\n    public void verifyNextPageBtnInMenCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Men category page\", priority = 160)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Men category page\", priority = 161)\r\n    public void verifyFiltrationSectionIsDisplayedInMenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Women Category Test Cases\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure Women category section is displayed in the Sports Category Page \", priority = 162)\r\n    public void verifyWomenCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getWomenCategory().isDisplayed());\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the Women category from the Sports category Page works correctly \", priority = 163)\r\n    public void verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getWomenCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getWomenCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl.toLowerCase());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Women category page \", priority = 164)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWomenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Women category page \", priority = 165)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWomenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Featured option is selected by default in the Sort By menu for Women Category Page \", priority = 166)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForWomenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Women category page  \", priority = 167)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWomenCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women Category Page \", priority = 168)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWomenCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Women Category page \", priority = 169)\r\n    public void verifyTitleSectionAppearingCorrectlyInWomenCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Women, Sports\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Women category page\", priority = 170)\r\n    public void verifySearchBtnWorksCorrectlyFromWomenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Women category page is disable when the current page is page 1 \", priority = 171)\r\n    public void verifyThePreviousBtnInWomenCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Women category page works correctly\", priority = 172)\r\n    public void verifyThePaginationControlInWomenCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Women Category Page works correctly\", priority = 173)\r\n    public void verifyPreviousPageBtnInWomenCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWomenCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Women Category Page works correctly\", priority = 174)\r\n    public void verifyNextPageBtnInWomenCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Women category page\", priority = 175)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWomenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Women category page\", priority = 176)\r\n    public void verifyFiltrationSectionIsDisplayedInWomenCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n//Sports Tech Category Test Cases\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure Sports Tech category section is displayed in the Sports Category Page \", priority = 177)\r\n    public void verifySportsTechCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getSportsTechCategory().isDisplayed());\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the Sports Tech category from the Sports category Page works correctly \", priority = 178)\r\n    public void verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getSportsTechCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getSportsTechCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl.toLowerCase());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Sports Tech category page \", priority = 179)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSportsTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Sports Tech category page \", priority = 180)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSportsTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Sports Tech Category Page \", priority = 181)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForSportsTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Sports Tech category page  \", priority = 182)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSportsTechCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Sports Tech Category Page \", priority = 183)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSportsTechCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Sports Tech Category page \", priority = 184)\r\n    public void verifyTitleSectionAppearingCorrectlyInSportsTechCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Sports Tech, Sports\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Sports Tech category page\", priority = 185)\r\n    public void verifySearchBtnWorksCorrectlyFromSportsTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Sports Tech category page is disable when the current page is page 1 \", priority = 186)\r\n    public void verifyThePreviousBtnInSportsTechCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Sports Tech category page works correctly\", priority = 187)\r\n    public void verifyThePaginationControlInSportsTechCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Sports Tech Category Page works correctly\", priority = 188)\r\n    public void verifyPreviousPageBtnInSportsTechCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSportsTechCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Sports Tech Category Page works correctly\", priority = 189)\r\n    public void verifyNextPageBtnInSportsTechCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Sports Tech category page\", priority = 190)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSportsTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Sports Tech category page\", priority = 191)\r\n    public void verifyFiltrationSectionIsDisplayedInSportsTechCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Kids Category Test Cases\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure Kids category section is displayed in the Sports Category Page \", priority = 192)\r\n    public void verifyKidsCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getKidsCategory().isDisplayed());\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the Kids category from the Sports category Page works correctly \", priority = 193)\r\n    public void verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getKidsCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getKidsCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl.toLowerCase());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Kids category page \", priority = 194)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheKidsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Kids category page \", priority = 195)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheKidsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Featured option is selected by default in the Sort By menu for Kids Category Page \", priority = 196)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForKidsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Kids category page  \", priority = 197)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInKidsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Kids Category Page \", priority = 198)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInKidsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Kids Category page \", priority = 199)\r\n    public void verifyTitleSectionAppearingCorrectlyInKidsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Kids, Sports\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Kids category page\", priority = 200)\r\n    public void verifySearchBtnWorksCorrectlyFromKidsCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Kids category page is disable when the current page is page 1 \", priority = 201)\r\n    public void verifyThePreviousBtnInKidsCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Kids category page works correctly\", priority = 202)\r\n    public void verifyThePaginationControlInKidsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Kids Category Page works correctly\", priority = 203)\r\n    public void verifyPreviousPageBtnInKidsCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInKidsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Kids Category Page works correctly\", priority = 204)\r\n    public void verifyNextPageBtnInKidsCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Kids category page\", priority = 205)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInKidsCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Kids category page\", priority = 206)\r\n    public void verifyFiltrationSectionIsDisplayedInKidsCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n\r\n    //Sports Category Test Cases\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure Sports category section is displayed in the Sports Category Page \", priority = 207)\r\n    public void verifySportsCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertTrue(aeSportsCategoryPage.getSportsCategory().isDisplayed());\r\n\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the Sports category from the Sports category Page works correctly \", priority = 208)\r\n    public void verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        String expectedCategoryUrl=aeSportsCategoryPage.getSportsCategory().getAttribute(\"href\");\r\n        aeSportsCategoryPage.getSportsCategory().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl(),expectedCategoryUrl.toLowerCase());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the Result label and its value appear correctly in the Sports category page \", priority = 209)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSportsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n    //There's a bug here - some filtration options are missing\r\n    @Test(description = \"Sports Category- Make sure that Sort By menu and its options appear correctly in the Sports category page \", priority = 210)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSportsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \"+options.get(i).getText()+\"  Expected: \"+expectedOption.get(i));\r\n        }\r\n    }\r\n    //There's a bug here\r\n    @Test(description = \"Sports Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Sports Category Page \", priority = 211)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForSportsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Horizontal Category Image appears correctly in the Sports category page  \", priority = 212)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSportsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Sports Category Page \", priority = 213)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSportsCategoryPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\");\r\n    }\r\n    @Test(description = \"Sports Category- Make sure each of the title section appears correctly in the Sports Category page \", priority = 214)\r\n    public void verifyTitleSectionAppearingCorrectlyInSportsCategoryPage(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Sport, Sports\", \"Wrong title appears in the sport Supplements category image\");\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the search button works correctly from the Sports category page\", priority = 215)\r\n    public void verifySearchBtnWorksCorrectlyFromSportsCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeProductDetailsPage aeProductDetailsPage= new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"Sports Category- Verify that the previous page button in the Sports category page is disable when the current page is page 1 \", priority = 216)\r\n    public void verifyThePreviousBtnInSportsCategoryPageIsDisableWhenDisplayPage1(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n\r\n    @Test(description = \"Sports Category- Make Sure the Pagination control in the Sports category page works correctly\", priority = 217)\r\n    public void verifyThePaginationControlInSportsCategoryPageWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make Sure the previous page button In Sports Category Page works correctly\", priority = 218)\r\n    public void verifyPreviousPageBtnInSportsCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    //There's a performance issue when clicking on the previous button\r\n    @Test(description = \"Sports Category- Make Sure the next page button In Sports Category Page works correctly\", priority = 219)\r\n    public void verifyNextPageBtnInSportsCategoryPageWorksCorrectly() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Sports category page\", priority = 220)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSportsSectionPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage.navigateToHomePage();\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeSportSupplementsCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeSportSupplementsCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeSportSupplementsCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Filtration Section is displayed in the Sports category page\", priority = 221)\r\n    public void verifyFiltrationSectionIsDisplayedInSportsCategoryPage(){\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage=new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}\r\n\r\n    //Recommended Products Test Cases section\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make sure the Recommended Products section is displayed in the Sports Category Page \", priority = 222)\r\n    public void verifyRecommendedProductsSectionIsDisplayedInTheSportsSection() {\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertEquals(aeSportsCategoryPage.getRecommendedProductsTitleSection().getText(),\"Recommended Products\",\"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeSportsCategoryPage.getRecommendedProductsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the previous arrow icon is not appear by default in the Recommended Products section \", priority = 223)\r\n    public void verifyPreviousArrowButtonInRecommendedProductsSectionIsNotDisplayedByDefault() {\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        Assert.assertFalse(aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on Next Button in the Recommended Products section works correctly\", priority = 224,enabled = false)\r\n    public void verifyClickingOnNextIconInRecommendedProductsSectionWorksCorrectly() {\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.getNextIconInRecommendedProductsSection().click();\r\n        Assert.assertTrue(aeSportsCategoryPage.getLastProductInRecommendedProductsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on Previous Button in the Recommended Products section works correctly\", priority = 225,enabled = false)\r\n    public void verifyClickingOnPreviousIconInRecommendedProductsSectionWorksCorrectly() {\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.getNextIconInRecommendedProductsSection().click();\r\n        aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().click();\r\n        Assert.assertFalse(aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Sports Category- Make sure clicking on the product card in the Recommended Products section works correctly \", priority = 226)\r\n    public void verifyClickingOnProductCardInsideRecommendedProductsSectionWorksCorrectly() {\r\n        AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        aeSportsCategoryPage.getProductCardInRecommendedProductsSection().click();\r\n        aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    //Pagination control for all pages in the Sports Category Pages\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Mens Apparel Category Page \", priority = 227)\r\n    public void verifyAbilityToAccessAllPagesInsideMensApparelCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Women's Apparel Category Page \", priority = 228)\r\n    public void verifyAbilityToAccessAllPagesInsideWomenApparelCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Yoga Apparel Category Page \", priority = 229)\r\n    public void verifyAbilityToAccessAllPagesInsideYogaApparelCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n            String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                     if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Swimming Category Page \", priority = 230)\r\n    public void verifyAbilityToAccessAllPagesInsideSwimmingCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Mma Category Page \", priority = 231)\r\n    public void verifyAbilityToAccessAllPagesInsideMmaCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Cricket Category Page \", priority = 232)\r\n    public void verifyAbilityToAccessAllPagesInsideCricketCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Toys And Games Category Page \", priority = 233)\r\n    public void verifyAbilityToAccessAllPagesInsideToysAndGamesCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Wearable Tech Category Page \", priority = 234)\r\n    public void verifyAbilityToAccessAllPagesInsideWearableTechCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Personal Care Category Page \", priority = 235)\r\n    public void verifyAbilityToAccessAllPagesInsidePersonalCareCategoryPageCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Men Category From Sports Category Page  \", priority = 236)\r\n    public void verifyAbilityToAccessAllPagesInsideMenCategoryFromSportsCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Women Category From Sports Category Page  \", priority = 237)\r\n    public void verifyAbilityToAccessAllPagesInsideWomenCategoryFromSportsCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Sports Tech Category From Sports Category Page  \", priority = 238)\r\n    public void verifyAbilityToAccessAllPagesInsideSportsTechCategoryFromSportsCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n\r\n    @Test(groups = {\"Sports Category\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"Sports Category- Make Sure the ability to access all pages inside Kids Category From Sports Category Page  \", priority = 239)\r\n    public void verifyAbilityToAccessAllPagesInsideKidsCategoryFromSportsCategoryPageWorksCorrectly(){\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n                 if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList)) \r\n             System.out.println(\"There's no pages\");\r\n        else\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}\r\n    @Test(description = \"Sports Category- Make sure ability to navigate to the home page by clicking on the sporter logo  \", priority = 240)\r\n    public void verifyAbilityToNavigateToHomePageByClickingOnSporterLogoFromCartPage() {\r\n        AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        AEGuestUserPage aeGuestUserPage = new AEGuestUserPage(webDriver);\r\n        this.verifyClickingOnSportsCategoryFromShopByMenuRedirectUserToCorrectURL();\r\n        aeGuestUserPage.clickOnSporterLogo();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BasePage.BaseURL +aeSportSupplementsCategoryPage.aeDomain+\"/\",\" The Current URL is not matched with the Cart URL\" );\r\n    }\r\n    @Test(description = \"Sports Category- Make sure the Ability to click on phone button that appears in the Got A Question section correctly from Sports Category Page \", priority = 241)\r\n    public void verifyAbilityToClickOnPhoneBtnInGotQuestionSectionFromSportsCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);\r\n        aeSportsCategoryPage.navigateToSportsPage();\r\n        ksaHomePage.clickOnPhoneBtn();\r\n        // store window handles in Set\r\n//        String myWindowHandle = webDriver.getWindowHandle();\r\n//        webDriver.switchTo().window(myWindowHandle);\r\n//        webDriver.switchTo().alert().dismiss();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeSportsCategoryTestCases.java b/src/test/java/sporter_test/AeSportsCategoryTestCases.java
--- a/src/test/java/sporter_test/AeSportsCategoryTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeSportsCategoryTestCases.java	(date 1673265422885)
@@ -30,7 +30,11 @@
             webDriver.navigate().to(BasePage.BaseURL+aeDomain);
             CloseInitialDialog();          }
     }
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Critical Severity"},description = "Sports Category- Make sure clicking on the Sports Category Appears In MegaMenu Redirect User To CorrectURL", priority = 1)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Sports Category Appears In MegaMenu Redirect User To CorrectURL", priority = 1)
+>>>>>>> origin/master
     public void verifyClickingOnSportsCategoryAppearsInMegaMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         aeMegamenuPage.navigateToHomePage();
@@ -42,7 +46,11 @@
         aeMegamenuPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Critical Severity"},description = "Sports Category- Make sure clicking on the Sports Category from ShopBy Menu Redirect User To CorrectURL", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Sports Category from ShopBy Menu Redirect User To CorrectURL", priority = 2)
+>>>>>>> origin/master
     public void verifyClickingOnSportsCategoryFromShopByMenuRedirectUserToCorrectURL() {
         AEMegaMenuPage aeMegamenuPage = new AEMegaMenuPage(webDriver);
         action = new Actions(webDriver);
@@ -164,7 +172,11 @@
             Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).getAttribute("class"),"flex-active");
         }
     }
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","High Severity"},description = "Sports Category- Make sure the clicking on the banners appear in rotating slider section works correctly in Sports Category Page", priority = 15)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure the clicking on the banners appear in rotating slider section works correctly in Sports Category Page", priority = 15)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheSportsCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -176,7 +188,11 @@
             webDriver.navigate().to(BasePage.BaseURL +aeVitaminsAndHealthCategoryPage.sportsUrl);
         }
     }
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","High Severity"},description = "Sports Category- Make sure the clicking on the first side banner works correctly in Sports Category Page", priority = 16)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure the clicking on the first side banner works correctly in Sports Category Page", priority = 16)
+>>>>>>> origin/master
     public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheSportsCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -187,7 +203,11 @@
 //        assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl.substring(0,expectedBannerUrl.length()-1));
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0,expectedBannerUrl.length()-1)));
     }
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","High Severity"},description = "Sports Category- Make sure clicking on the second side banner works correctly in Sports Category Page", priority = 17)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the second side banner works correctly in Sports Category Page", priority = 17)
+>>>>>>> origin/master
     public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheSportsCategoryPage() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -198,7 +218,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0,expectedBannerUrl.length()-1)));
     }
     //Trending in Sports section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure the Trending in Sports section is displayed ", priority = 18)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure the Trending in Sports section is displayed ", priority = 18)
+>>>>>>> origin/master
     public void verifyTrendingInSportsInTheSportsCategoryPageIsDisplayed() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -267,7 +291,11 @@
 //        Assert.assertTrue(aeSportsCategoryPage.getWomenApparelCategory().isDisplayed());
     }
     //Men's Apparel section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Men's Apparel category inside Trending in Sports section works correctly ", priority = 21)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Men's Apparel category inside Trending in Sports section works correctly ", priority = 21)
+>>>>>>> origin/master
     public void verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -405,7 +433,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 
     //Women's Apparel section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Women's Apparel category inside Trending in Sports section works correctly ", priority = 35)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Women's Apparel category inside Trending in Sports section works correctly ", priority = 35)
+>>>>>>> origin/master
     public void verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -542,7 +574,11 @@
         this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Yoga section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Yoga Apparel category inside Trending in Sports section works correctly ", priority = 49)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Yoga Apparel category inside Trending in Sports section works correctly ", priority = 49)
+>>>>>>> origin/master
     public void verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -696,7 +732,11 @@
         this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Swimming section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Swimming Apparel category inside Trending in Sports section works correctly ", priority = 63)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Swimming Apparel category inside Trending in Sports section works correctly ", priority = 63)
+>>>>>>> origin/master
     public void verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -840,7 +880,11 @@
         this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Mma section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Mma Apparel category inside Trending in Sports section works correctly ", priority = 77)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Mma Apparel category inside Trending in Sports section works correctly ", priority = 77)
+>>>>>>> origin/master
     public void verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -996,7 +1040,11 @@
         this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Cricket section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Cricket category inside Trending in Sports section works correctly ", priority = 91)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Cricket category inside Trending in Sports section works correctly ", priority = 91)
+>>>>>>> origin/master
     public void verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -1152,7 +1200,11 @@
         this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     //Toys And Games section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Toys And Games category inside Trending in Sports section works correctly ", priority = 105)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Toys And Games category inside Trending in Sports section works correctly ", priority = 105)
+>>>>>>> origin/master
     public void verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -1294,7 +1346,11 @@
         this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     // Wearable Tech section test  cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Wearable Tech category inside Trending in Sports section works correctly ", priority = 119)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Wearable Tech category inside Trending in Sports section works correctly ", priority = 119)
+>>>>>>> origin/master
     public void verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -1439,7 +1495,11 @@
         this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
     // Personal Care section test  cases
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure clicking on the Personal Care category inside Trending in Sports section works correctly ", priority = 133)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure clicking on the Personal Care category inside Trending in Sports section works correctly ", priority = 133)
+>>>>>>> origin/master
     public void verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly() {
         AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage= new AeVitaminsAndHealthCategoryPage(webDriver);
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
@@ -1580,7 +1640,11 @@
 
     //Men Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure Men category section is displayed in the Sports Category Page ", priority = 147)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure Men category section is displayed in the Sports Category Page ", priority = 147)
+>>>>>>> origin/master
     public void verifyMenCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -1730,7 +1794,11 @@
 
     //Women Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure Women category section is displayed in the Sports Category Page ", priority = 162)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure Women category section is displayed in the Sports Category Page ", priority = 162)
+>>>>>>> origin/master
     public void verifyWomenCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -1880,7 +1948,11 @@
         Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());}
 //Sports Tech Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure Sports Tech category section is displayed in the Sports Category Page ", priority = 177)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure Sports Tech category section is displayed in the Sports Category Page ", priority = 177)
+>>>>>>> origin/master
     public void verifySportsTechCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -2030,7 +2102,11 @@
 
     //Kids Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure Kids category section is displayed in the Sports Category Page ", priority = 192)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure Kids category section is displayed in the Sports Category Page ", priority = 192)
+>>>>>>> origin/master
     public void verifyKidsCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -2181,7 +2257,11 @@
 
     //Sports Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure Sports category section is displayed in the Sports Category Page ", priority = 207)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure Sports category section is displayed in the Sports Category Page ", priority = 207)
+>>>>>>> origin/master
     public void verifySportsCategorySectionIsDisplayedCorrectlyInTheSportsCategoryPage(){
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -2331,7 +2411,11 @@
 
     //Recommended Products Test Cases section
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make sure the Recommended Products section is displayed in the Sports Category Page ", priority = 222)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make sure the Recommended Products section is displayed in the Sports Category Page ", priority = 222)
+>>>>>>> origin/master
     public void verifyRecommendedProductsSectionIsDisplayedInTheSportsSection() {
         AeSportsCategoryPage aeSportsCategoryPage=new AeSportsCategoryPage(webDriver);
         aeSportsCategoryPage.navigateToSportsPage();
@@ -2368,7 +2452,11 @@
         aeVitaminsAndHealthCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
     //Pagination control for all pages in the Sports Category Pages
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Mens Apparel Category Page ", priority = 227)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Mens Apparel Category Page ", priority = 227)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideMensApparelCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnMensApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2378,7 +2466,11 @@
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);
     }
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Women's Apparel Category Page ", priority = 228)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Women's Apparel Category Page ", priority = 228)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideWomenApparelCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnWomenApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2387,7 +2479,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Yoga Apparel Category Page ", priority = 229)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Yoga Apparel Category Page ", priority = 229)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideYogaApparelCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnYogaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2396,7 +2492,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Swimming Category Page ", priority = 230)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Swimming Category Page ", priority = 230)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideSwimmingCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnSwimmingApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2405,7 +2505,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Mma Category Page ", priority = 231)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Mma Category Page ", priority = 231)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideMmaCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnMmaApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2414,7 +2518,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Cricket Category Page ", priority = 232)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Cricket Category Page ", priority = 232)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideCricketCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnCricketApparelCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2423,7 +2531,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Toys And Games Category Page ", priority = 233)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Toys And Games Category Page ", priority = 233)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideToysAndGamesCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnToysAndGamesCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2432,7 +2544,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Wearable Tech Category Page ", priority = 234)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Wearable Tech Category Page ", priority = 234)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideWearableTechCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnWearableTechCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2441,7 +2557,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Personal Care Category Page ", priority = 235)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Personal Care Category Page ", priority = 235)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsidePersonalCareCategoryPageCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnPersonalCareCategoryInsideTheTrendingInSportsSectionWorksCorrectly();
@@ -2450,7 +2570,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Men Category From Sports Category Page  ", priority = 236)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Men Category From Sports Category Page  ", priority = 236)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideMenCategoryFromSportsCategoryPageWorksCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnMenCategoryFromSportsCategoryPageWorksCorrectly();
@@ -2459,7 +2583,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Women Category From Sports Category Page  ", priority = 237)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Women Category From Sports Category Page  ", priority = 237)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideWomenCategoryFromSportsCategoryPageWorksCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnWomenCategoryFromSportsCategoryPageWorksCorrectly();
@@ -2468,7 +2596,11 @@
              System.out.println("There's no pages");
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Sports Tech Category From Sports Category Page  ", priority = 238)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Sports Tech Category From Sports Category Page  ", priority = 238)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideSportsTechCategoryFromSportsCategoryPageWorksCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnSportsTechCategoryFromSportsCategoryPageWorksCorrectly();
@@ -2478,7 +2610,11 @@
         else
         DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,aeSportSupplementsCategoryPage.getNextPageBtn(),webDriver);}
 
+<<<<<<< HEAD
     @Test(groups = {"Sports Category","Smoke Testing Result","Medium Severity"},description = "Sports Category- Make Sure the ability to access all pages inside Kids Category From Sports Category Page  ", priority = 239)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Sports Category- Make Sure the ability to access all pages inside Kids Category From Sports Category Page  ", priority = 239)
+>>>>>>> origin/master
     public void verifyAbilityToAccessAllPagesInsideKidsCategoryFromSportsCategoryPageWorksCorrectly(){
         AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
         this.verifyClickingOnKidsCategoryFromSportsCategoryPageWorksCorrectly();
Index: src/main/java/extent_report_listner/ExtentReportListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * @author : Wala'a Mohammad\r\n *\r\n */\r\npackage extent_report_listner;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\n\r\n//import com.aventstack.extentreports.reporter.configuration.ViewName;\r\nimport com.aventstack.extentreports.ExtentReporter;\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.openqa.selenium.OutputType;\r\nimport org.openqa.selenium.TakesScreenshot;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.testng.*;\r\nimport org.testng.annotations.AfterMethod;\r\nimport org.testng.xml.XmlSuite;\r\nimport com.relevantcodes.extentreports.ExtentReports;\r\nimport com.relevantcodes.extentreports.ExtentTest;\r\nimport com.relevantcodes.extentreports.LogStatus;\r\n//import com.aventstack.extentreports.reporter.ExtentSparkReporter;\r\n\r\n\r\npublic class ExtentReportListener  implements IReporter {\r\n\r\n    private ExtentReports extent;\r\n//    private ExtentSparkReporter spark;\r\n    private ExtentTest test;\r\n    String pattern = \"yyyy-MM-dd-hh-mm-ss\";\r\n    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);\r\n    String date = simpleDateFormat.format(new Date());\r\n    public void generateReport(List<XmlSuite> xmlSuites, List<ISuite> suites,\r\n                               String outputDirectory) {\r\n        for (ISuite suite : suites) {\r\n            Map<String, ISuiteResult> result = suite.getResults();\r\n\r\n            for (ISuiteResult r : result.values()) {\r\n        //The date will include with the file name\r\n        extent = new ExtentReports(\"G:\\\\My Drive\\\\Automation Reports\" + File.separator\r\n                + \"Magento-Sporter-Automation_Report \" + \"[\" + r.getTestContext().getName() + \"]\" + date + \".html\", true);\r\n//        extent = new ExtentReports(\"C:\\\\Users\\\\w.jumaa\\\\Desktop\\\\Automation Reports\" + File.separator\r\n//                + \"Magento-Sporter-Automation_Report \" + \"[\" + r.getTestContext().getName() + \"]\" + date + \".html\", true);\r\n\r\n//            spark=new ExtentSparkReporter(File.separator + \"Magento-Sporter-Automation_Report \"+date+\".html\");\r\n//            spark.viewConfigurer().viewOrder().as(new ViewName[]{ViewName.DASHBOARD, ViewName.TEST,ViewName.CATEGORY}).apply();\r\n\r\n//        extent.addSystemInfo(\"Author\", \"Wala'a Mohammad\");\r\n                \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //loading the external xml file\r\n        extent.loadConfig(new File(System.getProperty(\"user.dir\") + \"./src/test/resources/extent-config.xml\"));\r\n\r\n\r\n\r\n\r\n                ITestContext context = r.getTestContext();\r\n\r\n\r\n                buildTestNodes(context.getPassedTests(), LogStatus.PASS);\r\n                buildTestNodes(context.getFailedTests(), LogStatus.FAIL);\r\n//                buildTestNodes(context.getSkippedTests(), LogStatus.SKIP);\r\n                extent.flush();\r\n                extent.close();\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void buildTestNodes(IResultMap tests, LogStatus status) {\r\n        ExtentTest test;\r\n\r\n        if (tests.size() > 0) {\r\n            for (ITestResult result : tests.getAllResults()) {\r\n                test = extent.startTest(result.getMethod().getDescription());\r\n//                    test = extent.startTest(result.getMethod().getMethodName());\r\n\r\n                test.setStartedTime(getTime(result.getStartMillis()));\r\n                test.setEndedTime(getTime(result.getEndMillis()));\r\n\r\n                for (String group : result.getMethod().getGroups())\r\n                    test.assignCategory(group);\r\n\r\n                if (result.getThrowable() != null) {\r\n                    test.log(status, result.getThrowable());\r\n                } else {\r\n                    test.log(status, \"Test \" + status.toString().toLowerCase()\r\n                            + \"ed\");\r\n                }\r\n                extent.endTest(test);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private Date getTime(long millis) {\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.setTimeInMillis(millis);\r\n        return calendar.getTime();\r\n    }\r\n\r\n    //This method is to capture the screenshot and return the path of the screenshot.\r\n    public static String getScreenshot(WebDriver driver, String screenshotName, ITestResult iTestResult) throws Exception {\r\n        //below line is just to append the date format with the screenshot name to avoid duplicate names\r\n        String dateName = new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date());\r\n        String failedTest = iTestResult.getName();\r\n\r\n        TakesScreenshot ts = (TakesScreenshot) driver;\r\n        File source = ts.getScreenshotAs(OutputType.FILE);\r\n        //after execution, you could see a folder \"FailedTestsScreenshots\" under src folder\r\n        String destination = System.getProperty(\"user.dir\") + \"./FailedTestsScreenshots/\" + screenshotName + dateName + \".png\";\r\n        File finalDestination = new File(destination);\r\n        FileUtils.copyFile(source, finalDestination);\r\n        //Returns the captured file path\r\n        return destination;\r\n\r\n    }\r\n    public void onTestFailure(ITestResult result) throws Exception {\r\n        ITestContext context = result.getTestContext();\r\n        WebDriver driver = (WebDriver)context.getAttribute(\"driver\");\r\n        ExtentReportListener.getScreenshot(driver,result.getParameters().toString().trim(),result);\r\n}\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/extent_report_listner/ExtentReportListener.java b/src/main/java/extent_report_listner/ExtentReportListener.java
--- a/src/main/java/extent_report_listner/ExtentReportListener.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/main/java/extent_report_listner/ExtentReportListener.java	(date 1673265422403)
@@ -55,7 +55,7 @@
 
 
 
-
+                
 
 
 
Index: src/test/java/sporter_test/KsaHomePageTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport sporter_pages.KsaHomePage;\r\n\r\npublic class KsaHomePageTestCases extends BaseTest {\r\n    //    private KsaHomePage ksaHomePage;\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"KSA HomePage- Switching to the KSA Store\", priority = 1)\r\n    public void switchToKsaStore() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.switchToKsaCountry();\r\n        if(webDriver.getCurrentUrl().contains(ksaHomePage.saudiDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            ksaHomePage.switchToKsaCountry();\r\n        }\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the Banners appear correctly in the HomePage rotating slider section \", priority = 2)\r\n    public void verifyHomePageRotatingSliderIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        Assert.assertTrue(ksaHomePage.getHomePageRotatingSlider().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderList().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the next button at the HomePage rotating slider section is displayed \", priority = 3)\r\n    public void verifyNextArrowAtHomePageRotatingSliderIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getNextArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the previous button at the HomePage rotating slider section is displayed \", priority = 4)\r\n    public void verifyPreviousArrowAtHomePageRotatingSliderIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the pagination control appears on the HomePage rotating slider is displayed\", priority = 5)\r\n    public void verifyPaginationControlOnHomePageRotatingSliderIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingControl().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingList().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure clicking on the banners inside the rotating slider section works correctly\", priority = 6)\r\n    public void verifyClickingOnTheBannersInsideTheHomePageRotatingSliderWillRedirectTheUserToCorrectPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(ksaHomePage.getHomePageRotatingSliderPagingList().get(i),5,webDriver);\r\n            ksaHomePage.getHomePageRotatingSliderPagingList().get(i).click();\r\n            ksaHomePage.getBannerInRotatingSliderSection().click();\r\n            ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            ksaHomePage.navigate();\r\n        }\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the HomePage side Banner is displayed \", priority = 7)\r\n    public void verifyHomePageSideBannerIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getHomePageSideBanner().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the HomePage Horizontal Banner is displayed \", priority = 8)\r\n    public void verifyHomePageHorizontalBannerIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getHorizontalBanner().isDisplayed(), \"The HomePage Horizontal Banner is missing\");\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure clicking on the first side banner works correctly\", priority = 9)\r\n    public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        String expectedUrl = ksaHomePage.getFirstSideBanner().getAttribute(\"href\");\r\n        ksaHomePage.getFirstSideBanner().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure clicking on the second side banner works correctly\", priority = 10)\r\n    public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        String expectedUrl = ksaHomePage.getSecondSideBanner().getAttribute(\"href\");\r\n        ksaHomePage.getSecondSideBanner().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly\", priority = 11)\r\n    public void verifyClickingOnHomePageHorizontalBannerDoeNotRedirectTheUserTo404PageOrNoContentFoundPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getHorizontalBanner().isDisplayed(), \"The HomePage Horizontal Banner is missing\");\r\n        String expectedUrl = ksaHomePage.getHorizontalBanner().getAttribute(\"href\");\r\n        ksaHomePage.clickOnHomePageHorizontalBanner();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure the Shop By Category section is displayed \", priority = 12)\r\n    public void verifyShopByCategoryIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getShopByCategoryHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getShopByCategorySections().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the main options in the Mega Menu are retrieved correctly\", priority = 13)\r\n    public void verifyMainOptionsInTheMegaMenuAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertEquals(ksaHomePage.getShopByOption().getText(), \"Shop By\");\r\n        Assert.assertEquals(ksaHomePage.getSportSupplementsOption().getText(), \"Sport Supplements\");\r\n        Assert.assertEquals(ksaHomePage.getVitaminsAndHealthOption().getText(), \"Vitamins & Health\");\r\n        Assert.assertEquals(ksaHomePage.getHealthyFoodOption().getText(), \"Healthy Food\");\r\n        Assert.assertEquals(ksaHomePage.getSportsOption().getText(), \"SPORTS\");\r\n        Assert.assertEquals(ksaHomePage.getWomenOnlyOption().getText(), \"Women's Only\");\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the Banners appearing under shop by category are displayed\", priority = 14)\r\n    public void verifyHomePageUnderShopByCategoryBannersAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        for (int i = 0; i < ksaHomePage.getHomePageUnderShopByCategoryBanners().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageUnderShopByCategoryBanners().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure the Top Selling Stacks section is displayed \", priority = 15)\r\n    public void verifyTopSellingStacksSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getTopSellingStacksHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getTopSellingStacksSections().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the view all button from the Top Selling Stacks section works correctly \", priority = 16)\r\n    public void verifyViewAllBtnInTopSellingStacksSectionWorking() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        String expectedUrl = ksaHomePage.getViewAllBtnInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnViewAllBtnInTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure the Top Sellers sections are displayed \", priority = 17)\r\n    public void verifyTopSellersSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getTopSellerHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getTopSellerSections().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"KSA HomePage- Make sure that all links appear correctly in the Top Sellers section \", priority = 18)\r\n    public void verifyAllLinksInTopSellersSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getAllLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getSportSupplementsLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getHealthyFoodLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getVitaminsAndHealthLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getSportswearAndAccessoriesLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the All tab from the Top Seller Section works correctly \", priority = 19)\r\n    public void verifyAbilityToClickOnTheAllLinkInTopSellersSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnAllLinkInTopSellerSection();\r\n        Assert.assertTrue(ksaHomePage.getAllLActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sport Supplements tab from the Top Seller Section works correctly\", priority = 20)\r\n    public void verifyAbilityToClickOnTheSportSupplementsLinkInTopSellersSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportSupplementsLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getSportSupplementsActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getSportSupplementsActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Healthy Food tab from the Top Seller Section works correctly \", priority = 21)\r\n    public void verifyAbilityToClickOnTheHealthyFoodLinkInTopSellersSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnHealthyFoodLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getHealthyFoodActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getHealthyFoodActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Vitamins And Health tab from the Top Seller Section works correctly \", priority = 22)\r\n    public void verifyAbilityToClickOnTheVitaminsAndHealthLinkInTopSellersSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnVitaminsAndHealthLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getVitaminsAndHealthActiveLinkInTopSellersSection(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getVitaminsAndHealthActiveLinkInTopSellersSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sportswear And Accessories tab from the Top Seller Section works correctly \", priority = 23)\r\n    public void verifyAbilityToClickOnTheSportswearAndAccessoriesLinkInTopSellersSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportswearAndAccessoriesLinkInTopSellerSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getSportswearAndAccessoriesActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getSportswearAndAccessoriesActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure that previous button in the Top Seller Section works correctly \", priority = 24)\r\n    public void verifyPreviousBtnWillAppearInTopSellersSectionOnceClickingOnNextBtn() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnNextButtonInTopSellerSectionInTopSellerSection();\r\n        Assert.assertTrue(ksaHomePage.getPreviousButtonInTopSellerSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the next button appearing in the Top Seller section works Correctly \", priority = 25)\r\n    public void verifyNextBtnInTopSellerSectionWorks() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnPreviousButtonInTopSellersSection();\r\n        ksaHomePage.clickOnNextButtonInTopSellersSection();\r\n        Assert.assertTrue(ksaHomePage.getPreviousButtonInTopSellerSection().isDisplayed());\r\n    }\r\n\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"KSA HomePage- Make sure the Trending On Sporter sections are displayed \", priority = 26)\r\n    public void verifyTrendingOnSporterSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getTrendingOnSporterHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getTrendingOnSporterSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the next button appearing in the Trending On Sporter section works Correctly \", priority = 27)\r\n    public void verifyNextBtnInTrendingOnSporterSectionWorks() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnNextButtonInTrendingOnSporterSection();\r\n        Assert.assertTrue(ksaHomePage.getTrendingOnSporterSectionPositionAfterClickingOnNext().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the previous button appearing in the Trending On Sporter section works Correctly \", priority = 28)\r\n    public void verifyPreviousBtnInTrendingOnSporterSectionWorks() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnNextButtonInTrendingOnSporterSection();\r\n        ksaHomePage.clickOnPreviousButtonInTrendingOnSporterSection();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure the New Arrivals sections are displayed \", priority = 29)\r\n    public void verifyNewArrivalsSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"KSA HomePage- Make sure that all links appearing correctly in the New Arrivals section \", priority = 30)\r\n    public void verifyAllLinksInNewArrivalsSectionAreDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsAllLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsSportSupplementsLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsHealthyFoodLinkLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsVitaminsAndHealthLink().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsSportWearAndAccessoriesLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the all tab from the New Arrivals Section works correctly\", priority = 31)\r\n    public void verifyAbilityToClickOnTheAllLinkInNewArrivalsSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnAllLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getNewArrivalsAllActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsAllActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sport Supplements tab from the New Arrivals Section works correctly \", priority = 32)\r\n    public void verifyAbilityToClickOnTheSportSupplementsLinkInNewArrivalsSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportSupplementsLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getNewArrivalsSportSupplementsActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsSportSupplementsActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Healthy Food tab that appear in the New Arrivals Section works correctly \", priority = 33)\r\n    public void verifyAbilityToClickOnTheHealthyFoodLinkInNewArrivalsSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnHealthyFoodLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getNewArrivalsHealthyFoodActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsHealthyFoodActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Vitamins And Health tab from the New Arrivals Section works correctly\", priority = 34)\r\n    public void verifyAbilityToClickOnTheVitaminsAndHealthLinkInNewArrivalsSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnVitaminsAndHealthLinkInNewArrivalsSection();\r\n        Assert.assertTrue(ksaHomePage.getVitaminsAndHealthActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sportswear And Accessories tab from the New Arrivals Section works correctly \", priority = 35)\r\n    public void verifyAbilityToClickOnTheSportswearAndAccessoriesLinkInNewArrivalsSection() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportswearAndAccessoriesLinkInNewArrivalsSection();\r\n        DataHelperAndWait.waitToBeVisible(ksaHomePage.getNewArrivalsSportWearAndAccessoriesActiveLink(), 3, webDriver);\r\n        Assert.assertTrue(ksaHomePage.getNewArrivalsSportWearAndAccessoriesActiveLink().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure that previous and next button in the New Arrivals Section works correctly\", priority = 36)\r\n    public void verifyPreviousBtnWillAppearInNewArrivalsSectionOnceClickingOnNextBtn() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnNextButtonInNewArrivalSection();\r\n        Assert.assertTrue(ksaHomePage.getPreviousBtnInNewArrivalsSection().isDisplayed());\r\n    }\r\n\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"Medium Severity\"},description = \"KSA HomePage- Make sure the Got A Question section is displayed \", priority = 37)\r\n    public void verifyGotQuestionSectionIsDisplayed() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        Assert.assertTrue(ksaHomePage.getQuestionBlock().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getPhoneBtn().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getEmailBtn().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Home Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"KSA HomePage- Make sure the clicking on email button from the Got A Question section works correctly \", priority = 38)\r\n    public void verifyAbilityToClickOnEmailBtnInGotQuestionSectionCorrectly() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n//        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnEmailBtn();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"contacts-us\"));\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sports Supplements category from the HomePage works correctly \", priority = 39)\r\n    public void verifyClickingOnSportsSupplementsCategoryRedirectTheUserToCorrectPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportsSupplementsCategory();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Healthy Food category from the HomePage works correctly \", priority = 40)\r\n    public void verifyClickingOnHealthyFoodCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnHealthyFoodCategory();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Vitamins And Health category from the HomePage works correctly \", priority = 41)\r\n    public void verifyClickingOnVitaminsAndHealthCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnVitaminsAndHealthCategory();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the Sportswear & Accessories category from the HomePage works correctly \", priority = 42)\r\n    public void verifyClickingOnSportswearAndAccessoriesCategoryDoeNotRedirectTheUserToCorrectPage() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSportswearAndAccessoriesCategory();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the products appearing in the Top Selling Stacks section works correctly\", priority = 43)\r\n    public void verifyClickOnTheProductsAppearingInTheTopSellingStacksSectionRedirectTheUserToCorrectUrl() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        String expectedUrl = ksaHomePage.getFirstProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnFirstProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        expectedUrl = ksaHomePage.getSecondProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnSecondProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnThirdProductInTheTopSellingStacksSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        expectedUrl = ksaHomePage.getFourthProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnFourthProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        expectedUrl = ksaHomePage.getFiveProductInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnFifthProductInTheTopSellingStacksSection();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the products appearing in the Top Sellers section works correctly\", priority = 44)\r\n    public void verifyClickOnTheProductsAppearingInTheTopSellersSectionRedirectTheUserToCorrectUrl() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFirstProductInTheTopSellersSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSecondProductInTheTopSellersSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnThirdProductInTheTopSellersSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFourthProductInTheTopSellersSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFifthProductInTheTopSellersSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"KSA HomePage- Make sure clicking on the products appearing in the New Arrivals section works correctly\", priority = 45)\r\n    public void verifyClickOnTheProductsAppearingInTheNewArrivalsSectionRedirectTheUserToCorrectUrl() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFirstProductInTheNewArrivalsSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnSecondProductInTheNewArrivalsSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnThirdProductInTheNewArrivalsSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFourthProductInTheNewArrivalsSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnFifthProductInTheNewArrivalsSection();\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n    @Test(description = \"KSA HomePage- Make sure ability to access all pages inside the Top Selling Stacks category correctly \", priority = 46)\r\n    public void verifyAbilityToAccessAllPagesInsideTheTopSellingStacksCategoryCorrectly(){\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        String expectedUrl = ksaHomePage.getViewAllBtnInTopSellingStacksSection().getAttribute(\"href\");\r\n        ksaHomePage.clickOnViewAllBtnInTopSellingStacksSection();\r\n        DataHelperAndWait.waitForUrlContains(\"/sporter-stacks\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"/sporter-stacks\"), \"Incorrect URL is displayed \" + webDriver.getCurrentUrl());\r\n        ksaHomePage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        String numberOfProductInTheList=ksaHomePage.getSearchResultValue().getText();\r\n        DataHelperAndWait.accessAllPagesInsideTheProductsListPage(numberOfProductInTheList,ksaHomePage.getNextPageBtn(),webDriver);\r\n    }\r\n    @Test(description = \"KSA HomePage- Make sure clicking on phone button from the Got A Question section works correctly \", priority = 47)\r\n    public void verifyAbilityToClickOnPhoneBtnInGotQuestionSectionCorrectly() {\r\n        KsaHomePage ksaHomePage = new KsaHomePage(webDriver);\r\n        ksaHomePage.navigate();\r\n        ksaHomePage.clickOnPhoneBtn();\r\n        // store window handles in Set\r\n        String myWindowHandle = webDriver.getWindowHandle();\r\n        webDriver.switchTo().window(myWindowHandle);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/KsaHomePageTestCases.java b/src/test/java/sporter_test/KsaHomePageTestCases.java
--- a/src/test/java/sporter_test/KsaHomePageTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/KsaHomePageTestCases.java	(date 1673265423004)
@@ -54,7 +54,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure clicking on the banners inside the rotating slider section works correctly", priority = 6)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure clicking on the banners inside the rotating slider section works correctly", priority = 6)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersInsideTheHomePageRotatingSliderWillRedirectTheUserToCorrectPage() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -81,7 +85,11 @@
         Assert.assertTrue(ksaHomePage.getHorizontalBanner().isDisplayed(), "The HomePage Horizontal Banner is missing");
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure clicking on the first side banner works correctly", priority = 9)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure clicking on the first side banner works correctly", priority = 9)
+>>>>>>> origin/master
     public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -92,7 +100,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure clicking on the second side banner works correctly", priority = 10)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure clicking on the second side banner works correctly", priority = 10)
+>>>>>>> origin/master
     public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheVitaminsAndHealthCategoryPage() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
         ksaHomePage.navigate();
@@ -103,7 +115,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly", priority = 11)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure clicking on the HomePage Horizontal Banner works correctly", priority = 11)
+>>>>>>> origin/master
     public void verifyClickingOnHomePageHorizontalBannerDoeNotRedirectTheUserTo404PageOrNoContentFoundPage() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
         ksaHomePage.navigate();
@@ -115,7 +131,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure the Shop By Category section is displayed ", priority = 12)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the Shop By Category section is displayed ", priority = 12)
+>>>>>>> origin/master
     public void verifyShopByCategoryIsDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
         ksaHomePage.navigate();
@@ -144,7 +164,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure the Top Selling Stacks section is displayed ", priority = 15)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the Top Selling Stacks section is displayed ", priority = 15)
+>>>>>>> origin/master
     public void verifyTopSellingStacksSectionAreDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -163,7 +187,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure the Top Sellers sections are displayed ", priority = 17)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the Top Sellers sections are displayed ", priority = 17)
+>>>>>>> origin/master
     public void verifyTopSellersSectionAreDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
         ksaHomePage.navigate();
@@ -171,7 +199,11 @@
         Assert.assertTrue(ksaHomePage.getTopSellerSections().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","Medium Severity"},description = "KSA HomePage- Make sure that all links appear correctly in the Top Sellers section ", priority = 18)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure that all links appear correctly in the Top Sellers section ", priority = 18)
+>>>>>>> origin/master
     public void verifyAllLinksInTopSellersSectionAreDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -244,7 +276,11 @@
     }
 
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","High Severity"},description = "KSA HomePage- Make sure the Trending On Sporter sections are displayed ", priority = 26)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the Trending On Sporter sections are displayed ", priority = 26)
+>>>>>>> origin/master
     public void verifyTrendingOnSporterSectionAreDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -276,7 +312,11 @@
         Assert.assertTrue(ksaHomePage.getNewArrivalsSection().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","Medium Severity"},description = "KSA HomePage- Make sure that all links appearing correctly in the New Arrivals section ", priority = 30)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure that all links appearing correctly in the New Arrivals section ", priority = 30)
+>>>>>>> origin/master
     public void verifyAllLinksInNewArrivalsSectionAreDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -340,7 +380,11 @@
     }
 
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","Medium Severity"},description = "KSA HomePage- Make sure the Got A Question section is displayed ", priority = 37)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the Got A Question section is displayed ", priority = 37)
+>>>>>>> origin/master
     public void verifyGotQuestionSectionIsDisplayed() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
@@ -349,7 +393,11 @@
         Assert.assertTrue(ksaHomePage.getEmailBtn().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Home Page","Smoke Testing Result","Critical Severity"},description = "KSA HomePage- Make sure the clicking on email button from the Got A Question section works correctly ", priority = 38)
+=======
+    @Test(groups = "Smoke Testing Result",description = "KSA HomePage- Make sure the clicking on email button from the Got A Question section works correctly ", priority = 38)
+>>>>>>> origin/master
     public void verifyAbilityToClickOnEmailBtnInGotQuestionSectionCorrectly() {
         KsaHomePage ksaHomePage = new KsaHomePage(webDriver);
 //        ksaHomePage.navigate();
Index: src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sporter_test;\r\n\r\nimport core.BasePage;\r\nimport core.BaseTest;\r\nimport core.DataHelperAndWait;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport org.testng.asserts.SoftAssert;\r\nimport sporter_pages.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport static core.BasePage.BaseURL;\r\nimport static org.testng.Assert.assertEquals;\r\n\r\npublic class AeWomenOnlyCategoryTestCases extends BaseTest {\r\n\r\n    private AeProductDetailsPage aeProductDetailsPage;\r\n    private AEFooterPage aeFooterPage;\r\n    private AeSportsCategoryPage aeSportsCategoryPage;\r\n    private AeVitaminsAndHealthCategoryPage aeVitaminsAndHealthCategoryPage;\r\n    private AeSportSupplementsCategoryPage aeSportSupplementsCategoryPage;\r\n    private KsaHomePage ksaHomePage;\r\n    private Actions action;\r\n\r\n    @Test(groups = \"Smoke Testing Result\",description = \"Women's Only Category- Switching to UAE store\", priority = 1)\r\n    public void switchToUaeStore(){\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.switchToAECountry();\r\n        if(webDriver.getCurrentUrl().contains(aeWomenOnlyCategoryPage.aeDomain)){\r\n            System.out.println(\"You are in UAE Store\");\r\n        }\r\n        else {\r\n            webDriver.navigate().to(BasePage.BaseURL+aeDomain);\r\n            CloseInitialDialog();          }\r\n    }\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure ability to access the Women's Only Category from the MegaMenu correctly\", priority = 2)\r\n    public void verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL( ) {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        action = new Actions(webDriver);\r\n        action.moveToElement(aeWomenOnlyCategoryPage.getWomenOnlyMainMenu()).perform();\r\n        String expectedUrl=aeWomenOnlyCategoryPage.getWomenOnlyMainMenu().getAttribute(\"href\");\r\n        aeWomenOnlyCategoryPage.getWomenOnlyMainMenu().click();\r\n        DataHelperAndWait.waitForUrlContains(expectedUrl,webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Women's Only Category from ShopBy Menu works correctly\", priority = 3)\r\n    public void verifyClickingOnWomenOnlyCategoryFromShopByMenuRedirectUserToCorrectURL() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n            action = new Actions(webDriver);\r\n            action.moveToElement(aeWomenOnlyCategoryPage.getShopeByMenu()).perform();\r\n            action.moveToElement(aeWomenOnlyCategoryPage.getWomenOnlyOption()).perform();\r\n            String expectedUrl = aeWomenOnlyCategoryPage.getWomenOnlyOption().getAttribute(\"href\");\r\n        aeWomenOnlyCategoryPage.getWomenOnlyOption().click();\r\n            Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Footer section appears correctly in the Women's Only category page\", priority = 4)\r\n    public void verifyFooterSectionAppearsCorrectlyInWomenOnlyCategoryPage() {\r\n        aeFooterPage = new AEFooterPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(aeFooterPage.getFooterSection().isDisplayed());\r\n    }\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Women's Only category page(100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks)\", priority = 5)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWomenOnlyCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb\", priority = 6)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbAppearingInWomenOnlyCategoryPage() {\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the rotating slider section is displayed correctly\", priority = 7)\r\n    public void verifyRotatingSliderIsDisplayedInTheWomenOnlyCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n//        Assert.assertTrue(ksaHomePage.getHomePageRotatingSlider().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderList().size(); i++) {\r\n            DataHelperAndWait.waitToBeVisible(ksaHomePage.getHomePageRotatingSliderList().get(i),5,webDriver);\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderList().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    //There's a bug here due to the next arrow icon is missing\r\n    @Test(description = \"Women's Only Category- Make sure the next button in the rotating slider section is displayed correctly\", priority = 8)\r\n    public void verifyNextArrowOfRotatingSliderIsDisplayedInTheWomenOnlyCategoryPage() {\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getNextArrowInHomePageRotatingSlider().isDisplayed(),\"The next button in the rotating slider section is missing\");\r\n    }\r\n\r\n    //There's a bug here due to the previous arrow icon is missing\r\n    @Test(description = \"Women's Only Category- Make sure the previous button in the rotating slider section is displayed correctly\", priority = 9)\r\n    public void verifyPreviousArrowOfRotatingSliderIsDisplayedInTheWomenOnlyCategoryPage() {\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n        Assert.assertTrue(ksaHomePage.getPreviousArrowInHomePageRotatingSlider().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the pagination control of rotating slider section is displayed correctly\", priority = 10)\r\n    public void verifyPaginationControlOfRotatingSliderSectionIsDisplayedInTheWomenOnlyCategoryPage() {\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingControl().isDisplayed());\r\n        for (int i = 0; i < ksaHomePage.getHomePageRotatingSliderPagingList().size(); i++) {\r\n            Assert.assertTrue(ksaHomePage.getHomePageRotatingSliderPagingList().get(i).isDisplayed());\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the side Banners is displayed correctly\", priority = 11)\r\n    public void verifySideBannersIsDisplayedInTheWomenOnlyCategoryPage() {\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertTrue(ksaHomePage.getHomePageSideBanner().isDisplayed());\r\n    }\r\n\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure  clicking on the banners appear in rotating slider section works correctly\", priority = 12)\r\n    public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheWomenOnlyCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().size(); i++) {\r\n            aeVitaminsAndHealthCategoryPage.getPagerOfRotatingSlider().get(i).click();\r\n            aeVitaminsAndHealthCategoryPage.getBannerInRotatingSliderSection().click();\r\n            aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n            aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        }\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure the clicking on the first side banner works correctly\", priority = 13)\r\n    public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheWomenOnlyCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedBannerUrl = aeVitaminsAndHealthCategoryPage.getFirstSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getFirstSideBanner().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n//        assertEquals(webDriver.getCurrentUrl(),expectedBannerUrl.substring(0,expectedBannerUrl.length()-1));\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0, expectedBannerUrl.length() - 1)));\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the second side banner works correctly\", priority = 14)\r\n    public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheWomenOnlyCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedBannerUrl = aeVitaminsAndHealthCategoryPage.getSecondSideBanner().getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getSecondSideBanner().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    //Shop By Category Test Cases\r\n    @Test(description = \"Women's Only Category- Make sure the Shop By Category section is displayed \", priority = 15)\r\n    public void verifyShopByCategoryInTheWomenOnlyCategoryPageIsDisplayed() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        ksaHomePage = new KsaHomePage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertTrue(ksaHomePage.getShopByCategoryHeader().isDisplayed());\r\n        Assert.assertTrue(ksaHomePage.getShopByCategorySections().isDisplayed());\r\n    }\r\n\r\n    //Supplements For Her Category page Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Supplements For Her category inside Shop By Category section works correctly \", priority = 16)\r\n    public void verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedCategoryUrl = aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(0).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(0).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Supplements For Her category page \", priority = 17)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        aeWomenOnlyCategoryPage.navigate();\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Supplements For Her category page \", priority = 18)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n//        aeWomenOnlyCategoryPage.navigate();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Supplements For Her Category Page \", priority = 19)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Supplements For Her category page  \", priority = 20)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInSupplementsForHerCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Supplements For Her Category Page \", priority = 21)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSupplementsForHerCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Supplements For Her Category page \", priority = 22)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInSupplementsForHerCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Supplements For Her, Categories\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Supplements For Her category page\", priority = 23)\r\n    public void verifySearchBtnWorksCorrectlyFromSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Supplements For Her category page is disable when the current page is page 1 \", priority = 24)\r\n    public void verifyThePreviousBtnInSupplementsForHerCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(0).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Supplements For Her category page works correctly\", priority = 25)\r\n    public void verifyThePaginationControlInSupplementsForHerCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Supplements For Her Category Page works correctly\", priority = 26)\r\n    public void verifyPreviousPageBtnInSupplementsForHerCategoryPageWorksCorrectly(){\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSupplementsForHerCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Supplements For Her Category Page works correctly\", priority = 27)\r\n    public void verifyNextPageBtnInSupplementsForHerCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInSupplementsForHerCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Supplements For Her category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 28)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Supplements For Her category page\", priority = 29)\r\n    public void verifyFiltrationSectionIsDisplayedInSupplementsForHerCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Women's Daily Vitamins Category page Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Women's Daily Vitamins category inside Shop By Category section works correctly \", priority = 30)\r\n    public void verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(1).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(1).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Women's Daily Vitamins category page \", priority = 31)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Women's Daily Vitamins category page \", priority = 32)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Women's Daily Vitamins Category Page \", priority = 33)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Women's Daily Vitamins category page  \", priority = 34)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women's Daily Vitamins Category Page \", priority = 35)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Women's Daily Vitamins Category page \", priority = 36)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInWomenDailyVitaminsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Womens Daily Vitamins, Categories\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Women's Daily Vitamins category page\", priority = 37)\r\n    public void verifySearchBtnWorksCorrectlyFromWomenDailyVitaminsCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Women's Daily Vitamins category page is disable when the current page is page 1 \", priority = 38)\r\n    public void verifyThePreviousBtnInWomenDailyVitaminsCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(1).click();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Women's Daily Vitamins category page works correctly\", priority = 39)\r\n    public void verifyThePaginationControlInWomenDailyVitaminsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Women's Daily Vitamins Category Page works correctly\", priority = 40)\r\n    public void verifyPreviousPageBtnInWomenDailyVitaminsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWomenDailyVitaminsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Women's Daily Vitamins Category Page works correctly\", priority = 41)\r\n    public void verifyNextPageBtnInWomenDailyVitaminsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWomenDailyVitaminsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Women Daily Vitamins category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 42)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWomenDailyVitaminsCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Women's Daily Vitamins category page\", priority = 43)\r\n    public void verifyFiltrationSectionIsDisplayedInWomenDailyVitaminsCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Lady-Friendly Snacks & Food Category page Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Lady-Friendly Snacks & Food inside Shop By Category section works correctly \", priority = 44)\r\n    public void verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(2).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(2).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Lady-Friendly Snacks & Food category page \", priority = 45)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheLadyFriendlySnacksAndFoodCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Lady-Friendly Snacks & Food category page \", priority = 46)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheLadyFriendlySnacksAndFoodCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Lady-Friendly Snacks & Food Category Page \", priority = 47)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForLadyFriendlySnacksAndFoodCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Lady-Friendly Snacks & Food category page  \", priority = 48)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInLadyFriendlySnacksAndFoodCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Lady-Friendly Snacks & Food Category Page \", priority = 49)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInLadyFriendlySnacksAndFoodCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Lady-Friendly Snacks & Food category page\", priority = 51)\r\n    public void verifySearchBtnWorksCorrectlyFromLadyFriendlySnacksAndFoodCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Lady-Friendly Snacks & Food category page is disable when the current page is page 1 \", priority = 52)\r\n    public void verifyThePreviousBtnInLadyFriendlySnacksAndFoodCategoryPageIsDisableWhenDisplayPage1() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(2).click();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Lady-Friendly Snacks & Food category page works correctly\", priority = 53)\r\n    public void verifyThePaginationControlInLadyFriendlySnacksAndFoodCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,6);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Lady-Friendly Snacks & Food Category Page works correctly\", priority = 54)\r\n    public void verifyPreviousPageBtnInLadyFriendlySnacksAndFoodCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInLadyFriendlySnacksAndFoodCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Lady-Friendly Snacks & Food Category Page works correctly\", priority = 55)\r\n    public void verifyNextPageBtnInLadyFriendlySnacksAndFoodCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInLadyFriendlySnacksAndFoodCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the page bottom that appears in the footer section displays all 3 blocks:100% Secure Payments+ 100% Authentic Products+Fast Delivery Service blocks in the Lady-Friendly Snacks & Food category page\", priority = 56)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInLadyFriendlySnacksAndFoodCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Lady-Friendly Snacks & Food category page\", priority = 57)\r\n    public void verifyFiltrationSectionIsDisplayedInLadyFriendlySnacksAndFoodCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Makeup for Active Lifestyles Category page Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Makeup for Active Lifestyles inside Shop By Category section works correctly \", priority = 58)\r\n    public void verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(3).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getShopByCategoryList().get(3).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Makeup for Active Lifestyles category page \", priority = 59)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMakeupForActiveLifestylesCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Makeup for Active Lifestyles category page \", priority = 60)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMakeupForActiveLifestylesCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Makeup for Active Lifestyles Category Page \", priority = 61)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForMakeupForActiveLifestylesCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Makeup for Active Lifestyles category page  \", priority = 62)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMakeupForActiveLifestylesCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Low Severity\"},description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Makeup for Active Lifestyles Category Page \", priority = 63)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMakeupForActiveLifestylesCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Makeup for Active Lifestyles category page\", priority = 64)\r\n    public void verifySearchBtnWorksCorrectlyFromMakeupForActiveLifestylesCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Makeup for Active Lifestyles category page is disable when the current page is page 1 \", priority = 65)\r\n    public void verifyThePreviousBtnInMakeupForActiveLifestylesCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Makeup for Active Lifestyles category page works correctly\", priority = 66)\r\n    public void verifyThePaginationControlInMakeupForActiveLifestylesCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Makeup for Active Lifestyles Category Page works correctly\", priority = 67)\r\n    public void verifyPreviousPageBtnInMakeupForActiveLifestylesCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMakeupForActiveLifestylesCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Makeup for Active Lifestyles Category Page works correctly\", priority = 68)\r\n    public void verifyNextPageBtnInMakeupForActiveLifestylesCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMakeupForActiveLifestylesCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Makeup For Active Life styles category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 69)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMakeupForActiveLifestylesCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Makeup for Active Lifestyles category page\", priority = 70)\r\n    public void verifyFiltrationSectionIsDisplayedInMakeupForActiveLifestylesCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Shop By Goal Section Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure that Shop By Goal section is displayed correctly \", priority = 71)\r\n    public void verifyShopByGoalSectionIsDisplayedCorrectly() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideTitle().getText(), \"Shop By Goal\");\r\n        ArrayList<String> expectedOptions = new ArrayList<>() {{\r\n            add(\"Hair, Skin & Nails\");\r\n            add(\"Weight Loss\");\r\n            add(\"Mood Support\");\r\n            add(\"Detox & Cleanse\");\r\n            add(\"PMS Relief\");\r\n            add(\"Energy & Endurance\");\r\n            add(\"Prenatal Care\");\r\n            add(\"Muscle & Weight Gain\");\r\n            add(\"Fashion & Style\");\r\n            add(\"Personal Care\");\r\n        }};\r\n        for (int i = 0; i < aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().size(); i++) {\r\n            Assert.assertEquals(aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(i).getText(), expectedOptions.get(i));\r\n            System.out.println(\"Actual: \" + aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(i).getText() + \"  Expected: \" + expectedOptions.get(i));\r\n        }\r\n    }\r\n\r\n    //Hair, Skin & Nails Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Hair, Skin & Nails Category inside Shop By Category section works correctly \", priority = 72)\r\n    public void verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(0).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(0).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Hair, Skin & Nails Category page \", priority = 73)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Hair, Skin & Nails Category page \", priority = 74)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for MHair, Skin & Nails Category Page \", priority = 75)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Hair, Skin & Nails Category page  \", priority = 76)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Hair, Skin & Nails Category Page \", priority = 77)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Hair, Skin & Nails Category page \", priority = 78)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInHairSkinAndNailsCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Hair, Skin & Nails, Goal\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Hair, Skin & Nails Category page\", priority = 79)\r\n    public void verifySearchBtnWorksCorrectlyFromHairSkinAndNailsCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Hair, Skin & Nails Category page is disable when the current page is page 1 \", priority = 80)\r\n    public void verifyThePreviousBtnInHairSkinAndNailsCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n//    There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Hair, Skin & Nails Category page works correctly\", priority = 81)\r\n    public void verifyThePaginationControlInHairSkinAndNailsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,6);\r\n       Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Hair, Skin & Nails Category Page works correctly\", priority = 82)\r\n    public void verifyPreviousPageBtnInHairSkinAndNailsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInHairSkinAndNailsCategoryPageWorksCorrectly();\r\n//        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Hair, Skin & Nails Category Page works correctly\", priority = 83)\r\n    public void verifyNextPageBtnInHairSkinAndNailsCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInHairSkinAndNailsCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=3\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=3\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Hair Skin & Nails category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 84)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInHairSkinAndNailsCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Hair, Skin & Nails Category page\", priority = 85)\r\n    public void verifyFiltrationSectionIsDisplayedInHairSkinAndNailsCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Weight Loss Category Test Cases\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Weight Loss Category inside Shop By Category section works correctly \", priority = 86)\r\n    public void verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(1).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(1).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Weight Loss Category page \", priority = 87)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Weight Loss Category page \", priority = 88)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Weight Loss Category Page \", priority = 89)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Weight Loss Category page  \", priority = 90)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Weight Loss Category Page \", priority = 91)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Weight Loss Category page \", priority = 92)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInWeightLossCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Weight Loss, Goal\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Weight Loss Category page\", priority = 93)\r\n    public void verifySearchBtnWorksCorrectlyFromWeightLossCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Weight Loss Category page is disable when the current page is page 1 \", priority = 94)\r\n    public void verifyThePreviousBtnInWeightLossCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Weight Loss Category page works correctly\", priority = 95)\r\n    public void verifyThePaginationControlInWeightLossCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Weight Loss Category Page works correctly\", priority = 96)\r\n    public void verifyPreviousPageBtnInWeightLossCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWeightLossCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Weight Loss Category Page works correctly\", priority = 97)\r\n    public void verifyNextPageBtnInWeightLossCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInWeightLossCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Weight Loss category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 98)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInWeightLossCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Weight Loss Category page\", priority = 99)\r\n    public void verifyFiltrationSectionIsDisplayedInWeightLossCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Mood Support Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Mood Support Category inside Shop By Category section works correctly \", priority = 100)\r\n    public void verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(2).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"mood-support\"));\r\n//        Assert.assertEquals(webDriver.getCurrentUrl(),newExpectedUrl.substring(0,expectedUrl.length()-1));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Mood Support Category page \", priority = 101)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Mood Support Category page \", priority = 102)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Mood Support Category Page \", priority = 103)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Mood Support Category page  \", priority = 104)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Mood Support Category Page \", priority = 105)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Mood Support Category page \", priority = 106)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInMoodSupportCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Mood Support, Goal\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Mood Support Category page\", priority = 107)\r\n    public void verifySearchBtnWorksCorrectlyFromMoodSupportCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Mood Support Category page is disable when the current page is page 1 \", priority = 108)\r\n    public void verifyThePreviousBtnInMoodSupportCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Mood Support Category page works correctly\", priority = 109)\r\n    public void verifyThePaginationControlInMoodSupportCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Mood Support Category Page works correctly\", priority = 110)\r\n    public void verifyPreviousPageBtnInMoodSupportCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMoodSupportCategoryPageWorksCorrectly();\r\n//        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Mood Support Category Page works correctly\", priority = 111)\r\n    public void verifyNextPageBtnInMoodSupportCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMoodSupportCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"),\" The system redirect you to \"+webDriver.getCurrentUrl());\r\n    }\r\n\r\n    @Test(description = \" Women's Only Category- Make sure all secure tabs appears correctly in the Mood Support category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 112)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMoodSupportCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Mood Support Category page\", priority = 113)\r\n    public void verifyFiltrationSectionIsDisplayedInMoodSupportCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Detox & Cleanse Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Detox & Cleanse Category inside Shop By Category section works correctly \", priority = 114)\r\n    public void verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(3).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(3).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Detox & Cleanse Category page \", priority = 115)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Detox & Cleanse Category page \", priority = 116)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Detox & Cleanse Category Page \", priority = 117)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Detox & Cleanse Category page  \", priority = 118)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Detox & Cleanse Category Page \", priority = 119)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Detox & Cleanse Category page \", priority = 120)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInDetoxAndCleanseCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Detox & Cleanse , Goal\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Detox & Cleanse Category page\", priority = 121)\r\n    public void verifySearchBtnWorksCorrectlyFromDetoxAndCleanseCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Detox & Cleanse Category page is disable when the current page is page 1 \", priority = 122)\r\n    public void verifyThePreviousBtnInDetoxAndCleanseCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Detox & Cleanse Category page works correctly\", priority = 123)\r\n    public void verifyThePaginationControlInDetoxAndCleanseCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Detox & Cleanse Category Page works correctly\", priority = 124)\r\n    public void verifyPreviousPageBtnInDetoxAndCleanseCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInDetoxAndCleanseCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Detox & Cleanse Category Page works correctly\", priority = 125)\r\n    public void verifyNextPageBtnInDetoxAndCleanseCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInDetoxAndCleanseCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Detox & Cleanse category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 126)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInDetoxAndCleanseCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Detox & Cleanse Category page\", priority = 127)\r\n    public void verifyFiltrationSectionIsDisplayedInDetoxAndCleanseCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //PMS Relief Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the PMS Relief Category inside Shop By Category section works correctly \", priority = 128)\r\n    public void verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(4).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(4).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the PMS Relief Category page \", priority = 129)\r\n    public void verifyResultFieldAndItsVaLueAppearInThePMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the PMS Relief Category page \", priority = 130)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInThePMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for PMS Relief Category Page \", priority = 131)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForPMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the PMS Relief Category page  \", priority = 132)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInPMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the PMS Relief Category Page \", priority = 133)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInPMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the PMS Relief Category page \", priority = 134)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInPMSReliefCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Pms Relief, Goal\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the PMS Relief Category page\", priority = 135)\r\n    public void verifySearchBtnWorksCorrectlyFromPMSReliefCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the PMS Relief Category page is disable when the current page is page 1 \", priority = 136)\r\n    public void verifyThePreviousBtnInPMSReliefCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the PMS Relief Category page works correctly\", priority = 137)\r\n    public void verifyThePaginationControlInPMSReliefCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In PMS Relief Category Page works correctly\", priority = 138)\r\n    public void verifyPreviousPageBtnInPMSReliefCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPMSReliefCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In PMS Relief Category Page works correctly\", priority = 139)\r\n    public void verifyNextPageBtnInPMSReliefCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPMSReliefCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the PMS Relief category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 140)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInPMSReliefCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the PMS Relief Category page\", priority = 141)\r\n    public void verifyFiltrationSectionIsDisplayedInPMSReliefCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Energy & Endurance Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Energy & Endurance Category inside Shop By Category section works correctly \", priority = 142)\r\n    public void verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(5).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(5).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Energy & Endurance Category page \", priority = 143)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheEnergyAndEnduranceCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Energy & Endurance Category page \", priority = 144)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheEnergyAndEnduranceCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Energy & Endurance Category Page \", priority = 145)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForEnergyAndEnduranceCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Energy & Endurance Category page  \", priority = 146)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInEnergyAndEnduranceCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Energy & Endurance Category Page \", priority = 147)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInEnergyAndEnduranceCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Energy & Endurance Category page\", priority = 148)\r\n    public void verifySearchBtnWorksCorrectlyFromEnergyAndEnduranceCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Energy & Endurance Category page is disable when the current page is page 1 \", priority = 149)\r\n    public void verifyThePreviousBtnInEnergyAndEnduranceCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Energy & Endurance Category page works correctly\", priority = 150)\r\n    public void verifyThePaginationControlInEnergyAndEnduranceCategoryPageWorksCorrectly() {\r\n               AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Energy & Endurance Category Page works correctly\", priority = 151)\r\n    public void verifyPreviousPageBtnInEnergyAndEnduranceCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInEnergyAndEnduranceCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Energy & Endurance Category Page works correctly\", priority = 152)\r\n    public void verifyNextPageBtnInEnergyAndEnduranceCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyThePaginationControlInEnergyAndEnduranceCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,6);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Energy & Endurance category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 153)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInEnergyAndEnduranceCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Energy & Endurance Category page\", priority = 154)\r\n    public void verifyFiltrationSectionIsDisplayedInEnergyAndEnduranceCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Prenatal Care Category Test Cases\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Prenatal Care Category inside Shop By Category section works correctly \", priority = 155)\r\n    public void verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(6).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(6).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        assertEquals(webDriver.getCurrentUrl().substring(29), expectedUrl.substring(29));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Prenatal Care Category page \", priority = 156)\r\n    public void verifyResultFieldAndItsVaLueAppearInThePrenatalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Prenatal Care Category page \", priority = 157)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInThePrenatalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Prenatal Care Category Page \", priority = 158)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForPrenatalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Prenatal Care Category page  \", priority = 159)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInPrenatalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Prenatal Care Category Page \", priority = 160)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInPrenatalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Prenatal Care Category page\", priority = 161)\r\n    public void verifySearchBtnWorksCorrectlyFromPrenatalCareCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Prenatal Care Category page is disable when the current page is page 1 \", priority = 162)\r\n    public void verifyThePreviousBtnInPrenatalCareCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Prenatal Care Category page works correctly\", priority = 163)\r\n    public void verifyThePaginationControlInPrenatalCareCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Prenatal Care Category Page works correctly\", priority = 164)\r\n    public void verifyPreviousPageBtnInPrenatalCareCategoryPageWorksCorrectly() {\r\n                    AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPrenatalCareCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Prenatal Care Category Page works correctly\", priority = 165)\r\n    public void verifyNextPageBtnInPrenatalCareCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPrenatalCareCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Prenatal Care category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 166)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInPrenatalCareCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //There's a bug here due to the filtration section is missing\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Prenatal Care Category page\", priority = 167)\r\n    public void verifyFiltrationSectionIsDisplayedInPrenatalCareCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Muscle & Weight Gain Category Test Cases\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Muscle & Weight Gain Category inside Shop By Category section works correctly \", priority = 168)\r\n    public void verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(7).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"muscle-weight-gain\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Muscle & Weight Gain Category page \", priority = 169)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheMuscleAndWeightGainCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Muscle & Weight Gain Category page \", priority = 170)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheMuscleAndWeightGainCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n            //The below options are missing\r\n            add(\"Relevance\");\r\n            add(\"Newly added items\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Muscle & Weight Gain Category Page \", priority = 171)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForMuscleAndWeightGainCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Muscle & Weight Gain Category page  \", priority = 172)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInMuscleAndWeightGainCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Muscle & Weight Gain Category Page \", priority = 173)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMuscleAndWeightGainCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Muscle & Weight Gain Category page\", priority = 174)\r\n    public void verifySearchBtnWorksCorrectlyFromMuscleAndWeightGainCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Muscle & Weight Gain Category page is disable when the current page is page 1 \", priority = 175)\r\n    public void verifyThePreviousBtnInMuscleAndWeightGainCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Muscle & Weight Gain Category page works correctly\", priority = 176)\r\n    public void verifyThePaginationControlInMuscleAndWeightGainCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Muscle & Weight Gain Category Page works correctly\", priority = 177)\r\n    public void verifyPreviousPageBtnInMuscleAndWeightGainCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMuscleAndWeightGainCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Muscle & Weight Gain Category Page works correctly\", priority = 178)\r\n    public void verifyNextPageBtnInMuscleAndWeightGainCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInMuscleAndWeightGainCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Muscle & Weight Gain category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 179)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInMuscleAndWeightGainCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Muscle & Weight Gain Category page\", priority = 180)\r\n    public void verifyFiltrationSectionIsDisplayedInMuscleAndWeightGainCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Fashion & Style Category Test Cases\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Fashion & Style Category inside Shop By Category section works correctly \", priority = 181)\r\n    public void verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(8).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(8).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedUrl.replace(BaseURL, BaseURL + aeDomain)));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Fashion & Style Category page \", priority = 182)\r\n    public void verifyResultFieldAndItsVaLueAppearInTheFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Fashion & Style Category page \", priority = 183)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInTheFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Featured option is selected by default in the Sort By menu for Fashion & Style Category Page \", priority = 184)\r\n    public void verifyFeaturedOptionIsSelectedByDefaultInSortByMenuForFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Featured\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Fashion & Style Category page  \", priority = 185)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Fashion & Style Category Page \", priority = 186)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure each of the title and Paragraph appearing in the Horizontal Category Image appears correctly in the Fashion & Style Category page \", priority = 187)\r\n    public void verifyTitleAndParagraphAppearingCorrectlyInHorizontalCategoryImageInFashionAndStyleCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage(), 5,webDriver);\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSportSupplementsTitleInCategoryImage().getText(), \"Women, Sportswear & Accessories\", \"Wrong title appears in the sport Supplements category image\");\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getParagraphInSportSupplementsCategoryImage().getText(), \"For Every Training Goal & Body Type\", \"Wrong Paragraph appears in the sport Supplements category image\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Fashion & Style Category page\", priority = 188)\r\n    public void verifySearchBtnWorksCorrectlyFromFashionAndStyleCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Fashion & Style Category page is disable when the current page is page 1 \", priority = 189)\r\n    public void verifyThePreviousBtnInFashionAndStyleCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Fashion & Style Category page works correctly\", priority = 190)\r\n    public void verifyThePaginationControlInFashionAndStyleCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.navigateToPage2();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Fashion & Style Category Page works correctly\", priority = 191)\r\n    public void verifyPreviousPageBtnInFashionAndStyleCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInFashionAndStyleCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Fashion & Style Category Page works correctly\", priority = 192)\r\n    public void verifyNextPageBtnInFashionAndStyleCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInFashionAndStyleCategoryPageWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Fashion & Style category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 193)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInFashionAndStyleCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Fashion & Style Category page\", priority = 194)\r\n    public void verifyFiltrationSectionIsDisplayedInFashionAndStyleCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Personal Care Category Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"Critical Severity\"},description = \"Women's Only Category- Make sure clicking on the Personal Care Category inside Shop By Category section works correctly \", priority = 195)\r\n    public void verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedUrl = aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(9).getAttribute(\"href\");\r\n        aeVitaminsAndHealthCategoryPage.getHerbalReferenceGuideList().get(9).click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), expectedUrl);\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Result label and its value appear correctly in the Personal Care Category page \", priority = 196)\r\n    public void verifyResultFieldAndItsVaLueAppearInThePersonalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        SoftAssert sa = new SoftAssert();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getResultLabel().getText(), \"Results:\");\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSearchResultValue().isDisplayed());\r\n        sa.assertNotEquals(aeSportSupplementsCategoryPage.getSearchResultValue().getText(), \"0\", \"The number of result is Zero\");\r\n    }\r\n\r\n    //There's a bug here due to some filtration is missing\r\n    @Test(description = \"Women's Only Category- Make sure that Sort By menu and its options appear correctly in the Personal Care Category page \", priority = 197)\r\n    public void verifySortByMenuAndItsOptionsAppearCorrectlyInThePersonalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertEquals(aeSportSupplementsCategoryPage.getSortByLabel().getText(), \"Sort By\");\r\n        ArrayList<String> expectedOption = new ArrayList<>() {{\r\n            add(\"Featured\");\r\n            add(\"Newly added items\");\r\n            add(\"Name\");\r\n            add(\"Best Selling\");\r\n            add(\"Price Min-Max\");\r\n            add(\"Price Max-Min\");\r\n        }};\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        List<WebElement> options = select.getOptions();\r\n        for (int i = 0; i < options.size(); i++) {\r\n            Assert.assertEquals(options.get(i).getText(), expectedOption.get(i));\r\n            System.out.println(\"Actual: \" + options.get(i).getText() + \"  Expected: \" + expectedOption.get(i));\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the Best Selling option is selected by default in the Sort By menu for Personal Care Category Page \", priority = 198)\r\n    public void verifyBestSellingOptionIsSelectedByDefaultInSortByMenuForPersonalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Select select = new Select(aeSportSupplementsCategoryPage.getSortByMenu());\r\n        Assert.assertEquals(select.getFirstSelectedOption().getText(), \"Best Selling\");\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Horizontal Category Image appears correctly in the Personal Care Category page  \", priority = 199)\r\n    public void verifyTheHorizontalCategoryImageAppearsCorrectlyInPersonalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        DataHelperAndWait.waitToBeVisible(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage(), 5,webDriver);\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Personal Care Category Page \", priority = 200)\r\n    public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInPersonalCareCategoryPage() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeSportSupplementsCategoryPage.clickOnBreadcrumbHomePage();\r\n        Assert.assertEquals(webDriver.getCurrentUrl(), BaseURL + aeSiteURL);\r\n    }\r\n    @Test(description = \"Women's Only Category- Verify that the search button works correctly from the Personal Care Category page\", priority = 201)\r\n    public void verifySearchBtnWorksCorrectlyFromPersonalCareCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeProductDetailsPage = new AeProductDetailsPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        aeProductDetailsPage.searchForBundle();\r\n        aeProductDetailsPage.getSearchBtn().click();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"search\"));\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Verify that the previous page button in the Personal Care Category page is disable when the current page is page 1 \", priority = 202)\r\n    public void verifyThePreviousBtnInPersonalCareCategoryPageIsDisableWhenDisplayPage1() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        Assert.assertTrue(aeSportSupplementsCategoryPage.getDisabledPreviousPageBtn().isDisplayed());}\r\n    }\r\n\r\n    //There's a performance issue in the Navigation\r\n    @Test(description = \"Women's Only Category- Make Sure the Pagination control in the Personal Care Category page works correctly\", priority = 203)\r\n    public void verifyThePaginationControlInPersonalCareCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n            aeSportSupplementsCategoryPage.navigateToPage2InPersonalCarePage();\r\n            DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,5);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the previous page button In Personal Care Category Page works correctly\", priority = 204)\r\n    public void verifyPreviousPageBtnInPersonalCareCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPersonalCareCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnPreviousPageBtn();\r\n        Assert.assertFalse(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make Sure the next page button In Personal Care Category Page works correctly\", priority = 205)\r\n    public void verifyNextPageBtnInPersonalCareCategoryPageWorksCorrectly() {\r\n                AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);\r\n//        this.verifyThePaginationControlInPersonalCareCategoryPageWorksCorrectly();\r\n        String numberOfProductInTheList=aeSportSupplementsCategoryPage.getSearchResultValue().getText();\r\n        if(DataHelperAndWait.isTheresNoPages(numberOfProductInTheList))\r\n            System.out.println(\"There's no pages\");\r\n        else{\r\n        aeSportSupplementsCategoryPage.clickOnNextPageBtn();\r\n        DataHelperAndWait.waitForUrlContains(\"p=2\",webDriver,3);\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"p=2\"));}\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure all secure tabs appears correctly in the Personal Care category page(100% Secure Payments & Authentic Products & Fast Delivery Service blocks)\", priority = 206)\r\n    public void verifyAll3BlocksExistInThaPageBottomSectionAppearsCorrectlyInPersonalCareCategoryPage() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomSection().isDisplayed());\r\n        for (int i = 0; i < aeWomenOnlyCategoryPage.getPageBottomBlocksList().size(); i++) {\r\n            Assert.assertTrue(aeWomenOnlyCategoryPage.getPageBottomBlocksList().get(i).isDisplayed());\r\n            switch (i) {\r\n                case 0:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentTitle().getText(), \"100% Secure Payments\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getSecurePaymentDescription().getText(), \"Secure checkout verified by Norton VeriSign.\");\r\n                case 1:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsTitle().getText(), \"100% Authentic Products\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getAuthenticProductsDescription().getText(), \"We only deal with original products\");\r\n                case 2:\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryTitle().getText(), \"Fast Delivery Service\");\r\n                    Assert.assertEquals(aeWomenOnlyCategoryPage.getFastDeliveryDescription().getText(), \"Fast delivery, competitive prices and excellent services\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the Filtration Section is displayed in the Personal Care Category page\", priority = 207)\r\n    public void verifyFiltrationSectionIsDisplayedInPersonalCareCategoryPage() {\r\n        aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);\r\n//        this.verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly();\r\n        Assert.assertTrue(aeVitaminsAndHealthCategoryPage.getFiltrationSection().isDisplayed());\r\n    }\r\n\r\n    //Supplements For Her Widget Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure the Supplements For Her Widget is displayed in the Women's Only Category Page \", priority = 208)\r\n    public void verifySupplementsForHerWidgetIsDisplayedInTheWomenOnlySection() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeWomenOnlyCategoryPage.getSupplementsForHerSectionTitle().getText(), \"Supplements For Her\", \"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getSupplementsForHerSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the previous arrow icon is not appear by default in the Supplements For Her Widget \", priority = 209)\r\n    public void verifyPreviousArrowButtonInSupplementsForHerWidgetIsNotDisplayedByDefault() {\r\n        aeSportsCategoryPage = new AeSportsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertFalse(aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Next Button in the Supplements For Her Widget works correctly\", priority = 210)\r\n    public void verifyClickingOnNextIconInSupplementsForHerWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeSportsCategoryPage = new AeSportsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportsCategoryPage.getNextIconInRecommendedProductsSection().click();\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getLastProductInSupplementsForHerSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Previous Button in the Supplements For Her Widget works correctly\", priority = 211)\r\n    public void verifyClickingOnPreviousIconInSupplementsForHerWidgetWorksCorrectly() {\r\n        aeSportsCategoryPage = new AeSportsCategoryPage(webDriver);\r\n//        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeSportsCategoryPage.getNextIconInRecommendedProductsSection().click();\r\n        aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().click();\r\n        Assert.assertTrue(aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the product card in the Supplements For Her Widget works correctly \", priority = 212)\r\n    public void verifyClickingOnProductCardInsideSupplementsForHerWidgetWorksCorrectly() {\r\nAeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeWomenOnlyCategoryPage.getProductCardInSupplementsForHerSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on the View All button in the Supplements For Her Widget works correctly \", priority = 213)\r\n    public void verifyClickingOnViewAllBtnInsideSupplementsForHerWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeWomenOnlyCategoryPage.getViewAllInSupplementsForHerSection().getAttribute(\"href\");\r\n        aeWomenOnlyCategoryPage.getViewAllInSupplementsForHerSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl));\r\n    }\r\n\r\n    //Women's Vitamins Widget Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure the Women's Vitamins Widget is displayed in the Women's Only Category Page \", priority = 214)\r\n    public void verifyWomenVitaminsWidgetIsDisplayedInTheWomenOnlySection() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeWomenOnlyCategoryPage.getWomenVitaminsSectionTitle().getText(), \"Women's Vitamins\", \"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getWomenVitaminsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the previous arrow icon is not appear by default in the Women's Vitamins Widget \", priority = 215)\r\n    public void verifyPreviousArrowButtonInWomenVitaminsWidgetIsNotDisplayedByDefault() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        Assert.assertFalse(aeWomenOnlyCategoryPage.getPreviousIconInWomenVitaminsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Next Button in the Women's Vitamins Widget works correctly\", priority = 216)\r\n    public void verifyClickingOnNextIconInWomenVitaminsWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getNextIconInInWomenVitaminsSection().click();\r\n        Assert.assertFalse(aeWomenOnlyCategoryPage.getLastProductInWomenVitaminsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Previous Button in the Women's Vitamins Widget works correctly\", priority = 217)\r\n    public void verifyClickingOnPreviousIconInWomenVitaminsWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getNextIconInInWomenVitaminsSection().click();\r\n        aeWomenOnlyCategoryPage.getPreviousIconInWomenVitaminsSection().click();\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPreviousIconInWomenVitaminsSection().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the product card in the Women's Vitamins Widget works correctly \", priority = 218)\r\n    public void verifyClickingOnProductCardInsideWomenVitaminsWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeWomenOnlyCategoryPage.getProductCardInWomenVitaminsSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the View All button in the Women's Vitamins Widget works correctly \", priority = 219)\r\n    public void verifyClickingOnViewAllBtnInsideWomenVitaminsWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeWomenOnlyCategoryPage.getViewAllInWomenVitaminsSection().getAttribute(\"href\");\r\n        aeWomenOnlyCategoryPage.getViewAllInWomenVitaminsSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl));\r\n    }\r\n\r\n    //Workout In Style Widget Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure the Workout In Style Widget is displayed in the Women's Only Category Page \", priority = 220)\r\n    public void verifyWorkoutInStyleWidgetIsDisplayedInTheWomenOnlySection() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeWomenOnlyCategoryPage.getWorkoutInStyleSectionTitle().getText(), \"Workout In Style\", \"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getWorkoutInStyleSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the previous button is not appear by default in the Workout In Style Widget \", priority = 221)\r\n    public void verifyPreviousArrowButtonInWorkoutInStyleWidgetIsNotDisplayedByDefault() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection().click();\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPreviousIconInWorkoutInStyleSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Next Button in the Workout In Style Widget works correctly\", priority = 222)\r\n    public void verifyClickingOnNextIconInWorkoutInStyleWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        DataHelperAndWait.waitToBeVisible(aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection(),5,webDriver);\r\n        aeWomenOnlyCategoryPage.getPreviousIconInWorkoutInStyleSection().click();\r\n        DataHelperAndWait.waitToBeVisible(aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection(),5,webDriver);\r\n        aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection().click();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Previous Button in the Workout In Style Widget works correctly\", priority = 223)\r\n    public void verifyClickingOnPreviousIconInWorkoutInStyleWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getPreviousIconInWorkoutInStyleSection().click();\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection().isDisplayed());\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the product card in the Workout In Style Widget works correctly \", priority = 224)\r\n    public void verifyClickingOnProductCardInsideWorkoutInStyleWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeWomenOnlyCategoryPage.getProductCardInWorkoutInStyleSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the View All button in the Workout In Style Widget works correctly \", priority = 225)\r\n    public void verifyClickingOnViewAllBtnInsideWorkoutInStyleWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        String expectedCategoryUrl = aeWomenOnlyCategoryPage.getViewAllInWorkoutInStyleSection().getAttribute(\"href\");\r\n        aeWomenOnlyCategoryPage.getViewAllInWorkoutInStyleSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedCategoryUrl));\r\n    }\r\n\r\n    //Lady-Friendly Snacks & Food Widget Test Cases\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure the Lady-Friendly Snacks & Food Widget is displayed in the Women's Only Category Page \", priority = 226)\r\n    public void verifyLadyFriendlySnacksAndFoodWidgetIsDisplayedInTheWomenOnlySection() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeWomenOnlyCategoryPage.getLadyFriendlySnacksAndFoodSectionTitle().getText(), \"Lady-Friendly Snacks & Food\", \"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getLadyFriendlySnacksAndFoodSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure the previous arrow icon is not appear by default in the Lady-Friendly Snacks & Food Widget \", priority = 227)\r\n    public void verifyPreviousArrowButtonInLadyFriendlySnacksAndFoodWidgetIsNotDisplayedByDefault() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getNextIconInInLadyFriendlySnacksFoodSection().click();\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPreviousIconInLadyFriendlySnacksFoodSection().isDisplayed());\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Next Button in the Lady-Friendly Snacks & Food Widget works correctly\", priority = 228,expectedExceptions = { org.openqa.selenium.TimeoutException.class })\r\n    public void verifyClickingOnNextIconInLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n        aeWomenOnlyCategoryPage.getNextIconInInLadyFriendlySnacksFoodSection().click();\r\n        aeWomenOnlyCategoryPage.getNextIconInInLadyFriendlySnacksFoodSection().click();\r\n    }\r\n\r\n    @Test(description = \"Women's Only Category- Make sure clicking on Previous Button in the Lady-Friendly Snacks & Food Widget works correctly\", priority = 229)\r\n    public void verifyClickingOnPreviousIconInLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();\r\n//        aeWomenOnlyCategoryPage.getNextIconInInLadyFriendlySnacksFoodSection().click();\r\n        aeWomenOnlyCategoryPage.getPreviousIconInLadyFriendlySnacksFoodSection().click();\r\n        try{\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getPreviousIconInWorkoutInStyleSection().isDisplayed());}\r\n        catch (Exception e){\r\n            System.out.println(\"The Previous Button in the Lady-Friendly Snacks & Food Widget works correctly\");\r\n        }\r\n\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the product card in the Lady-Friendly Snacks & Food Widget works correctly \", priority = 230)\r\n    public void verifyClickingOnProductCardInsideLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeWomenOnlyCategoryPage.getProductCardInLadyFriendlySnacksFoodSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n    }\r\n\r\n    @Test(groups = {\"Women Only Category Page\",\"Smoke Testing Result\",\"High Severity\"},description = \"Women's Only Category- Make sure clicking on the View All button in the Lady-Friendly Snacks & Food Widget works correctly \", priority = 231)\r\n    public void verifyClickingOnViewAllBtnInsideLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        aeWomenOnlyCategoryPage.getViewAllInLadyFriendlySnacksFoodSection().click();\r\n        aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();\r\n        Assert.assertTrue(webDriver.getCurrentUrl().contains(\"ady-friendly-snacks-food\"));\r\n    }\r\n\r\n    //Female Gallery Widget Test Cases\r\n    @Test(description = \"Women's Only Category- Make sure the Female Gallery Widget is displayed in the Women's Only Category Page \", priority = 232)\r\n    public void verifyLadyFemaleGalleryWidgetIsDisplayedInTheWomenOnlySection() {\r\n        AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);\r\n        aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();\r\n        Assert.assertEquals(aeWomenOnlyCategoryPage.getFemaleGallerySectionTitle().getText(), \"FEMALE GALLERY\", \"The Recommended Products section incorrect title\");\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getFemaleGallerySection().isDisplayed());\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getFirstYouTubeVideo().isDisplayed());\r\n        Assert.assertTrue(aeWomenOnlyCategoryPage.getSecondYouTubeVideo().isDisplayed());\r\n    }\r\n   }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java b/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java
--- a/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java	(revision 94c3a7a484fedf670963315397170fe01bc3d3fc)
+++ b/src/test/java/sporter_test/AeWomenOnlyCategoryTestCases.java	(date 1673265422963)
@@ -36,7 +36,11 @@
             webDriver.navigate().to(BasePage.BaseURL+aeDomain);
             CloseInitialDialog();          }
     }
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure ability to access the Women's Only Category from the MegaMenu correctly", priority = 2)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure ability to access the Women's Only Category from the MegaMenu correctly", priority = 2)
+>>>>>>> origin/master
     public void verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL( ) {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         action = new Actions(webDriver);
@@ -48,7 +52,11 @@
         aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Women's Only Category from ShopBy Menu works correctly", priority = 3)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Women's Only Category from ShopBy Menu works correctly", priority = 3)
+>>>>>>> origin/master
     public void verifyClickingOnWomenOnlyCategoryFromShopByMenuRedirectUserToCorrectURL() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
             action = new Actions(webDriver);
@@ -139,7 +147,11 @@
     }
 
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure  clicking on the banners appear in rotating slider section works correctly", priority = 12)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure  clicking on the banners appear in rotating slider section works correctly", priority = 12)
+>>>>>>> origin/master
     public void verifyClickingOnTheBannersAppearingInRotatingSliderSectionWorksCorrectlyInTheWomenOnlyCategoryPage() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -152,7 +164,11 @@
         }
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure the clicking on the first side banner works correctly", priority = 13)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure the clicking on the first side banner works correctly", priority = 13)
+>>>>>>> origin/master
     public void verifyClickingOnTheFirstSideBannersWorksCorrectlyInTheWomenOnlyCategoryPage() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -165,7 +181,11 @@
         Assert.assertTrue(webDriver.getCurrentUrl().contains(expectedBannerUrl.substring(0, expectedBannerUrl.length() - 1)));
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the second side banner works correctly", priority = 14)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the second side banner works correctly", priority = 14)
+>>>>>>> origin/master
     public void verifyClickingOnTheSecondSideBannersWorksCorrectlyInTheWomenOnlyCategoryPage() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -188,7 +208,11 @@
     }
 
     //Supplements For Her Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Supplements For Her category inside Shop By Category section works correctly ", priority = 16)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Supplements For Her category inside Shop By Category section works correctly ", priority = 16)
+>>>>>>> origin/master
     public void verifyClickingOnSupplementsForHerCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -254,7 +278,11 @@
         Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Low Severity"},description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Supplements For Her Category Page ", priority = 21)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Supplements For Her Category Page ", priority = 21)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInSupplementsForHerCategoryPage() {
                 AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -355,7 +383,11 @@
     }
 
     //Women's Daily Vitamins Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Women's Daily Vitamins category inside Shop By Category section works correctly ", priority = 30)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Women's Daily Vitamins category inside Shop By Category section works correctly ", priority = 30)
+>>>>>>> origin/master
     public void verifyClickingOnWomenDailyVitaminsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -418,7 +450,11 @@
         Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Low Severity"},description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women's Daily Vitamins Category Page ", priority = 35)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Women's Daily Vitamins Category Page ", priority = 35)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInWomenDailyVitaminsCategoryPage() {
                 AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -516,7 +552,11 @@
     }
 
     //Lady-Friendly Snacks & Food Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Lady-Friendly Snacks & Food inside Shop By Category section works correctly ", priority = 44)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Lady-Friendly Snacks & Food inside Shop By Category section works correctly ", priority = 44)
+>>>>>>> origin/master
     public void verifyClickingOnLadyFriendlySnacksAndFoodCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
@@ -579,7 +619,11 @@
         Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Low Severity"},description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Lady-Friendly Snacks & Food Category Page ", priority = 49)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Lady-Friendly Snacks & Food Category Page ", priority = 49)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInLadyFriendlySnacksAndFoodCategoryPage() {
                 AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -666,7 +710,11 @@
     }
 
     //Makeup for Active Lifestyles Category page Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Makeup for Active Lifestyles inside Shop By Category section works correctly ", priority = 58)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Makeup for Active Lifestyles inside Shop By Category section works correctly ", priority = 58)
+>>>>>>> origin/master
     public void verifyClickingOnMakeupForActiveLifestylesCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -730,7 +778,11 @@
         Assert.assertTrue(aeSportSupplementsCategoryPage.getSportSupplementsCategoryImage().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Low Severity"},description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Makeup for Active Lifestyles Category Page ", priority = 63)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure that the customer can navigate to the home page using the BreadCrumb appearing in the Makeup for Active Lifestyles Category Page ", priority = 63)
+>>>>>>> origin/master
     public void verifyAbilityToNavigateToHomePageUsingTheBreadCrumbInMakeupForActiveLifestylesCategoryPage() {
                 AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeSportSupplementsCategoryPage = new AeSportSupplementsCategoryPage(webDriver);
@@ -831,7 +883,11 @@
     }
 
     //Shop By Goal Section Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure that Shop By Goal section is displayed correctly ", priority = 71)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure that Shop By Goal section is displayed correctly ", priority = 71)
+>>>>>>> origin/master
     public void verifyShopByGoalSectionIsDisplayedCorrectly() {
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
@@ -856,7 +912,11 @@
     }
 
     //Hair, Skin & Nails Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Hair, Skin & Nails Category inside Shop By Category section works correctly ", priority = 72)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Hair, Skin & Nails Category inside Shop By Category section works correctly ", priority = 72)
+>>>>>>> origin/master
     public void verifyClickingOnHairSkinAndNailsCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1022,7 +1082,11 @@
 
     //Weight Loss Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Weight Loss Category inside Shop By Category section works correctly ", priority = 86)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Weight Loss Category inside Shop By Category section works correctly ", priority = 86)
+>>>>>>> origin/master
     public void verifyClickingOnWeightLossCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1186,7 +1250,11 @@
     }
 
     //Mood Support Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Mood Support Category inside Shop By Category section works correctly ", priority = 100)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Mood Support Category inside Shop By Category section works correctly ", priority = 100)
+>>>>>>> origin/master
     public void verifyClickingOnMoodSupportCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1346,7 +1414,11 @@
     }
 
     //Detox & Cleanse Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Detox & Cleanse Category inside Shop By Category section works correctly ", priority = 114)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Detox & Cleanse Category inside Shop By Category section works correctly ", priority = 114)
+>>>>>>> origin/master
     public void verifyClickingOnDetoxAndCleanseCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1505,7 +1577,11 @@
     }
 
     //PMS Relief Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the PMS Relief Category inside Shop By Category section works correctly ", priority = 128)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the PMS Relief Category inside Shop By Category section works correctly ", priority = 128)
+>>>>>>> origin/master
     public void verifyClickingOnPMSReliefCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1681,7 +1757,11 @@
     }
 
     //Energy & Endurance Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Energy & Endurance Category inside Shop By Category section works correctly ", priority = 142)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Energy & Endurance Category inside Shop By Category section works correctly ", priority = 142)
+>>>>>>> origin/master
     public void verifyClickingOnEnergyAndEnduranceCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1830,7 +1910,11 @@
 
     //Prenatal Care Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Prenatal Care Category inside Shop By Category section works correctly ", priority = 155)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Prenatal Care Category inside Shop By Category section works correctly ", priority = 155)
+>>>>>>> origin/master
     public void verifyClickingOnPrenatalCareCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -1979,7 +2063,11 @@
 
     //Muscle & Weight Gain Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Muscle & Weight Gain Category inside Shop By Category section works correctly ", priority = 168)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Muscle & Weight Gain Category inside Shop By Category section works correctly ", priority = 168)
+>>>>>>> origin/master
     public void verifyClickingOnMuscleAndWeightGainCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -2130,7 +2218,11 @@
 
     //Fashion & Style Category Test Cases
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Fashion & Style Category inside Shop By Category section works correctly ", priority = 181)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Fashion & Style Category inside Shop By Category section works correctly ", priority = 181)
+>>>>>>> origin/master
     public void verifyClickingOnFashionAndStyleCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -2289,7 +2381,11 @@
     }
 
     //Personal Care Category Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","Critical Severity"},description = "Women's Only Category- Make sure clicking on the Personal Care Category inside Shop By Category section works correctly ", priority = 195)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the Personal Care Category inside Shop By Category section works correctly ", priority = 195)
+>>>>>>> origin/master
     public void verifyClickingOnPersonalCareCategoryInsideTheShopByCategorySectionWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeVitaminsAndHealthCategoryPage = new AeVitaminsAndHealthCategoryPage(webDriver);
@@ -2453,7 +2549,11 @@
     }
 
     //Supplements For Her Widget Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure the Supplements For Her Widget is displayed in the Women's Only Category Page ", priority = 208)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure the Supplements For Her Widget is displayed in the Women's Only Category Page ", priority = 208)
+>>>>>>> origin/master
     public void verifySupplementsForHerWidgetIsDisplayedInTheWomenOnlySection() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2486,7 +2586,11 @@
         Assert.assertTrue(aeSportsCategoryPage.getPreviousIconInRecommendedProductsSection().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the product card in the Supplements For Her Widget works correctly ", priority = 212)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the product card in the Supplements For Her Widget works correctly ", priority = 212)
+>>>>>>> origin/master
     public void verifyClickingOnProductCardInsideSupplementsForHerWidgetWorksCorrectly() {
 AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2505,7 +2609,11 @@
     }
 
     //Women's Vitamins Widget Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure the Women's Vitamins Widget is displayed in the Women's Only Category Page ", priority = 214)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure the Women's Vitamins Widget is displayed in the Women's Only Category Page ", priority = 214)
+>>>>>>> origin/master
     public void verifyWomenVitaminsWidgetIsDisplayedInTheWomenOnlySection() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2537,7 +2645,11 @@
         Assert.assertTrue(aeWomenOnlyCategoryPage.getPreviousIconInWomenVitaminsSection().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the product card in the Women's Vitamins Widget works correctly ", priority = 218)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the product card in the Women's Vitamins Widget works correctly ", priority = 218)
+>>>>>>> origin/master
     public void verifyClickingOnProductCardInsideWomenVitaminsWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();
@@ -2546,7 +2658,11 @@
         aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the View All button in the Women's Vitamins Widget works correctly ", priority = 219)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the View All button in the Women's Vitamins Widget works correctly ", priority = 219)
+>>>>>>> origin/master
     public void verifyClickingOnViewAllBtnInsideWomenVitaminsWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2557,7 +2673,11 @@
     }
 
     //Workout In Style Widget Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure the Workout In Style Widget is displayed in the Women's Only Category Page ", priority = 220)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure the Workout In Style Widget is displayed in the Women's Only Category Page ", priority = 220)
+>>>>>>> origin/master
     public void verifyWorkoutInStyleWidgetIsDisplayedInTheWomenOnlySection() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2591,7 +2711,11 @@
         Assert.assertTrue(aeWomenOnlyCategoryPage.getNextIconInInWorkoutInStyleSection().isDisplayed());
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the product card in the Workout In Style Widget works correctly ", priority = 224)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the product card in the Workout In Style Widget works correctly ", priority = 224)
+>>>>>>> origin/master
     public void verifyClickingOnProductCardInsideWorkoutInStyleWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         //        this.verifyClickingOnWomenOnlyCategoryAppearsInMegaMenuRedirectUserToCorrectURL();
@@ -2600,7 +2724,11 @@
         aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the View All button in the Workout In Style Widget works correctly ", priority = 225)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the View All button in the Workout In Style Widget works correctly ", priority = 225)
+>>>>>>> origin/master
     public void verifyClickingOnViewAllBtnInsideWorkoutInStyleWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2611,7 +2739,11 @@
     }
 
     //Lady-Friendly Snacks & Food Widget Test Cases
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure the Lady-Friendly Snacks & Food Widget is displayed in the Women's Only Category Page ", priority = 226)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure the Lady-Friendly Snacks & Food Widget is displayed in the Women's Only Category Page ", priority = 226)
+>>>>>>> origin/master
     public void verifyLadyFriendlySnacksAndFoodWidgetIsDisplayedInTheWomenOnlySection() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2649,7 +2781,11 @@
 
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the product card in the Lady-Friendly Snacks & Food Widget works correctly ", priority = 230)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the product card in the Lady-Friendly Snacks & Food Widget works correctly ", priority = 230)
+>>>>>>> origin/master
     public void verifyClickingOnProductCardInsideLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
@@ -2657,7 +2793,11 @@
         aeWomenOnlyCategoryPage.verifyTheDisplayedPageDoesNotHaveErrors();
     }
 
+<<<<<<< HEAD
     @Test(groups = {"Women Only Category Page","Smoke Testing Result","High Severity"},description = "Women's Only Category- Make sure clicking on the View All button in the Lady-Friendly Snacks & Food Widget works correctly ", priority = 231)
+=======
+    @Test(groups = "Smoke Testing Result",description = "Women's Only Category- Make sure clicking on the View All button in the Lady-Friendly Snacks & Food Widget works correctly ", priority = 231)
+>>>>>>> origin/master
     public void verifyClickingOnViewAllBtnInsideLadyFriendlySnacksAndFoodWidgetWorksCorrectly() {
         AeWomenOnlyCategoryPage aeWomenOnlyCategoryPage = new AeWomenOnlyCategoryPage(webDriver);
         aeWomenOnlyCategoryPage.navigateToWomenOnlyPage();
